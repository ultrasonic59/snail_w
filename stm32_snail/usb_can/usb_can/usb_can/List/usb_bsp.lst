###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.1.212/W32 for ARM         07/Jun/2021  19:45:11
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        D:\proj\velograph\snail\stm32_snail\usb_can\common\usb\usb_bsp.c
#    Command line =
#        -f C:\Users\vova\AppData\Local\Temp\EWE755.tmp
#        (D:\proj\velograph\snail\stm32_snail\usb_can\common\usb\usb_bsp.c -D
#        VECT_TAB_FLASH -D IAR_ARM_CM3 -D USEUSB -D MSTEP_BRD -D USE_USB_OTG_FS
#        -lcN D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\usb_can\List
#        --diag_suppress Pa082,pe191 -o
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\usb_can\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.3\arm\inc\c\DLib_Config_Full.h"
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\.\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\src\board\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\freertos\source\inc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\src\inc\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\freertos\source\port\ARM_CM3\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\libraries\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\libraries\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\dbg\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\libraries\STM32F2xx_StdPeriph_Driver\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\usb\core\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\usb\drv\inc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\usb\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\usb\inc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\hdlc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\..\common\usb\cdc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\src\my_grbl\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.3\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\usb_can\List\usb_bsp.lst
#    Object file  =
#        D:\proj\velograph\snail\stm32_snail\usb_can\usb_can\usb_can\Obj\usb_bsp.o
#
###############################################################################

D:\proj\velograph\snail\stm32_snail\usb_can\common\usb\usb_bsp.c
      1          /**
      2            ******************************************************************************
      3            * @file    usb_bsp.c
      4            * @author  MCD Application Team
      5            * @version V1.2.0
      6            * @date    09-November-2015
      7            * @brief   This file is responsible to offer board support package and is 
      8            *          configurable by user.
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
     13            *
     14            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     15            * You may not use this file except in compliance with the License.
     16            * You may obtain a copy of the License at:
     17            *
     18            *        http://www.st.com/software_license_agreement_liberty_v2
     19            *
     20            * Unless required by applicable law or agreed to in writing, software 
     21            * distributed under the License is distributed on an "AS IS" BASIS, 
     22            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     23            * See the License for the specific language governing permissions and
     24            * limitations under the License.
     25            *
     26            ******************************************************************************
     27            */ 
     28          
     29          /* Includes ------------------------------------------------------------------*/
     30          
     31            #include "stm32f2xx.h"
     32            #include "stm32f2xx_conf.h"
     33          #include "usb_bsp.h"
     34          #include "FreeRTOS.h"
     35          #include "task.h"
     36          #include "semphr.h"
     37          
     38          
     39          
     40          /**
     41          * @brief  USB_OTG_BSP_Init
     42          *         Initializes BSP configurations
     43          * @param  None
     44          * @retval None
     45          */
     46          
     47          void USB_OTG_BSP_Init(USB_OTG_CORE_HANDLE *pdev)
     48          {
     49            GPIO_InitTypeDef GPIO_InitStructure;    
     50            
     51            RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_GPIOA , ENABLE);  
     52            
     53             /* Configure SOF ID DM DP Pins */
     54            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 | 
     55                                          GPIO_Pin_12;
     56            
     57            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
     58            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
     59            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
     60            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
     61            GPIO_Init(GPIOA, &GPIO_InitStructure);  
     62            
     63            GPIO_PinAFConfig(GPIOA,GPIO_PinSource11,GPIO_AF_OTG1_FS) ; 
     64            GPIO_PinAFConfig(GPIOA,GPIO_PinSource12,GPIO_AF_OTG1_FS) ;
     65             
     66            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
     67            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_OTG_FS, ENABLE) ; 
     68           
     69            
     70            /* enable the PWR clock */
     71            RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);   
     72            
     73           //// EXTI_ClearITPendingBit(KEY_BUTTON_EXTI_LINE);  
     74          }
     75          /**
     76          * @brief  USB_OTG_BSP_EnableInterrupt
     77          *         Enable USB Global interrupt
     78          * @param  None
     79          * @retval None
     80          */
     81          void USB_OTG_BSP_EnableInterrupt(USB_OTG_CORE_HANDLE *pdev)
     82          {
     83            NVIC_InitTypeDef NVIC_InitStructure; 
     84            
     85          ////  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
     86            NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn;  
     87            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_KERNEL_INTERRUPT_PRIORITY;///0x6;
     88            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;///3;
     89            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
     90            NVIC_Init(&NVIC_InitStructure);  
     91          }
     92          /**
     93          * @brief  USB_OTG_BSP_uDelay
     94          *         This function provides delay time in micro sec
     95          * @param  usec : Value of delay required in micro sec
     96          * @retval None
     97          */
     98          void USB_OTG_BSP_uDelay (const uint32_t usec)
     99          {
    100            uint32_t count = 0;
    101            const uint32_t utime = (120 * usec / 7);
    102            do
    103            {
    104              if ( ++count > utime )
    105              {
    106                return ;
    107              }
    108            }
    109            while (1);
    110          }
    111          
    112          
    113          /**
    114          * @brief  USB_OTG_BSP_mDelay
    115          *          This function provides delay time in milli sec
    116          * @param  msec : Value of delay required in milli sec
    117          * @retval None
    118          */
    119          void USB_OTG_BSP_mDelay (const uint32_t msec)
    120          {
    121            USB_OTG_BSP_uDelay(msec * 1000);   
    122          }
    123          
    124          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   USB_OTG_BSP_EnableInterrupt
        16   -> NVIC_Init
      24   USB_OTG_BSP_Init
        24   -> GPIO_Init
        24   -> GPIO_PinAFConfig
        24   -> RCC_AHB1PeriphClockCmd
        24   -> RCC_AHB2PeriphClockCmd
        24   -> RCC_APB1PeriphClockCmd
        24   -> RCC_APB2PeriphClockCmd
       8   USB_OTG_BSP_mDelay
         8   -> USB_OTG_BSP_uDelay
       0   USB_OTG_BSP_uDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      36  USB_OTG_BSP_EnableInterrupt
     102  USB_OTG_BSP_Init
      18  USB_OTG_BSP_mDelay
      24  USB_OTG_BSP_uDelay

 
 184 bytes in section .text
 
 184 bytes of CODE memory

Errors: none
Warnings: none
