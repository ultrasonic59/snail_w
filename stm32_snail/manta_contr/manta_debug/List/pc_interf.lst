###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.1.212/W32 for ARM         01/Dec/2020  16:53:02
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        D:\proj\velograph\manta\contr\arm\manta_contr\src\bt\pc_interf.c
#    Command line =
#        -f C:\Users\vova\AppData\Local\Temp\EWBE46.tmp
#        (D:\proj\velograph\manta\contr\arm\manta_contr\src\bt\pc_interf.c -D
#        VECT_TAB_FLASH -D IAR_ARM_CM3 -lcN
#        D:\proj\velograph\manta\contr\arm\manta_contr\manta_debug\List
#        --diag_suppress Pa082,pe191 -o
#        D:\proj\velograph\manta\contr\arm\manta_contr\manta_debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Full.h" -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\.\ -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\src\board\ -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\freertos\source\inc\
#        -I D:\proj\velograph\manta\contr\arm\manta_contr\src\inc\ -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\freertos\source\port\ARM_CM3\
#        -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\libraries\STM32F2xx_StdPeriph_Driver\
#        -I D:\proj\velograph\manta\contr\arm\manta_contr\..\common\dbg\ -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\inc\ -I
#        D:\proj\velograph\manta\contr\arm\manta_contr\..\common\hdlc\ -On
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.3\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        D:\proj\velograph\manta\contr\arm\manta_contr\manta_debug\List\pc_interf.lst
#    Object file  =
#        D:\proj\velograph\manta\contr\arm\manta_contr\manta_debug\Obj\pc_interf.o
#
###############################################################################

D:\proj\velograph\manta\contr\arm\manta_contr\src\bt\pc_interf.c
      1          #include <stdint.h>
      2          #include <string.h>
      3          
      4          #include "_hdlc.h"
      5          #include "board.h"
      6          #include "bt_cmd.h"
      7          #include "printk.h"
      8          
      9          ///=================================================
     10          int pc_set_rec_dat(uint8_t cmd,void *in_buf)
     11          {
     12          ///uint16_t n_bytes;
     13          ///uint16_t num_bytes;
     14          ////uint8_t *bbuf=(u8*)in_buf;
     15          int rez=0;
     16          //// ====================================
     17          /// _printk("\n\r pc_set_rec_dat[%x]",cmd);
     18          ///=================================
     19          ////return 0;
     20          switch(cmd)
     21          	{
     22          	case NUM_SET_CNGEN:		/// 
     23          ////		curr_par_trk.dop_par.curr_gen = *((u8*)(in_buf)+2);
     24          		break;	
     25          	case NUM_SET_CNUS:			/// 
     26          ////		curr_par_trk.dop_par.curr_us = *((u8*)(in_buf)+2);
     27          		break;	
     28           	}
     29          return rez;
     30          }
     31          ///=====================================================
     32          uint16_t	pc_get_req_dat(u8 num_req,u16 offs,u8 *buf)
     33          {
     34          uint16_t rez=0;
     35          #if 0
     36          //// ====================================
     37          if((num_req!= 0x2c)&&(num_req!= 0x2d)&&(num_req!= 0x2e))
     38          {
     39            _printk("\n\r pc_get_req_dat[%x]",num_req);
     40          }
     41          ///=================================
     42          #endif
     43          /////_printk("<");
     44          #if 1
     45          switch(num_req)
     46          	{
     47          	case GET_COORD:
     48                          memcpy(buf,(const void*)&cur_dp_dat,sizeof(dp_dat_t));
     49          		rez=sizeof(dp_dat_t);
     50          		break;
     51          	case CLR_COORD:
     52                          memset(&cur_dp_dat,0,sizeof(dp_dat_t));
     53                          clr_all_dp();
     54          		rez=1;
     55          		break;
     56          	default:
     57                    printk("z[%x]!",num_req);
     58                    rez=0;
     59                    break;
     60                          
     61          	}
     62          #endif
     63          return rez;
     64          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   pc_get_req_dat
        32   -> __aeabi_memcpy
        32   -> __aeabi_memset
        32   -> _printk
        32   -> clr_all_dp
       0   pc_set_rec_dat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       8  ?_0
      98  pc_get_req_dat
      22  pc_set_rec_dat

 
   8 bytes in section .rodata
 128 bytes in section .text
 
 128 bytes of CODE  memory
   8 bytes of CONST memory

Errors: none
Warnings: none
