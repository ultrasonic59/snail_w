###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.1.212/W32 for ARM         15/Sep/2021  14:34:12
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  D:\proj\velograph\snail\stm32_snail\common\usb\usb_thr.c
#    Command line =
#        -f C:\Users\vova\AppData\Local\Temp\EW5ACF.tmp
#        (D:\proj\velograph\snail\stm32_snail\common\usb\usb_thr.c -D
#        VECT_TAB_FLASH -D IAR_ARM_CM3 -D USEUSB -D MSTEP_BRD -D USE_USB_OTG_FS
#        -D STM32F205xx -lcN
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\usb_can\List
#        --diag_suppress Pa082,pe191 -o
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\usb_can\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Full.h" -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\.\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\src\board\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\freertos\source\inc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can_dima\src\inc\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\freertos\source\port\ARM_CM3\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\libraries\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\libraries\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\dbg\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\usb\core\inc\
#        -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\usb\drv\inc\
#        -I D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\usb\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\usb\inc\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\hdlc\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\..\common\usb\cdc\ -I
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\src\my_grbl\ -On
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.3\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.3\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\usb_can\List\usb_thr.lst
#    Object file  =
#        D:\proj\velograph\snail\stm32_snail\usb_can_dima\usb_can\Obj\usb_thr.o
#
###############################################################################

D:\proj\velograph\snail\stm32_snail\common\usb\usb_thr.c
      1          #include <stdint.h>
      2            #include "stm32f2xx.h"
      3            #include "stm32f2xx_conf.h"
      4          
      5          #include "my_types.h"
      6          #include "FreeRTOS.h"
      7          #include "task.h"
      8          #include "queue.h"
      9          ////#include "my_misc.h"
     10          #include "printk.h"
     11          
     12          #include "usbd_conf.h"
     13          #include "usbd_desc.h"
     14          
     15          #include "usb_dcd_int.h"
     16          
     17          extern uint32_t USBD_OTG_ISR_Handler (USB_OTG_CORE_HANDLE *pdev);
     18          #if 1
     19          xQueueHandle q_usb_in = 0;
     20          ///usb_req_t
     21          void usb_thread( void *arg )
     22          {
     23          ////USB_OTG_CORE_HANDLE *pdev;  
     24           usb_req_t t_usb_req; 
     25           for(;;)
     26           {
     27            msleep(20); 
     28           ;  
     29           }
     30          q_usb_in  = xQueueCreate(80,sizeof(usb_req_t));
     31          for(;;)
     32            {
     33            xQueueReceive(q_usb_in,&t_usb_req,portMAX_DELAY);
     34            if(t_usb_req.in_out==0)       ///out
     35              USBD_DCD_INT_fops->DataOutStage((void*)t_usb_req.addr_dev , t_usb_req.num_point);
     36            else  ///in
     37              USBD_DCD_INT_fops->DataInStage((void*)t_usb_req.addr_dev , t_usb_req.num_point);
     38           
     39          ////  USBD_OTG_ISR_Handler(pdev) ; 
     40          ///  _printk("U");
     41            }
     42          }
     43          #endif
     44          
     45          void my_USBD_OTG_ISR_Handler (USB_OTG_CORE_HANDLE *pdev)
     46          {
     47          ////signed portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;
     48          ///xQueueSendFromISR(q_usb_in, pdev, &xHigherPriorityTaskWoken);
     49           USBD_OTG_ISR_Handler(pdev) ; 
     50          }
     51          ///=======================================================
     52          void USB_OTG_EnableSuspend(USB_OTG_CORE_HANDLE *pdev)
     53          {
     54          USB_OTG_GINTMSK_TypeDef  int_mask;
     55            
     56          int_mask.d32 = 0;
     57          /* Enable the interrupts in the INTMSK */
     58          int_mask.b.usbsuspend = 1; 
     59          USB_OTG_MODIFY_REG32( &pdev->regs.GREGS->GINTMSK, int_mask.d32,NULL);
     60          }
     61          void USB_OTG_DisableSuspend(USB_OTG_CORE_HANDLE *pdev)
     62          {
     63          USB_OTG_GINTMSK_TypeDef  int_mask;
     64          int_mask.d32 = 0;
     65          int_mask.b.usbsuspend = 1; 
     66          USB_OTG_MODIFY_REG32( &pdev->regs.GREGS->GINTMSK,NULL, int_mask.d32);
     67          }
     68          
     69          
     70          
     71          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   USB_OTG_DisableSuspend
       0   USB_OTG_EnableSuspend
       8   my_USBD_OTG_ISR_Handler
         8   -> USBD_OTG_ISR_Handler
       8   usb_thread
         8   -> vTaskDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      18  USB_OTG_DisableSuspend
      18  USB_OTG_EnableSuspend
      12  my_USBD_OTG_ISR_Handler
       4  q_usb_in
      12  usb_thread

 
  4 bytes in section .bss
 60 bytes in section .text
 
 60 bytes of CODE memory
  4 bytes of DATA memory

Errors: none
Warnings: 1
