###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         11/Feb/2023  20:01:01
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\my_misc.c
#    Command line      =
#        -f
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o.rsp
#        (D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\my_misc.c
#        -D VECT_TAB_FLASH -D IAR_ARM_CM3 -D DIMA_BRD -D STEP_X -D STM32F205xx
#        -lcN
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\List\Board
#        --diag_suppress Pa082,pe191 -o
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\.\ -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\board\ -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\freertos\source\inc\
#        -I D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\freertos\source\port\ARM_CM3\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\dbg\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\usb\drv\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\board\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\my_grbl\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\can\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o.d
#    Locale            =  C
#    List file         =
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\List\Board\my_misc.lst
#    Object file       =
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\my_misc.c
      1          #include <stdint.h>
      2          #include "board.h"
      3          #include "my_misc.h"
      4          
      5          #include <cmsis_iccarm.h>
      6          ///=======================================================================
      7          void uDelay (const uint32_t usec)
      8          {
      9          uint32_t count = 0;
     10          const uint32_t utime = 45*usec;////(120 * usec / 7);
     11          do
     12            {
     13             if ( ++count > utime )
     14              {
     15              return ;
     16              }
     17            }
     18          while (1);
     19          }
     20          ///=======================================================================
     21          
     22          pFunction Jump_To_Application;
     23          uint32_t JumpAddress;
     24          
     25          void goto_booter(void)
     26          {
     27          JumpAddress = *(__IO uint32_t*) (BOOT_BASE_ADDRESS + 4);
     28          Jump_To_Application = (pFunction)JumpAddress;
     29          /* Initialize user application's Stack Pointer */
     30          __set_MSP(*(__IO uint32_t*) BOOT_BASE_ADDRESS);
     31          Jump_To_Application();
     32            
     33          }
     34          void goto_app(void)
     35          {
     36          JumpAddress = *(__IO uint32_t*) (APP_BASE_ADDRESS + 4);
     37          Jump_To_Application = (pFunction)JumpAddress;
     38          /* Initialize user application's Stack Pointer */
     39          __set_MSP(*(__IO uint32_t*) APP_BASE_ADDRESS);
     40          Jump_To_Application();
     41            
     42          }
     43             

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   goto_app
         8   -- Indirect call
       8   goto_booter
         8   -- Indirect call
       0   uDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  JumpAddress
       4  Jump_To_Application
      32  goto_app
      30  goto_booter
      18  uDelay

 
   8 bytes in section .bss
 100 bytes in section .text
 
 100 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
