###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         14/Feb/2023  21:04:52
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\proj\velograph\snail_w\stm32_snail\common\my_misc\my_misc.c
#    Command line      =
#        -f
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o.rsp
#        (D:\proj\velograph\snail_w\stm32_snail\common\my_misc\my_misc.c -D
#        VECT_TAB_FLASH -D IAR_ARM_CM3 -D DIMA_BRD -D STEP_X -D STM32F205xx
#        -lcN
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\List\Board
#        --diag_suppress Pa082,pe191 -o
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\.\ -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\board\ -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\freertos\source\inc\
#        -I D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\src\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\freertos\source\port\ARM_CM3\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\libraries\STM32F2xx_StdPeriph_Driver\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\dbg\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\usb\drv\inc\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\board\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\my_grbl\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\can\
#        -I
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\..\common\my_misc\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o.d
#    Locale            =  C
#    List file         =
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\List\Board\my_misc.lst
#    Object file       =
#        D:\proj\velograph\snail_w\stm32_snail\app_step_axis_dima\app_step_x_dbg\Obj\Board\my_misc.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\proj\velograph\snail_w\stm32_snail\common\my_misc\my_misc.c
      1          #include <stdint.h>
      2          #include "board.h"
      3          #include "my_misc.h"
      4          
      5          ////#include <cmsis_iccarm.h>
      6          #include "printk.h"
      7          ///=======================================================================
      8          void uDelay (const uint32_t usec)
      9          {
     10          uint32_t count = 0;
     11          const uint32_t utime = 45*usec;////(120 * usec / 7);
     12          do
     13            {
     14             if ( ++count > utime )
     15              {
     16              return ;
     17              }
     18            }
     19          while (1);
     20          }
     21          ///=======================================================================
     22          
     23          pFunction Jump_To_Application;
     24          uint32_t jumpAddress;
     25          
     26          void goto_booter(void)
     27          {
     28          __disable_irq();
     29          NVIC_SetVectorTable(NVIC_VectTab_FLASH, BOOT_BASE_ADDRESS);
     30            
     31          jumpAddress = *(__IO uint32_t*) (BOOT_BASE_ADDRESS + 4);
     32          ////Jump_To_Application = (pFunction)JumpAddress;
     33          ////printk(" Jamp addres=[%x:%x]\r\n",jumpAddress,BOOT_BASE_ADDRESS);	
     34             Jump_To_Application = (pFunction) jumpAddress;
     35          /* Initialize user application's Stack Pointer */
     36          __set_CONTROL(0) ;
     37          __set_MSP(*(__IO uint32_t*) BOOT_BASE_ADDRESS);
     38          Jump_To_Application();
     39            
     40          }
     41          void goto_app(void)
     42          {
     43          ////uint32_t sp_tst=0;  
     44          __disable_irq();
     45          NVIC_SetVectorTable(NVIC_VectTab_FLASH, APP_BASE_ADDRESS);
     46          jumpAddress = *(__IO uint32_t*) (APP_BASE_ADDRESS + 4);
     47          ////sp_tst= *(__IO uint32_t*) (APP_BASE_ADDRESS);
     48          ///printk(" Jamp addres=[%x:%x:%x]\r\n",jumpAddress,APP_BASE_ADDRESS,sp_tst);	
     49          ///printk(" Jamp addres=[%x:%x:%x]\r\n",jumpAddress,APP_BASE_ADDRESS,sp_tst);	
     50          ///printk(" Jamp addres=[%x:%x:%x]\r\n",jumpAddress,APP_BASE_ADDRESS,sp_tst);	
     51          ////printk(" Jamp addres=[%x:%x:%x]\r\n",jumpAddress,APP_BASE_ADDRESS,sp_tst);	
     52          Jump_To_Application = (pFunction)jumpAddress;
     53          /* Initialize user application's Stack Pointer */
     54          __set_CONTROL(0) ;
     55          __set_MSP(*(__IO uint32_t*) APP_BASE_ADDRESS);
     56          Jump_To_Application();
     57            
     58          }
     59             

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   goto_app
         8   -- Indirect call
         8   -> NVIC_SetVectorTable
       8   goto_booter
         8   -- Indirect call
         8   -> NVIC_SetVectorTable
       0   uDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  Jump_To_Application
      52  goto_app
      48  goto_booter
       4  jumpAddress
      18  uDelay

 
   8 bytes in section .bss
 138 bytes in section .text
 
 138 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
