; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\reset-f1c100s.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\reset-f1c100s.d --cpu=ARM9E --apcs=interwork -O3 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V2 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\reset-f1c100s.crf ..\periph\reset-f1c100s.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  reset_f1c100s_assert PROC
;;;27     
;;;28     void reset_f1c100s_assert(reset_f1c100s_t* reset, int32_t offset)
000000  e5902008          LDR      r2,[r0,#8]
;;;29     {
;;;30       uint32_t val;
;;;31     
;;;32       if (offset >= reset->nreset)
000004  e1520001          CMP      r2,r1
;;;33         return;
;;;34     
;;;35       val = read32(reset->virt);
;;;36       val &= ~(1 << offset);
;;;37       write32(reset->virt, val);
;;;38     }
000008  d12fff1e          BXLE     lr
00000c  e5900000          LDR      r0,[r0,#0]            ;35
000010  e3a03001          MOV      r3,#1                 ;36
000014  e5902000          LDR      r2,[r0,#0]            ;36
000018  e1c21113          BIC      r1,r2,r3,LSL r1       ;36
00001c  e5801000          STR      r1,[r0,#0]            ;37
000020  e12fff1e          BX       lr
;;;39     
                          ENDP

                  reset_f1c100s_deassert PROC
;;;40     void reset_f1c100s_deassert(reset_f1c100s_t* reset, int32_t offset)
000024  e5902008          LDR      r2,[r0,#8]
;;;41     {
;;;42       uint32_t val;
;;;43     
;;;44       if (offset >= reset->nreset)
000028  e1520001          CMP      r2,r1
;;;45         return;
;;;46     
;;;47       val = read32(reset->virt);
;;;48       val |= (1 << offset);
;;;49       write32(reset->virt, val);
;;;50     }
00002c  d12fff1e          BXLE     lr
000030  e5900000          LDR      r0,[r0,#0]            ;47
000034  e3a03001          MOV      r3,#1                 ;48
000038  e5902000          LDR      r2,[r0,#0]            ;48
00003c  e1821113          ORR      r1,r2,r3,LSL r1       ;48
000040  e5801000          STR      r1,[r0,#0]            ;49
000044  e12fff1e          BX       lr
                          ENDP

