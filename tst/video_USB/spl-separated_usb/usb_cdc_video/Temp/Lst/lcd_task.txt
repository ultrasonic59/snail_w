; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\lcd_task.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\lcd_task.d --cpu=ARM9E --apcs=interwork -O0 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -I.\..\display -I.\..\lib\display_gfx -I.\..\lib\printf -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V1 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\lcd_task.crf users\lcd_task.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  lcd_task PROC
;;;17      
;;;18     void lcd_task(void)
000000  e92d4008          PUSH     {r3,lr}
;;;19     {
;;;20     uint32_t *p_val;
;;;21     	
;;;22     lcd_init(1); // Layer 1 - overlay
000004  e3a00001          MOV      r0,#1
000008  ebfffffe          BL       lcd_init
;;;23      ////   lcd_init(0); // Layer 1 - overlay
;;;24         lcd_fill(0, 0, DISPLAY_W, DISPLAY_H, COLOR_TRANSPARENT);
00000c  e3a00000          MOV      r0,#0
000010  e3a03f96          MOV      r3,#0x258
000014  e3a02e32          MOV      r2,#0x320
000018  e58d0000          STR      r0,[sp,#0]
00001c  e1a01000          MOV      r1,r0
000020  ebfffffe          BL       lcd_fill
;;;25         lcd_set_bg_color(0x80000000);
000024  e3a00102          MOV      r0,#0x80000000
000028  ebfffffe          BL       lcd_set_bg_color
;;;26         lcd_set_text_color(COLOR_WHITE);
00002c  e3e00000          MVN      r0,#0
000030  ebfffffe          BL       lcd_set_text_color
;;;27         lcd_set_text_pos(200, 0);
000034  e3a01000          MOV      r1,#0
000038  e3a000c8          MOV      r0,#0xc8
00003c  ebfffffe          BL       lcd_set_text_pos
;;;28         lcd_printf("PAL");
000040  e28f2f41          ADR      r2,|L1.332|
000044  e3a01000          MOV      r1,#0
000048  e59f0100          LDR      r0,|L1.336|
00004c  ebfffffe          BL       fctprintf
;;;29     while(1) {
000050  ea000039          B        |L1.316|
                  |L1.84|
;;;30             lcd_set_text_pos(600, 0);
000054  e3a01000          MOV      r1,#0
000058  e3a00f96          MOV      r0,#0x258
00005c  ebfffffe          BL       lcd_set_text_pos
;;;31             uint32_t val = read32(TVD_BASE + TVD_STATE_0);
000060  e59f00ec          LDR      r0,|L1.340|
000064  ebfffffe          BL       read32
000068  e1a05000          MOV      r5,r0
;;;32             lcd_printf("%08lX\n", val);
00006c  e1a03005          MOV      r3,r5
000070  e28f20e0          ADR      r2,|L1.344|
000074  e3a01000          MOV      r1,#0
000078  e59f00d0          LDR      r0,|L1.336|
00007c  ebfffffe          BL       fctprintf
;;;33             val = read32(TVD_BASE + TVD_STATE_1);
000080  e59f00d8          LDR      r0,|L1.352|
000084  ebfffffe          BL       read32
000088  e1a05000          MOV      r5,r0
;;;34             lcd_printf("%08lX\n", val);
00008c  e1a03005          MOV      r3,r5
000090  e28f20c0          ADR      r2,|L1.344|
000094  e3a01000          MOV      r1,#0
000098  e59f00b0          LDR      r0,|L1.336|
00009c  ebfffffe          BL       fctprintf
;;;35             val = read32(TVD_BASE + TVD_STATE_2);
0000a0  e59f00bc          LDR      r0,|L1.356|
0000a4  ebfffffe          BL       read32
0000a8  e1a05000          MOV      r5,r0
;;;36             lcd_printf("ST2=%08lX\n", val);
0000ac  e1a03005          MOV      r3,r5
0000b0  e28f20b0          ADR      r2,|L1.360|
0000b4  e3a01000          MOV      r1,#0
0000b8  e59f0090          LDR      r0,|L1.336|
0000bc  ebfffffe          BL       fctprintf
;;;37             val = read32(TVD_BASE + TVD_STATE_3);
0000c0  e59f00ac          LDR      r0,|L1.372|
0000c4  ebfffffe          BL       read32
0000c8  e1a05000          MOV      r5,r0
;;;38             lcd_printf("%08lX\n", val);
0000cc  e1a03005          MOV      r3,r5
0000d0  e28f2080          ADR      r2,|L1.344|
0000d4  e3a01000          MOV      r1,#0
0000d8  e59f0070          LDR      r0,|L1.336|
0000dc  ebfffffe          BL       fctprintf
;;;39             val = read32(TVD_BASE + TVD_STATE_4);
0000e0  e59f0090          LDR      r0,|L1.376|
0000e4  ebfffffe          BL       read32
0000e8  e1a05000          MOV      r5,r0
;;;40             lcd_printf("%08lX\n", val);
0000ec  e1a03005          MOV      r3,r5
0000f0  e28f2060          ADR      r2,|L1.344|
0000f4  e3a01000          MOV      r1,#0
0000f8  e59f0050          LDR      r0,|L1.336|
0000fc  ebfffffe          BL       fctprintf
;;;41     	////====================================
;;;42     	p_val= (uint32_t *)&fb_c[4420];
000100  e59f4074          LDR      r4,|L1.380|
;;;43             val = *p_val;
000104  e5945000          LDR      r5,[r4,#0]
;;;44             lcd_printf("%08lX\n", val);
000108  e1a03005          MOV      r3,r5
00010c  e28f2044          ADR      r2,|L1.344|
000110  e3a01000          MOV      r1,#0
000114  e59f0034          LDR      r0,|L1.336|
000118  ebfffffe          BL       fctprintf
;;;45     	p_val= (uint32_t *)&fb_y[4420];
00011c  e59f405c          LDR      r4,|L1.384|
;;;46             val = *p_val;
000120  e5945000          LDR      r5,[r4,#0]
;;;47             lcd_printf("%08lX\n", val);
000124  e1a03005          MOV      r3,r5
000128  e28f2028          ADR      r2,|L1.344|
00012c  e3a01000          MOV      r1,#0
000130  e59f0018          LDR      r0,|L1.336|
000134  ebfffffe          BL       fctprintf
;;;48         }
000138  e1a00000          MOV      r0,r0
                  |L1.316|
00013c  eaffffc4          B        |L1.84|
;;;49     }
                          ENDP

                  read32 PROC
;;;19     
;;;20     static __inline uint32_t read32(uint32_t addr)
000140  e1a01000          MOV      r1,r0
;;;21     {
;;;22       return (*((volatile uint32_t*)(addr)));
000144  e5910000          LDR      r0,[r1,#0]
;;;23     }
000148  e12fff1e          BX       lr
;;;24     
                          ENDP

                  |L1.332|
00014c  50414c00          DCB      "PAL",0
                  |L1.336|
                          DCD      lcd_out
                  |L1.340|
                          DCD      0x01c0be40
                  |L1.344|
000158  2530386c          DCB      "%08lX\n",0
00015c  580a00  
00015f  00                DCB      0
                  |L1.352|
                          DCD      0x01c0be44
                  |L1.356|
                          DCD      0x01c0be48
                  |L1.360|
000168  5354323d          DCB      "ST2=%08lX\n",0
00016c  2530386c
000170  580a00  
000173  00                DCB      0
                  |L1.372|
                          DCD      0x01c0be4c
                  |L1.376|
                          DCD      0x01c0be50
                  |L1.380|
                          DCD      fb_c+0x1144
                  |L1.384|
                          DCD      fb_y+0x1144
