; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\video_task.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\video_task.d --cpu=ARM9E --apcs=interwork -O0 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -I.\..\display -I.\..\lib\display_gfx -I.\..\lib\printf -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V1 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\video_task.crf users\video_task.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  board_millis PROC
;;;15     
;;;16     uint32_t board_millis(void)
000000  e59f00e8          LDR      r0,|L1.240|
;;;17     {
;;;18     ////  return os_time_get();
;;;19     return 	sys_tick;
000004  e5900000          LDR      r0,[r0,#0]  ; os_time
;;;20     }
000008  e12fff1e          BX       lr
;;;21     #if 0
                          ENDP

                  video_tsk PROC
;;;110    
;;;111    void video_tsk(void)
00000c  e92d4010          PUSH     {r4,lr}
;;;112    {
;;;113      static unsigned start_ms = 0;
;;;114      static unsigned already_sent = 0;
;;;115    ////tu_printf("\r\n======video_task=============");
;;;116    
;;;117      if (!tud_video_n_streaming(0, 0)) {
000010  e3a01000          MOV      r1,#0
000014  e1a00001          MOV      r0,r1
000018  ebfffffe          BL       tud_video_n_streaming
00001c  e3500000          CMP      r0,#0
000020  1a000003          BNE      |L1.52|
;;;118        already_sent  = 0;
000024  e3a00000          MOV      r0,#0
000028  e59f10c4          LDR      r1,|L1.244|
00002c  e5810000          STR      r0,[r1,#0]  ; already_sent
                  |L1.48|
;;;119     ////   frame_num     = 0;
;;;120        return;
;;;121      }
;;;122    /////tu_printf("\r\n======video_task1=============");
;;;123    	
;;;124    
;;;125      if (!already_sent) {
;;;126        already_sent = 1;
;;;127        start_ms = board_millis();
;;;128    /////    fill_color_bar(frame_buffer, frame_num);
;;;129    		
;;;130        tud_video_n_frame_xfer(0, 0, (void*)frame_buffer, FRAME_WIDTH * FRAME_HEIGHT * 16/8);
;;;131      }
;;;132    
;;;133      unsigned cur = board_millis();
;;;134      if (cur - start_ms < interval_ms) 
;;;135    		return; // not enough time
;;;136      if (tx_busy) 
;;;137    		return;
;;;138      start_ms += interval_ms;
;;;139    /////tu_printf("\r\n======video_task2=============");
;;;140    
;;;141    ////  fill_color_bar(frame_buffer, frame_num);
;;;142      tud_video_n_frame_xfer(0, 0, (void*)frame_buffer, FRAME_WIDTH * FRAME_HEIGHT * 16/8);
;;;143    }
000030  e8bd8010          POP      {r4,pc}
                  |L1.52|
000034  e59f00b8          LDR      r0,|L1.244|
000038  e5900000          LDR      r0,[r0,#0]            ;125  ; already_sent
00003c  e3500000          CMP      r0,#0                 ;125
000040  1a00000a          BNE      |L1.112|
000044  e3a00001          MOV      r0,#1                 ;126
000048  e59f10a4          LDR      r1,|L1.244|
00004c  e5810000          STR      r0,[r1,#0]            ;126  ; already_sent
000050  ebfffffe          BL       board_millis
000054  e59f109c          LDR      r1,|L1.248|
000058  e5810000          STR      r0,[r1,#0]            ;127  ; start_ms
00005c  e3a03b96          MOV      r3,#0x25800           ;130
000060  e59f2094          LDR      r2,|L1.252|
000064  e3a01000          MOV      r1,#0                 ;130
000068  e1a00001          MOV      r0,r1                 ;130
00006c  ebfffffe          BL       tud_video_n_frame_xfer
                  |L1.112|
000070  ebfffffe          BL       board_millis
000074  e1a04000          MOV      r4,r0                 ;133
000078  e59f0078          LDR      r0,|L1.248|
00007c  e5900000          LDR      r0,[r0,#0]            ;134  ; start_ms
000080  e0440000          SUB      r0,r4,r0              ;134
000084  e59f1074          LDR      r1,|L1.256|
000088  e5911000          LDR      r1,[r1,#0]            ;134  ; interval_ms
00008c  e1500001          CMP      r0,r1                 ;134
000090  2a000000          BCS      |L1.152|
000094  eaffffe5          B        |L1.48|
                  |L1.152|
000098  e59f0064          LDR      r0,|L1.260|
00009c  e5900000          LDR      r0,[r0,#0]            ;136  ; tx_busy
0000a0  e3500000          CMP      r0,#0                 ;136
0000a4  0a000000          BEQ      |L1.172|
0000a8  eaffffe0          B        |L1.48|
                  |L1.172|
0000ac  e59f0044          LDR      r0,|L1.248|
0000b0  e5900000          LDR      r0,[r0,#0]            ;138  ; start_ms
0000b4  e59f1044          LDR      r1,|L1.256|
0000b8  e5911000          LDR      r1,[r1,#0]            ;138  ; interval_ms
0000bc  e0800001          ADD      r0,r0,r1              ;138
0000c0  e59f1030          LDR      r1,|L1.248|
0000c4  e5810000          STR      r0,[r1,#0]            ;138  ; start_ms
0000c8  e3a03b96          MOV      r3,#0x25800           ;142
0000cc  e59f2028          LDR      r2,|L1.252|
0000d0  e3a01000          MOV      r1,#0                 ;142
0000d4  e1a00001          MOV      r0,r1                 ;142
0000d8  ebfffffe          BL       tud_video_n_frame_xfer
0000dc  e1a00000          MOV      r0,r0
0000e0  eaffffd2          B        |L1.48|
;;;144    
                          ENDP

                  video_task PROC
;;;145    void video_task(void)
0000e4  e92d4010          PUSH     {r4,lr}
;;;146    {
;;;147    /////printf("\r\n======video_task=============");
;;;148    	
;;;149    /////	for(;;)
;;;150    	{
;;;151    	video_tsk()	;
0000e8  ebfffffe          BL       video_tsk
;;;152    	}
;;;153    }
0000ec  e8bd8010          POP      {r4,pc}
;;;154    
                          ENDP

                  |L1.240|
                          DCD      os_time
                  |L1.244|
                          DCD      already_sent
                  |L1.248|
                          DCD      start_ms
                  |L1.252|
                          DCD      frame_buffer
                  |L1.256|
                          DCD      interval_ms
                  |L1.260|
                          DCD      tx_busy

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  frame_buffer
                          %        153600

                          AREA ||.data||, DATA, ALIGN=2

                  tx_busy
                          DCD      0x00000000
                  interval_ms
                          DCD      0x00000032
                  start_ms
                          DCD      0x00000000
                  already_sent
                          DCD      0x00000000
