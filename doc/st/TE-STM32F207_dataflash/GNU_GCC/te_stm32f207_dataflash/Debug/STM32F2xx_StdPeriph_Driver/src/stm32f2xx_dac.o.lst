   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f2xx_dac.c"
  23              	.Ltext0:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c"
 23379              		.align	2
 23380              		.global	DAC_DeInit
 23381              		.thumb
 23382              		.thumb_func
 23384              	DAC_DeInit:
 23385              	.LFB29:
   1:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @file    stm32f2xx_dac.c
   4:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *           - DMA management      
  11:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  13:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *  @verbatim
  14:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *    
  15:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ===================================================================
  16:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ===================================================================
  18:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          
  19:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC Channels
  20:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          =============  
  21:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  26:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC Triggers
  27:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          =============
  28:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *   
  32:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  36:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  40:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  42:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ========================  
  44:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          
  50:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          
  53:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          =============================      
  55:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *        
  59:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  61:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC data format
  62:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ================   
  63:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  68:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ========================================  
  70:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          by the following equation: 
  72:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  79:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DMA requests 
  80:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          =============    
  81:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                               already configured
  87:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                               already configured
  89:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
  90:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ===================================================================      
  91:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *                              How to use this driver 
  92:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          ===================================================================          
  93:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *              registers using
  95:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * 
 100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *  @endverbatim
 101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *    
 102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   ******************************************************************************
 103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @attention
 104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
 105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *
 112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   ******************************************************************************  
 114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */ 
 115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #include "stm32f2xx_dac.h"
 119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #include "stm32f2xx_rcc.h"
 120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
 122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @defgroup DAC 
 126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */ 
 129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* CR register Mask */
 134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* DHR registers offsets */
 141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* DOR register offset */
 146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *
 160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @verbatim   
 161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================
 162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================  
 164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @endverbatim
 166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  None
 172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23386              		.loc 1 175 0
 23387              		.cfi_startproc
 23388              		@ args = 0, pretend = 0, frame = 0
 23389              		@ frame_needed = 1, uses_anonymous_args = 0
 23390 0000 80B5     		push	{r7, lr}
 23391              	.LCFI0:
 23392              		.cfi_def_cfa_offset 8
 23393 0002 00AF     		add	r7, sp, #0
 23394              		.cfi_offset 14, -4
 23395              		.cfi_offset 7, -8
 23396              	.LCFI1:
 23397              		.cfi_def_cfa_register 7
 176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
 23398              		.loc 1 177 0
 23399 0004 4FF00050 		mov	r0, #536870912
 23400 0008 4FF00101 		mov	r1, #1
 23401 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
 23402              		.loc 1 179 0
 23403 0010 4FF00050 		mov	r0, #536870912
 23404 0014 4FF00001 		mov	r1, #0
 23405 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23406              		.loc 1 180 0
 23407 001c BD46     		mov	sp, r7
 23408 001e 80BD     		pop	{r7, pc}
 23409              		.cfi_endproc
 23410              	.LFE29:
 23412              		.align	2
 23413              		.global	DAC_Init
 23414              		.thumb
 23415              		.thumb_func
 23417              	DAC_Init:
 23418              	.LFB30:
 181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23419              		.loc 1 194 0
 23420              		.cfi_startproc
 23421              		@ args = 0, pretend = 0, frame = 16
 23422              		@ frame_needed = 1, uses_anonymous_args = 0
 23423              		@ link register save eliminated.
 23424 0020 80B4     		push	{r7}
 23425              	.LCFI2:
 23426              		.cfi_def_cfa_offset 4
 23427 0022 85B0     		sub	sp, sp, #20
 23428              	.LCFI3:
 23429              		.cfi_def_cfa_offset 24
 23430 0024 00AF     		add	r7, sp, #0
 23431              		.cfi_offset 7, -4
 23432              	.LCFI4:
 23433              		.cfi_def_cfa_register 7
 23434 0026 7860     		str	r0, [r7, #4]
 23435 0028 3960     		str	r1, [r7, #0]
 195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 23436              		.loc 1 195 0
 23437 002a 4FF00003 		mov	r3, #0
 23438 002e FB60     		str	r3, [r7, #12]
 23439 0030 4FF00003 		mov	r3, #0
 23440 0034 BB60     		str	r3, [r7, #8]
 196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg1 = DAC->CR;
 23441              		.loc 1 205 0
 23442 0036 4FF4E843 		mov	r3, #29696
 23443 003a C4F20003 		movt	r3, 16384
 23444 003e 1B68     		ldr	r3, [r3, #0]
 23445 0040 FB60     		str	r3, [r7, #12]
 206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
 23446              		.loc 1 207 0
 23447 0042 7B68     		ldr	r3, [r7, #4]
 23448 0044 40F6FE72 		movw	r2, #4094
 23449 0048 02FA03F3 		lsl	r3, r2, r3
 23450 004c 6FEA0303 		mvn	r3, r3
 23451 0050 FA68     		ldr	r2, [r7, #12]
 23452 0052 02EA0303 		and	r3, r2, r3
 23453 0056 FB60     		str	r3, [r7, #12]
 208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 23454              		.loc 1 214 0
 23455 0058 3B68     		ldr	r3, [r7, #0]
 23456 005a 1A68     		ldr	r2, [r3, #0]
 23457 005c 3B68     		ldr	r3, [r7, #0]
 23458 005e 5B68     		ldr	r3, [r3, #4]
 23459 0060 42EA0302 		orr	r2, r2, r3
 215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 23460              		.loc 1 215 0
 23461 0064 3B68     		ldr	r3, [r7, #0]
 23462 0066 9B68     		ldr	r3, [r3, #8]
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 23463              		.loc 1 214 0
 23464 0068 42EA0302 		orr	r2, r2, r3
 216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 23465              		.loc 1 216 0
 23466 006c 3B68     		ldr	r3, [r7, #0]
 23467 006e DB68     		ldr	r3, [r3, #12]
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 23468              		.loc 1 214 0
 23469 0070 42EA0303 		orr	r3, r2, r3
 23470 0074 BB60     		str	r3, [r7, #8]
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 23471              		.loc 1 218 0
 23472 0076 7B68     		ldr	r3, [r7, #4]
 23473 0078 BA68     		ldr	r2, [r7, #8]
 23474 007a 02FA03F3 		lsl	r3, r2, r3
 23475 007e FA68     		ldr	r2, [r7, #12]
 23476 0080 42EA0303 		orr	r3, r2, r3
 23477 0084 FB60     		str	r3, [r7, #12]
 219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC->CR = tmpreg1;
 23478              		.loc 1 220 0
 23479 0086 4FF4E843 		mov	r3, #29696
 23480 008a C4F20003 		movt	r3, 16384
 23481 008e FA68     		ldr	r2, [r7, #12]
 23482 0090 1A60     		str	r2, [r3, #0]
 221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23483              		.loc 1 221 0
 23484 0092 07F11407 		add	r7, r7, #20
 23485 0096 BD46     		mov	sp, r7
 23486 0098 80BC     		pop	{r7}
 23487 009a 7047     		bx	lr
 23488              		.cfi_endproc
 23489              	.LFE30:
 23491              		.align	2
 23492              		.global	DAC_StructInit
 23493              		.thumb
 23494              		.thumb_func
 23496              	DAC_StructInit:
 23497              	.LFB31:
 222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         be initialized.
 227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23498              		.loc 1 230 0
 23499              		.cfi_startproc
 23500              		@ args = 0, pretend = 0, frame = 8
 23501              		@ frame_needed = 1, uses_anonymous_args = 0
 23502              		@ link register save eliminated.
 23503 009c 80B4     		push	{r7}
 23504              	.LCFI5:
 23505              		.cfi_def_cfa_offset 4
 23506 009e 83B0     		sub	sp, sp, #12
 23507              	.LCFI6:
 23508              		.cfi_def_cfa_offset 16
 23509 00a0 00AF     		add	r7, sp, #0
 23510              		.cfi_offset 7, -4
 23511              	.LCFI7:
 23512              		.cfi_def_cfa_register 7
 23513 00a2 7860     		str	r0, [r7, #4]
 231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 23514              		.loc 1 233 0
 23515 00a4 7B68     		ldr	r3, [r7, #4]
 23516 00a6 4FF00002 		mov	r2, #0
 23517 00aa 1A60     		str	r2, [r3, #0]
 234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 23518              		.loc 1 235 0
 23519 00ac 7B68     		ldr	r3, [r7, #4]
 23520 00ae 4FF00002 		mov	r2, #0
 23521 00b2 5A60     		str	r2, [r3, #4]
 236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 23522              		.loc 1 237 0
 23523 00b4 7B68     		ldr	r3, [r7, #4]
 23524 00b6 4FF00002 		mov	r2, #0
 23525 00ba 9A60     		str	r2, [r3, #8]
 238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 23526              		.loc 1 239 0
 23527 00bc 7B68     		ldr	r3, [r7, #4]
 23528 00be 4FF00002 		mov	r2, #0
 23529 00c2 DA60     		str	r2, [r3, #12]
 240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23530              		.loc 1 240 0
 23531 00c4 07F10C07 		add	r7, r7, #12
 23532 00c8 BD46     		mov	sp, r7
 23533 00ca 80BC     		pop	{r7}
 23534 00cc 7047     		bx	lr
 23535              		.cfi_endproc
 23536              	.LFE31:
 23538 00ce 00BF     		.align	2
 23539              		.global	DAC_Cmd
 23540              		.thumb
 23541              		.thumb_func
 23543              	DAC_Cmd:
 23544              	.LFB32:
 241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23545              		.loc 1 254 0
 23546              		.cfi_startproc
 23547              		@ args = 0, pretend = 0, frame = 8
 23548              		@ frame_needed = 1, uses_anonymous_args = 0
 23549              		@ link register save eliminated.
 23550 00d0 80B4     		push	{r7}
 23551              	.LCFI8:
 23552              		.cfi_def_cfa_offset 4
 23553 00d2 83B0     		sub	sp, sp, #12
 23554              	.LCFI9:
 23555              		.cfi_def_cfa_offset 16
 23556 00d4 00AF     		add	r7, sp, #0
 23557              		.cfi_offset 7, -4
 23558              	.LCFI10:
 23559              		.cfi_def_cfa_register 7
 23560 00d6 7860     		str	r0, [r7, #4]
 23561 00d8 0B46     		mov	r3, r1
 23562 00da FB70     		strb	r3, [r7, #3]
 255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 23563              		.loc 1 259 0
 23564 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23565 00de 002B     		cmp	r3, #0
 23566 00e0 11D0     		beq	.L5
 260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 23567              		.loc 1 262 0
 23568 00e2 4FF4E843 		mov	r3, #29696
 23569 00e6 C4F20003 		movt	r3, 16384
 23570 00ea 4FF4E842 		mov	r2, #29696
 23571 00ee C4F20002 		movt	r2, 16384
 23572 00f2 1168     		ldr	r1, [r2, #0]
 23573 00f4 7A68     		ldr	r2, [r7, #4]
 23574 00f6 4FF00100 		mov	r0, #1
 23575 00fa 00FA02F2 		lsl	r2, r0, r2
 23576 00fe 41EA0202 		orr	r2, r1, r2
 23577 0102 1A60     		str	r2, [r3, #0]
 23578 0104 12E0     		b	.L4
 23579              	.L5:
 263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 23580              		.loc 1 267 0
 23581 0106 4FF4E843 		mov	r3, #29696
 23582 010a C4F20003 		movt	r3, 16384
 23583 010e 4FF4E842 		mov	r2, #29696
 23584 0112 C4F20002 		movt	r2, 16384
 23585 0116 1168     		ldr	r1, [r2, #0]
 23586 0118 7A68     		ldr	r2, [r7, #4]
 23587 011a 4FF00100 		mov	r0, #1
 23588 011e 00FA02F2 		lsl	r2, r0, r2
 23589 0122 6FEA0202 		mvn	r2, r2
 23590 0126 01EA0202 		and	r2, r1, r2
 23591 012a 1A60     		str	r2, [r3, #0]
 23592              	.L4:
 268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23593              		.loc 1 269 0
 23594 012c 07F10C07 		add	r7, r7, #12
 23595 0130 BD46     		mov	sp, r7
 23596 0132 80BC     		pop	{r7}
 23597 0134 7047     		bx	lr
 23598              		.cfi_endproc
 23599              	.LFE32:
 23601 0136 00BF     		.align	2
 23602              		.global	DAC_SoftwareTriggerCmd
 23603              		.thumb
 23604              		.thumb_func
 23606              	DAC_SoftwareTriggerCmd:
 23607              	.LFB33:
 270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23608              		.loc 1 282 0
 23609              		.cfi_startproc
 23610              		@ args = 0, pretend = 0, frame = 8
 23611              		@ frame_needed = 1, uses_anonymous_args = 0
 23612              		@ link register save eliminated.
 23613 0138 80B4     		push	{r7}
 23614              	.LCFI11:
 23615              		.cfi_def_cfa_offset 4
 23616 013a 83B0     		sub	sp, sp, #12
 23617              	.LCFI12:
 23618              		.cfi_def_cfa_offset 16
 23619 013c 00AF     		add	r7, sp, #0
 23620              		.cfi_offset 7, -4
 23621              	.LCFI13:
 23622              		.cfi_def_cfa_register 7
 23623 013e 7860     		str	r0, [r7, #4]
 23624 0140 0B46     		mov	r3, r1
 23625 0142 FB70     		strb	r3, [r7, #3]
 283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 23626              		.loc 1 287 0
 23627 0144 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23628 0146 002B     		cmp	r3, #0
 23629 0148 13D0     		beq	.L8
 288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 23630              		.loc 1 290 0
 23631 014a 4FF4E843 		mov	r3, #29696
 23632 014e C4F20003 		movt	r3, 16384
 23633 0152 4FF4E842 		mov	r2, #29696
 23634 0156 C4F20002 		movt	r2, 16384
 23635 015a 5168     		ldr	r1, [r2, #4]
 23636 015c 7A68     		ldr	r2, [r7, #4]
 23637 015e 4FEA1212 		lsr	r2, r2, #4
 23638 0162 4FF00100 		mov	r0, #1
 23639 0166 00FA02F2 		lsl	r2, r0, r2
 23640 016a 41EA0202 		orr	r2, r1, r2
 23641 016e 5A60     		str	r2, [r3, #4]
 23642 0170 14E0     		b	.L7
 23643              	.L8:
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 23644              		.loc 1 295 0
 23645 0172 4FF4E843 		mov	r3, #29696
 23646 0176 C4F20003 		movt	r3, 16384
 23647 017a 4FF4E842 		mov	r2, #29696
 23648 017e C4F20002 		movt	r2, 16384
 23649 0182 5168     		ldr	r1, [r2, #4]
 23650 0184 7A68     		ldr	r2, [r7, #4]
 23651 0186 4FEA1212 		lsr	r2, r2, #4
 23652 018a 4FF00100 		mov	r0, #1
 23653 018e 00FA02F2 		lsl	r2, r0, r2
 23654 0192 6FEA0202 		mvn	r2, r2
 23655 0196 01EA0202 		and	r2, r1, r2
 23656 019a 5A60     		str	r2, [r3, #4]
 23657              	.L7:
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23658              		.loc 1 297 0
 23659 019c 07F10C07 		add	r7, r7, #12
 23660 01a0 BD46     		mov	sp, r7
 23661 01a2 80BC     		pop	{r7}
 23662 01a4 7047     		bx	lr
 23663              		.cfi_endproc
 23664              	.LFE33:
 23666 01a6 00BF     		.align	2
 23667              		.global	DAC_DualSoftwareTriggerCmd
 23668              		.thumb
 23669              		.thumb_func
 23671              	DAC_DualSoftwareTriggerCmd:
 23672              	.LFB34:
 298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23673              		.loc 1 306 0
 23674              		.cfi_startproc
 23675              		@ args = 0, pretend = 0, frame = 8
 23676              		@ frame_needed = 1, uses_anonymous_args = 0
 23677              		@ link register save eliminated.
 23678 01a8 80B4     		push	{r7}
 23679              	.LCFI14:
 23680              		.cfi_def_cfa_offset 4
 23681 01aa 83B0     		sub	sp, sp, #12
 23682              	.LCFI15:
 23683              		.cfi_def_cfa_offset 16
 23684 01ac 00AF     		add	r7, sp, #0
 23685              		.cfi_offset 7, -4
 23686              	.LCFI16:
 23687              		.cfi_def_cfa_register 7
 23688 01ae 0346     		mov	r3, r0
 23689 01b0 FB71     		strb	r3, [r7, #7]
 307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 23690              		.loc 1 310 0
 23691 01b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23692 01b4 002B     		cmp	r3, #0
 23693 01b6 0CD0     		beq	.L11
 311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 23694              		.loc 1 313 0
 23695 01b8 4FF4E843 		mov	r3, #29696
 23696 01bc C4F20003 		movt	r3, 16384
 23697 01c0 4FF4E842 		mov	r2, #29696
 23698 01c4 C4F20002 		movt	r2, 16384
 23699 01c8 5268     		ldr	r2, [r2, #4]
 23700 01ca 42F00302 		orr	r2, r2, #3
 23701 01ce 5A60     		str	r2, [r3, #4]
 23702 01d0 0BE0     		b	.L10
 23703              	.L11:
 314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 23704              		.loc 1 318 0
 23705 01d2 4FF4E843 		mov	r3, #29696
 23706 01d6 C4F20003 		movt	r3, 16384
 23707 01da 4FF4E842 		mov	r2, #29696
 23708 01de C4F20002 		movt	r2, 16384
 23709 01e2 5268     		ldr	r2, [r2, #4]
 23710 01e4 22F00302 		bic	r2, r2, #3
 23711 01e8 5A60     		str	r2, [r3, #4]
 23712              	.L10:
 319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23713              		.loc 1 320 0
 23714 01ea 07F10C07 		add	r7, r7, #12
 23715 01ee BD46     		mov	sp, r7
 23716 01f0 80BC     		pop	{r7}
 23717 01f2 7047     		bx	lr
 23718              		.cfi_endproc
 23719              	.LFE34:
 23721              		.align	2
 23722              		.global	DAC_WaveGenerationCmd
 23723              		.thumb
 23724              		.thumb_func
 23726              	DAC_WaveGenerationCmd:
 23727              	.LFB35:
 321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23728              		.loc 1 337 0
 23729              		.cfi_startproc
 23730              		@ args = 0, pretend = 0, frame = 16
 23731              		@ frame_needed = 1, uses_anonymous_args = 0
 23732              		@ link register save eliminated.
 23733 01f4 80B4     		push	{r7}
 23734              	.LCFI17:
 23735              		.cfi_def_cfa_offset 4
 23736 01f6 85B0     		sub	sp, sp, #20
 23737              	.LCFI18:
 23738              		.cfi_def_cfa_offset 24
 23739 01f8 00AF     		add	r7, sp, #0
 23740              		.cfi_offset 7, -4
 23741              	.LCFI19:
 23742              		.cfi_def_cfa_register 7
 23743 01fa F860     		str	r0, [r7, #12]
 23744 01fc B960     		str	r1, [r7, #8]
 23745 01fe 1346     		mov	r3, r2
 23746 0200 FB71     		strb	r3, [r7, #7]
 338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 23747              		.loc 1 343 0
 23748 0202 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23749 0204 002B     		cmp	r3, #0
 23750 0206 10D0     		beq	.L14
 344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 23751              		.loc 1 346 0
 23752 0208 4FF4E843 		mov	r3, #29696
 23753 020c C4F20003 		movt	r3, 16384
 23754 0210 4FF4E842 		mov	r2, #29696
 23755 0214 C4F20002 		movt	r2, 16384
 23756 0218 1168     		ldr	r1, [r2, #0]
 23757 021a FA68     		ldr	r2, [r7, #12]
 23758 021c B868     		ldr	r0, [r7, #8]
 23759 021e 00FA02F2 		lsl	r2, r0, r2
 23760 0222 41EA0202 		orr	r2, r1, r2
 23761 0226 1A60     		str	r2, [r3, #0]
 23762 0228 11E0     		b	.L13
 23763              	.L14:
 347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 23764              		.loc 1 351 0
 23765 022a 4FF4E843 		mov	r3, #29696
 23766 022e C4F20003 		movt	r3, 16384
 23767 0232 4FF4E842 		mov	r2, #29696
 23768 0236 C4F20002 		movt	r2, 16384
 23769 023a 1168     		ldr	r1, [r2, #0]
 23770 023c FA68     		ldr	r2, [r7, #12]
 23771 023e B868     		ldr	r0, [r7, #8]
 23772 0240 00FA02F2 		lsl	r2, r0, r2
 23773 0244 6FEA0202 		mvn	r2, r2
 23774 0248 01EA0202 		and	r2, r1, r2
 23775 024c 1A60     		str	r2, [r3, #0]
 23776              	.L13:
 352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23777              		.loc 1 353 0
 23778 024e 07F11407 		add	r7, r7, #20
 23779 0252 BD46     		mov	sp, r7
 23780 0254 80BC     		pop	{r7}
 23781 0256 7047     		bx	lr
 23782              		.cfi_endproc
 23783              	.LFE35:
 23785              		.align	2
 23786              		.global	DAC_SetChannel1Data
 23787              		.thumb
 23788              		.thumb_func
 23790              	DAC_SetChannel1Data:
 23791              	.LFB36:
 354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {  
 23792              		.loc 1 366 0
 23793              		.cfi_startproc
 23794              		@ args = 0, pretend = 0, frame = 16
 23795              		@ frame_needed = 1, uses_anonymous_args = 0
 23796              		@ link register save eliminated.
 23797 0258 80B4     		push	{r7}
 23798              	.LCFI20:
 23799              		.cfi_def_cfa_offset 4
 23800 025a 85B0     		sub	sp, sp, #20
 23801              	.LCFI21:
 23802              		.cfi_def_cfa_offset 24
 23803 025c 00AF     		add	r7, sp, #0
 23804              		.cfi_offset 7, -4
 23805              	.LCFI22:
 23806              		.cfi_def_cfa_register 7
 23807 025e 7860     		str	r0, [r7, #4]
 23808 0260 0B46     		mov	r3, r1
 23809 0262 7B80     		strh	r3, [r7, #2]	@ movhi
 367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   __IO uint32_t tmp = 0;
 23810              		.loc 1 367 0
 23811 0264 4FF00003 		mov	r3, #0
 23812 0268 FB60     		str	r3, [r7, #12]
 368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 23813              		.loc 1 373 0
 23814 026a 4FF4E843 		mov	r3, #29696
 23815 026e C4F20003 		movt	r3, 16384
 23816 0272 FB60     		str	r3, [r7, #12]
 374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 23817              		.loc 1 374 0
 23818 0274 FA68     		ldr	r2, [r7, #12]
 23819 0276 7B68     		ldr	r3, [r7, #4]
 23820 0278 1344     		add	r3, r2, r3
 23821 027a 03F10803 		add	r3, r3, #8
 23822 027e FB60     		str	r3, [r7, #12]
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 23823              		.loc 1 377 0
 23824 0280 FB68     		ldr	r3, [r7, #12]
 23825 0282 7A88     		ldrh	r2, [r7, #2]
 23826 0284 1A60     		str	r2, [r3, #0]
 378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23827              		.loc 1 378 0
 23828 0286 07F11407 		add	r7, r7, #20
 23829 028a BD46     		mov	sp, r7
 23830 028c 80BC     		pop	{r7}
 23831 028e 7047     		bx	lr
 23832              		.cfi_endproc
 23833              	.LFE36:
 23835              		.align	2
 23836              		.global	DAC_SetChannel2Data
 23837              		.thumb
 23838              		.thumb_func
 23840              	DAC_SetChannel2Data:
 23841              	.LFB37:
 379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23842              		.loc 1 391 0
 23843              		.cfi_startproc
 23844              		@ args = 0, pretend = 0, frame = 16
 23845              		@ frame_needed = 1, uses_anonymous_args = 0
 23846              		@ link register save eliminated.
 23847 0290 80B4     		push	{r7}
 23848              	.LCFI23:
 23849              		.cfi_def_cfa_offset 4
 23850 0292 85B0     		sub	sp, sp, #20
 23851              	.LCFI24:
 23852              		.cfi_def_cfa_offset 24
 23853 0294 00AF     		add	r7, sp, #0
 23854              		.cfi_offset 7, -4
 23855              	.LCFI25:
 23856              		.cfi_def_cfa_register 7
 23857 0296 7860     		str	r0, [r7, #4]
 23858 0298 0B46     		mov	r3, r1
 23859 029a 7B80     		strh	r3, [r7, #2]	@ movhi
 392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   __IO uint32_t tmp = 0;
 23860              		.loc 1 392 0
 23861 029c 4FF00003 		mov	r3, #0
 23862 02a0 FB60     		str	r3, [r7, #12]
 393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 23863              		.loc 1 398 0
 23864 02a2 4FF4E843 		mov	r3, #29696
 23865 02a6 C4F20003 		movt	r3, 16384
 23866 02aa FB60     		str	r3, [r7, #12]
 399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 23867              		.loc 1 399 0
 23868 02ac FA68     		ldr	r2, [r7, #12]
 23869 02ae 7B68     		ldr	r3, [r7, #4]
 23870 02b0 1344     		add	r3, r2, r3
 23871 02b2 03F11403 		add	r3, r3, #20
 23872 02b6 FB60     		str	r3, [r7, #12]
 400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 23873              		.loc 1 402 0
 23874 02b8 FB68     		ldr	r3, [r7, #12]
 23875 02ba 7A88     		ldrh	r2, [r7, #2]
 23876 02bc 1A60     		str	r2, [r3, #0]
 403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23877              		.loc 1 403 0
 23878 02be 07F11407 		add	r7, r7, #20
 23879 02c2 BD46     		mov	sp, r7
 23880 02c4 80BC     		pop	{r7}
 23881 02c6 7047     		bx	lr
 23882              		.cfi_endproc
 23883              	.LFE37:
 23885              		.align	2
 23886              		.global	DAC_SetDualChannelData
 23887              		.thumb
 23888              		.thumb_func
 23890              	DAC_SetDualChannelData:
 23891              	.LFB38:
 404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23892              		.loc 1 419 0
 23893              		.cfi_startproc
 23894              		@ args = 0, pretend = 0, frame = 16
 23895              		@ frame_needed = 1, uses_anonymous_args = 0
 23896              		@ link register save eliminated.
 23897 02c8 80B4     		push	{r7}
 23898              	.LCFI26:
 23899              		.cfi_def_cfa_offset 4
 23900 02ca 85B0     		sub	sp, sp, #20
 23901              	.LCFI27:
 23902              		.cfi_def_cfa_offset 24
 23903 02cc 00AF     		add	r7, sp, #0
 23904              		.cfi_offset 7, -4
 23905              	.LCFI28:
 23906              		.cfi_def_cfa_register 7
 23907 02ce 7860     		str	r0, [r7, #4]
 23908 02d0 1346     		mov	r3, r2
 23909 02d2 0A46     		mov	r2, r1	@ movhi
 23910 02d4 7A80     		strh	r2, [r7, #2]	@ movhi
 23911 02d6 3B80     		strh	r3, [r7, #0]	@ movhi
 420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   uint32_t data = 0, tmp = 0;
 23912              		.loc 1 420 0
 23913 02d8 4FF00003 		mov	r3, #0
 23914 02dc FB60     		str	r3, [r7, #12]
 23915 02de 4FF00003 		mov	r3, #0
 23916 02e2 BB60     		str	r3, [r7, #8]
 421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 23917              		.loc 1 428 0
 23918 02e4 7B68     		ldr	r3, [r7, #4]
 23919 02e6 082B     		cmp	r3, #8
 23920 02e8 07D1     		bne	.L19
 429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 23921              		.loc 1 430 0
 23922 02ea 7B88     		ldrh	r3, [r7, #2]
 23923 02ec 4FEA0322 		lsl	r2, r3, #8
 23924 02f0 3B88     		ldrh	r3, [r7, #0]
 23925 02f2 42EA0303 		orr	r3, r2, r3
 23926 02f6 FB60     		str	r3, [r7, #12]
 23927 02f8 06E0     		b	.L20
 23928              	.L19:
 431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 23929              		.loc 1 434 0
 23930 02fa 7B88     		ldrh	r3, [r7, #2]
 23931 02fc 4FEA0342 		lsl	r2, r3, #16
 23932 0300 3B88     		ldrh	r3, [r7, #0]
 23933 0302 42EA0303 		orr	r3, r2, r3
 23934 0306 FB60     		str	r3, [r7, #12]
 23935              	.L20:
 435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 23936              		.loc 1 437 0
 23937 0308 4FF4E843 		mov	r3, #29696
 23938 030c C4F20003 		movt	r3, 16384
 23939 0310 BB60     		str	r3, [r7, #8]
 438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 23940              		.loc 1 438 0
 23941 0312 7A68     		ldr	r2, [r7, #4]
 23942 0314 BB68     		ldr	r3, [r7, #8]
 23943 0316 1344     		add	r3, r2, r3
 23944 0318 03F12003 		add	r3, r3, #32
 23945 031c BB60     		str	r3, [r7, #8]
 439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 23946              		.loc 1 441 0
 23947 031e BB68     		ldr	r3, [r7, #8]
 23948 0320 FA68     		ldr	r2, [r7, #12]
 23949 0322 1A60     		str	r2, [r3, #0]
 442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23950              		.loc 1 442 0
 23951 0324 07F11407 		add	r7, r7, #20
 23952 0328 BD46     		mov	sp, r7
 23953 032a 80BC     		pop	{r7}
 23954 032c 7047     		bx	lr
 23955              		.cfi_endproc
 23956              	.LFE38:
 23958 032e 00BF     		.align	2
 23959              		.global	DAC_GetDataOutputValue
 23960              		.thumb
 23961              		.thumb_func
 23963              	DAC_GetDataOutputValue:
 23964              	.LFB39:
 443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 23965              		.loc 1 453 0
 23966              		.cfi_startproc
 23967              		@ args = 0, pretend = 0, frame = 16
 23968              		@ frame_needed = 1, uses_anonymous_args = 0
 23969              		@ link register save eliminated.
 23970 0330 80B4     		push	{r7}
 23971              	.LCFI29:
 23972              		.cfi_def_cfa_offset 4
 23973 0332 85B0     		sub	sp, sp, #20
 23974              	.LCFI30:
 23975              		.cfi_def_cfa_offset 24
 23976 0334 00AF     		add	r7, sp, #0
 23977              		.cfi_offset 7, -4
 23978              	.LCFI31:
 23979              		.cfi_def_cfa_register 7
 23980 0336 7860     		str	r0, [r7, #4]
 454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   __IO uint32_t tmp = 0;
 23981              		.loc 1 454 0
 23982 0338 4FF00003 		mov	r3, #0
 23983 033c FB60     		str	r3, [r7, #12]
 455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 23984              		.loc 1 459 0
 23985 033e 4FF4E843 		mov	r3, #29696
 23986 0342 C4F20003 		movt	r3, 16384
 23987 0346 FB60     		str	r3, [r7, #12]
 460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 23988              		.loc 1 460 0
 23989 0348 7B68     		ldr	r3, [r7, #4]
 23990 034a 4FEA9302 		lsr	r2, r3, #2
 23991 034e FB68     		ldr	r3, [r7, #12]
 23992 0350 1344     		add	r3, r2, r3
 23993 0352 03F12C03 		add	r3, r3, #44
 23994 0356 FB60     		str	r3, [r7, #12]
 461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 23995              		.loc 1 463 0
 23996 0358 FB68     		ldr	r3, [r7, #12]
 23997 035a 1B68     		ldr	r3, [r3, #0]
 23998 035c 9BB2     		uxth	r3, r3
 464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 23999              		.loc 1 464 0
 24000 035e 1846     		mov	r0, r3
 24001 0360 07F11407 		add	r7, r7, #20
 24002 0364 BD46     		mov	sp, r7
 24003 0366 80BC     		pop	{r7}
 24004 0368 7047     		bx	lr
 24005              		.cfi_endproc
 24006              	.LFE39:
 24008 036a 00BF     		.align	2
 24009              		.global	DAC_DMACmd
 24010              		.thumb
 24011              		.thumb_func
 24013              	DAC_DMACmd:
 24014              	.LFB40:
 465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @}
 467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *
 472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @verbatim   
 473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================
 474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****                           DMA management functions
 475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================  
 476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @endverbatim
 478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          already configured.
 493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          already configured.    
 495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24015              		.loc 1 498 0
 24016              		.cfi_startproc
 24017              		@ args = 0, pretend = 0, frame = 8
 24018              		@ frame_needed = 1, uses_anonymous_args = 0
 24019              		@ link register save eliminated.
 24020 036c 80B4     		push	{r7}
 24021              	.LCFI32:
 24022              		.cfi_def_cfa_offset 4
 24023 036e 83B0     		sub	sp, sp, #12
 24024              	.LCFI33:
 24025              		.cfi_def_cfa_offset 16
 24026 0370 00AF     		add	r7, sp, #0
 24027              		.cfi_offset 7, -4
 24028              	.LCFI34:
 24029              		.cfi_def_cfa_register 7
 24030 0372 7860     		str	r0, [r7, #4]
 24031 0374 0B46     		mov	r3, r1
 24032 0376 FB70     		strb	r3, [r7, #3]
 499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 24033              		.loc 1 503 0
 24034 0378 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24035 037a 002B     		cmp	r3, #0
 24036 037c 11D0     		beq	.L23
 504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 24037              		.loc 1 506 0
 24038 037e 4FF4E843 		mov	r3, #29696
 24039 0382 C4F20003 		movt	r3, 16384
 24040 0386 4FF4E842 		mov	r2, #29696
 24041 038a C4F20002 		movt	r2, 16384
 24042 038e 1168     		ldr	r1, [r2, #0]
 24043 0390 7A68     		ldr	r2, [r7, #4]
 24044 0392 4FF48050 		mov	r0, #4096
 24045 0396 00FA02F2 		lsl	r2, r0, r2
 24046 039a 41EA0202 		orr	r2, r1, r2
 24047 039e 1A60     		str	r2, [r3, #0]
 24048 03a0 12E0     		b	.L22
 24049              	.L23:
 507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 24050              		.loc 1 511 0
 24051 03a2 4FF4E843 		mov	r3, #29696
 24052 03a6 C4F20003 		movt	r3, 16384
 24053 03aa 4FF4E842 		mov	r2, #29696
 24054 03ae C4F20002 		movt	r2, 16384
 24055 03b2 1168     		ldr	r1, [r2, #0]
 24056 03b4 7A68     		ldr	r2, [r7, #4]
 24057 03b6 4FF48050 		mov	r0, #4096
 24058 03ba 00FA02F2 		lsl	r2, r0, r2
 24059 03be 6FEA0202 		mvn	r2, r2
 24060 03c2 01EA0202 		and	r2, r1, r2
 24061 03c6 1A60     		str	r2, [r3, #0]
 24062              	.L22:
 512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24063              		.loc 1 513 0
 24064 03c8 07F10C07 		add	r7, r7, #12
 24065 03cc BD46     		mov	sp, r7
 24066 03ce 80BC     		pop	{r7}
 24067 03d0 7047     		bx	lr
 24068              		.cfi_endproc
 24069              	.LFE40:
 24071 03d2 00BF     		.align	2
 24072              		.global	DAC_ITConfig
 24073              		.thumb
 24074              		.thumb_func
 24076              	DAC_ITConfig:
 24077              	.LFB41:
 514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @}
 516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  *
 521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @verbatim   
 522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================
 523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****  ===============================================================================  
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** @endverbatim
 527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @{
 528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */ 
 545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24078              		.loc 1 546 0
 24079              		.cfi_startproc
 24080              		@ args = 0, pretend = 0, frame = 16
 24081              		@ frame_needed = 1, uses_anonymous_args = 0
 24082              		@ link register save eliminated.
 24083 03d4 80B4     		push	{r7}
 24084              	.LCFI35:
 24085              		.cfi_def_cfa_offset 4
 24086 03d6 85B0     		sub	sp, sp, #20
 24087              	.LCFI36:
 24088              		.cfi_def_cfa_offset 24
 24089 03d8 00AF     		add	r7, sp, #0
 24090              		.cfi_offset 7, -4
 24091              	.LCFI37:
 24092              		.cfi_def_cfa_register 7
 24093 03da F860     		str	r0, [r7, #12]
 24094 03dc B960     		str	r1, [r7, #8]
 24095 03de 1346     		mov	r3, r2
 24096 03e0 FB71     		strb	r3, [r7, #7]
 547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (NewState != DISABLE)
 24097              		.loc 1 552 0
 24098 03e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24099 03e4 002B     		cmp	r3, #0
 24100 03e6 10D0     		beq	.L26
 553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 24101              		.loc 1 555 0
 24102 03e8 4FF4E843 		mov	r3, #29696
 24103 03ec C4F20003 		movt	r3, 16384
 24104 03f0 4FF4E842 		mov	r2, #29696
 24105 03f4 C4F20002 		movt	r2, 16384
 24106 03f8 1168     		ldr	r1, [r2, #0]
 24107 03fa FA68     		ldr	r2, [r7, #12]
 24108 03fc B868     		ldr	r0, [r7, #8]
 24109 03fe 00FA02F2 		lsl	r2, r0, r2
 24110 0402 41EA0202 		orr	r2, r1, r2
 24111 0406 1A60     		str	r2, [r3, #0]
 24112 0408 11E0     		b	.L25
 24113              	.L26:
 556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 24114              		.loc 1 560 0
 24115 040a 4FF4E843 		mov	r3, #29696
 24116 040e C4F20003 		movt	r3, 16384
 24117 0412 4FF4E842 		mov	r2, #29696
 24118 0416 C4F20002 		movt	r2, 16384
 24119 041a 1168     		ldr	r1, [r2, #0]
 24120 041c FA68     		ldr	r2, [r7, #12]
 24121 041e B868     		ldr	r0, [r7, #8]
 24122 0420 00FA02F2 		lsl	r2, r0, r2
 24123 0424 6FEA0202 		mvn	r2, r2
 24124 0428 01EA0202 		and	r2, r1, r2
 24125 042c 1A60     		str	r2, [r3, #0]
 24126              	.L25:
 561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24127              		.loc 1 562 0
 24128 042e 07F11407 		add	r7, r7, #20
 24129 0432 BD46     		mov	sp, r7
 24130 0434 80BC     		pop	{r7}
 24131 0436 7047     		bx	lr
 24132              		.cfi_endproc
 24133              	.LFE41:
 24135              		.align	2
 24136              		.global	DAC_GetFlagStatus
 24137              		.thumb
 24138              		.thumb_func
 24140              	DAC_GetFlagStatus:
 24141              	.LFB42:
 563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24142              		.loc 1 578 0
 24143              		.cfi_startproc
 24144              		@ args = 0, pretend = 0, frame = 16
 24145              		@ frame_needed = 1, uses_anonymous_args = 0
 24146              		@ link register save eliminated.
 24147 0438 80B4     		push	{r7}
 24148              	.LCFI38:
 24149              		.cfi_def_cfa_offset 4
 24150 043a 85B0     		sub	sp, sp, #20
 24151              	.LCFI39:
 24152              		.cfi_def_cfa_offset 24
 24153 043c 00AF     		add	r7, sp, #0
 24154              		.cfi_offset 7, -4
 24155              	.LCFI40:
 24156              		.cfi_def_cfa_register 7
 24157 043e 7860     		str	r0, [r7, #4]
 24158 0440 3960     		str	r1, [r7, #0]
 579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   FlagStatus bitstatus = RESET;
 24159              		.loc 1 579 0
 24160 0442 4FF00003 		mov	r3, #0
 24161 0446 FB73     		strb	r3, [r7, #15]
 580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 24162              		.loc 1 585 0
 24163 0448 4FF4E843 		mov	r3, #29696
 24164 044c C4F20003 		movt	r3, 16384
 24165 0450 5A6B     		ldr	r2, [r3, #52]
 24166 0452 7B68     		ldr	r3, [r7, #4]
 24167 0454 3968     		ldr	r1, [r7, #0]
 24168 0456 01FA03F3 		lsl	r3, r1, r3
 24169 045a 02EA0303 		and	r3, r2, r3
 24170 045e 002B     		cmp	r3, #0
 24171 0460 03D0     		beq	.L29
 586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     bitstatus = SET;
 24172              		.loc 1 588 0
 24173 0462 4FF00103 		mov	r3, #1
 24174 0466 FB73     		strb	r3, [r7, #15]
 24175 0468 02E0     		b	.L30
 24176              	.L29:
 589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     bitstatus = RESET;
 24177              		.loc 1 593 0
 24178 046a 4FF00003 		mov	r3, #0
 24179 046e FB73     		strb	r3, [r7, #15]
 24180              	.L30:
 594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   return  bitstatus;
 24181              		.loc 1 596 0
 24182 0470 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24183              		.loc 1 597 0
 24184 0472 1846     		mov	r0, r3
 24185 0474 07F11407 		add	r7, r7, #20
 24186 0478 BD46     		mov	sp, r7
 24187 047a 80BC     		pop	{r7}
 24188 047c 7047     		bx	lr
 24189              		.cfi_endproc
 24190              	.LFE42:
 24192 047e 00BF     		.align	2
 24193              		.global	DAC_ClearFlag
 24194              		.thumb
 24195              		.thumb_func
 24197              	DAC_ClearFlag:
 24198              	.LFB43:
 598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24199              		.loc 1 613 0
 24200              		.cfi_startproc
 24201              		@ args = 0, pretend = 0, frame = 8
 24202              		@ frame_needed = 1, uses_anonymous_args = 0
 24203              		@ link register save eliminated.
 24204 0480 80B4     		push	{r7}
 24205              	.LCFI41:
 24206              		.cfi_def_cfa_offset 4
 24207 0482 83B0     		sub	sp, sp, #12
 24208              	.LCFI42:
 24209              		.cfi_def_cfa_offset 16
 24210 0484 00AF     		add	r7, sp, #0
 24211              		.cfi_offset 7, -4
 24212              	.LCFI43:
 24213              		.cfi_def_cfa_register 7
 24214 0486 7860     		str	r0, [r7, #4]
 24215 0488 3960     		str	r1, [r7, #0]
 614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 24216              		.loc 1 619 0
 24217 048a 4FF4E843 		mov	r3, #29696
 24218 048e C4F20003 		movt	r3, 16384
 24219 0492 7A68     		ldr	r2, [r7, #4]
 24220 0494 3968     		ldr	r1, [r7, #0]
 24221 0496 01FA02F2 		lsl	r2, r1, r2
 24222 049a 5A63     		str	r2, [r3, #52]
 620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24223              		.loc 1 620 0
 24224 049c 07F10C07 		add	r7, r7, #12
 24225 04a0 BD46     		mov	sp, r7
 24226 04a2 80BC     		pop	{r7}
 24227 04a4 7047     		bx	lr
 24228              		.cfi_endproc
 24229              	.LFE43:
 24231 04a6 00BF     		.align	2
 24232              		.global	DAC_GetITStatus
 24233              		.thumb
 24234              		.thumb_func
 24236              	DAC_GetITStatus:
 24237              	.LFB44:
 621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24238              		.loc 1 636 0
 24239              		.cfi_startproc
 24240              		@ args = 0, pretend = 0, frame = 16
 24241              		@ frame_needed = 1, uses_anonymous_args = 0
 24242              		@ link register save eliminated.
 24243 04a8 80B4     		push	{r7}
 24244              	.LCFI44:
 24245              		.cfi_def_cfa_offset 4
 24246 04aa 85B0     		sub	sp, sp, #20
 24247              	.LCFI45:
 24248              		.cfi_def_cfa_offset 24
 24249 04ac 00AF     		add	r7, sp, #0
 24250              		.cfi_offset 7, -4
 24251              	.LCFI46:
 24252              		.cfi_def_cfa_register 7
 24253 04ae 7860     		str	r0, [r7, #4]
 24254 04b0 3960     		str	r1, [r7, #0]
 637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   ITStatus bitstatus = RESET;
 24255              		.loc 1 637 0
 24256 04b2 4FF00003 		mov	r3, #0
 24257 04b6 FB73     		strb	r3, [r7, #15]
 638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   uint32_t enablestatus = 0;
 24258              		.loc 1 638 0
 24259 04b8 4FF00003 		mov	r3, #0
 24260 04bc BB60     		str	r3, [r7, #8]
 639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 24261              		.loc 1 645 0
 24262 04be 4FF4E843 		mov	r3, #29696
 24263 04c2 C4F20003 		movt	r3, 16384
 24264 04c6 1A68     		ldr	r2, [r3, #0]
 24265 04c8 7B68     		ldr	r3, [r7, #4]
 24266 04ca 3968     		ldr	r1, [r7, #0]
 24267 04cc 01FA03F3 		lsl	r3, r1, r3
 24268 04d0 02EA0303 		and	r3, r2, r3
 24269 04d4 BB60     		str	r3, [r7, #8]
 646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   
 647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 24270              		.loc 1 648 0
 24271 04d6 4FF4E843 		mov	r3, #29696
 24272 04da C4F20003 		movt	r3, 16384
 24273 04de 5A6B     		ldr	r2, [r3, #52]
 24274 04e0 7B68     		ldr	r3, [r7, #4]
 24275 04e2 3968     		ldr	r1, [r7, #0]
 24276 04e4 01FA03F3 		lsl	r3, r1, r3
 24277 04e8 02EA0303 		and	r3, r2, r3
 24278 04ec 002B     		cmp	r3, #0
 24279 04ee 06D0     		beq	.L33
 24280              		.loc 1 648 0 is_stmt 0 discriminator 1
 24281 04f0 BB68     		ldr	r3, [r7, #8]
 24282 04f2 002B     		cmp	r3, #0
 24283 04f4 03D0     		beq	.L33
 649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     bitstatus = SET;
 24284              		.loc 1 651 0 is_stmt 1
 24285 04f6 4FF00103 		mov	r3, #1
 24286 04fa FB73     		strb	r3, [r7, #15]
 24287 04fc 02E0     		b	.L34
 24288              	.L33:
 652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   else
 654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   {
 655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****     bitstatus = RESET;
 24289              		.loc 1 656 0
 24290 04fe 4FF00003 		mov	r3, #0
 24291 0502 FB73     		strb	r3, [r7, #15]
 24292              	.L34:
 657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   }
 658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   return  bitstatus;
 24293              		.loc 1 659 0
 24294 0504 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24295              		.loc 1 660 0
 24296 0506 1846     		mov	r0, r3
 24297 0508 07F11407 		add	r7, r7, #20
 24298 050c BD46     		mov	sp, r7
 24299 050e 80BC     		pop	{r7}
 24300 0510 7047     		bx	lr
 24301              		.cfi_endproc
 24302              	.LFE44:
 24304 0512 00BF     		.align	2
 24305              		.global	DAC_ClearITPendingBit
 24306              		.thumb
 24307              		.thumb_func
 24309              	DAC_ClearITPendingBit:
 24310              	.LFB45:
 661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** /**
 663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   * @retval None
 674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   */
 675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** {
 24311              		.loc 1 676 0
 24312              		.cfi_startproc
 24313              		@ args = 0, pretend = 0, frame = 8
 24314              		@ frame_needed = 1, uses_anonymous_args = 0
 24315              		@ link register save eliminated.
 24316 0514 80B4     		push	{r7}
 24317              	.LCFI47:
 24318              		.cfi_def_cfa_offset 4
 24319 0516 83B0     		sub	sp, sp, #12
 24320              	.LCFI48:
 24321              		.cfi_def_cfa_offset 16
 24322 0518 00AF     		add	r7, sp, #0
 24323              		.cfi_offset 7, -4
 24324              	.LCFI49:
 24325              		.cfi_def_cfa_register 7
 24326 051a 7860     		str	r0, [r7, #4]
 24327 051c 3960     		str	r1, [r7, #0]
 677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Check the parameters */
 678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** 
 681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 24328              		.loc 1 682 0
 24329 051e 4FF4E843 		mov	r3, #29696
 24330 0522 C4F20003 		movt	r3, 16384
 24331 0526 7A68     		ldr	r2, [r7, #4]
 24332 0528 3968     		ldr	r1, [r7, #0]
 24333 052a 01FA02F2 		lsl	r2, r1, r2
 24334 052e 5A63     		str	r2, [r3, #52]
 683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_dac.c **** }
 24335              		.loc 1 683 0
 24336 0530 07F10C07 		add	r7, r7, #12
 24337 0534 BD46     		mov	sp, r7
 24338 0536 80BC     		pop	{r7}
 24339 0538 7047     		bx	lr
 24340              		.cfi_endproc
 24341              	.LFE45:
 24343              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_dac.c
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23379  .text:00000000 $t
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23384  .text:00000000 DAC_DeInit
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23417  .text:00000020 DAC_Init
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23496  .text:0000009c DAC_StructInit
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23543  .text:000000d0 DAC_Cmd
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23606  .text:00000138 DAC_SoftwareTriggerCmd
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23671  .text:000001a8 DAC_DualSoftwareTriggerCmd
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23726  .text:000001f4 DAC_WaveGenerationCmd
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23790  .text:00000258 DAC_SetChannel1Data
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23840  .text:00000290 DAC_SetChannel2Data
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23890  .text:000002c8 DAC_SetDualChannelData
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:23963  .text:00000330 DAC_GetDataOutputValue
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24013  .text:0000036c DAC_DMACmd
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24076  .text:000003d4 DAC_ITConfig
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24140  .text:00000438 DAC_GetFlagStatus
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24197  .text:00000480 DAC_ClearFlag
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24236  .text:000004a8 DAC_GetITStatus
C:\Users\red4sch\AppData\Local\Temp\ccepTBFs.s:24309  .text:00000514 DAC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
