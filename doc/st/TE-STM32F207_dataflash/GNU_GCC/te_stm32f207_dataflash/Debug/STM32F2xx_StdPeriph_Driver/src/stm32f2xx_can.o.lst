   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f2xx_can.c"
  23              	.Ltext0:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c"
 23400              		.align	2
 23401              		.global	CAN_DeInit
 23402              		.thumb
 23403              		.thumb_func
 23405              	CAN_DeInit:
 23406              	.LFB29:
   1:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @file    stm32f2xx_can.c
   4:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - Initialization and Configuration 
  10:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - CAN Frames Transmission 
  11:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - CAN Frames Reception    
  12:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - Operation modes switch  
  13:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - Error management          
  14:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *           - Interrupts and flags        
  15:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         
  16:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *  @verbatim
  17:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                               
  18:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          ===================================================================      
  19:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                                   How to use this driver
  20:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          ===================================================================
  21:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 
  22:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *     
  27:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          2. CAN pins configuration
  28:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                  the function  GPIO_Init();
  34:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *    
  35:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               
  38:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         
  40:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *              function.
  42:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               
  43:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *              function.  
  45:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            
  46:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         
  48:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               
  50:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *              CAN_MessagePending() function.            
  52:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                   
  53:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *               
  62:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *              
  63:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *  @endverbatim
  64:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         
  65:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ******************************************************************************
  66:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @attention
  67:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *
  68:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *
  75:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ******************************************************************************  
  77:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
  78:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
  79:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #include "stm32f2xx_can.h"
  81:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #include "stm32f2xx_rcc.h"
  82:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
  83:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
  84:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
  85:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
  86:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
  87:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN 
  88:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief CAN driver modules
  89:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
  90:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */ 
  91:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
  94:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* CAN Master Control Register bits */
  95:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
  97:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* CAN Mailbox Transmit Request */
  98:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* CAN Filter Master Register bits */
 101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Time out for INAK bit */
 104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Time out for SLAK bit */
 106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Flags in TSR register */
 109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Flags in RF1R register */
 111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Flags in RF0R register */
 113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Flags in MSR register */
 115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Flags in ESR register */
 117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Mailboxes definition */
 120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Private_Functions
 133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
 134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
 139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim    
 140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
 141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       Initialization and Configuration functions
 142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
 143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to 
 144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Configures the CAN reception filter.                                      
 149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Select the start bank filter for slave CAN.
 150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
 153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
 154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
 155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None.
 161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 23407              		.loc 1 163 0
 23408              		.cfi_startproc
 23409              		@ args = 0, pretend = 0, frame = 8
 23410              		@ frame_needed = 1, uses_anonymous_args = 0
 23411 0000 80B5     		push	{r7, lr}
 23412              	.LCFI0:
 23413              		.cfi_def_cfa_offset 8
 23414 0002 82B0     		sub	sp, sp, #8
 23415              	.LCFI1:
 23416              		.cfi_def_cfa_offset 16
 23417 0004 00AF     		add	r7, sp, #0
 23418              		.cfi_offset 14, -4
 23419              		.cfi_offset 7, -8
 23420              	.LCFI2:
 23421              		.cfi_def_cfa_register 7
 23422 0006 7860     		str	r0, [r7, #4]
 164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  
 167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CANx == CAN1)
 23423              		.loc 1 167 0
 23424 0008 7A68     		ldr	r2, [r7, #4]
 23425 000a 4FF4C843 		mov	r3, #25600
 23426 000e C4F20003 		movt	r3, 16384
 23427 0012 9A42     		cmp	r2, r3
 23428 0014 0CD1     		bne	.L2
 168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Enable CAN1 reset state */
 170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 23429              		.loc 1 170 0
 23430 0016 4FF00070 		mov	r0, #33554432
 23431 001a 4FF00101 		mov	r1, #1
 23432 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Release CAN1 from reset state */
 172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 23433              		.loc 1 172 0
 23434 0022 4FF00070 		mov	r0, #33554432
 23435 0026 4FF00001 		mov	r1, #0
 23436 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23437 002e 0BE0     		b	.L1
 23438              	.L2:
 173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {  
 176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Enable CAN2 reset state */
 177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 23439              		.loc 1 177 0
 23440 0030 4FF08060 		mov	r0, #67108864
 23441 0034 4FF00101 		mov	r1, #1
 23442 0038 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Release CAN2 from reset state */
 179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 23443              		.loc 1 179 0
 23444 003c 4FF08060 		mov	r0, #67108864
 23445 0040 4FF00001 		mov	r1, #0
 23446 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23447              	.L1:
 180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 23448              		.loc 1 181 0
 23449 0048 07F10807 		add	r7, r7, #8
 23450 004c BD46     		mov	sp, r7
 23451 004e 80BD     		pop	{r7, pc}
 23452              		.cfi_endproc
 23453              	.LFE29:
 23455              		.align	2
 23456              		.global	CAN_Init
 23457              		.thumb
 23458              		.thumb_func
 23460              	CAN_Init:
 23461              	.LFB30:
 182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 23462              		.loc 1 193 0
 23463              		.cfi_startproc
 23464              		@ args = 0, pretend = 0, frame = 16
 23465              		@ frame_needed = 1, uses_anonymous_args = 0
 23466              		@ link register save eliminated.
 23467 0050 80B4     		push	{r7}
 23468              	.LCFI3:
 23469              		.cfi_def_cfa_offset 4
 23470 0052 85B0     		sub	sp, sp, #20
 23471              	.LCFI4:
 23472              		.cfi_def_cfa_offset 24
 23473 0054 00AF     		add	r7, sp, #0
 23474              		.cfi_offset 7, -4
 23475              	.LCFI5:
 23476              		.cfi_def_cfa_register 7
 23477 0056 7860     		str	r0, [r7, #4]
 23478 0058 3960     		str	r1, [r7, #0]
 194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 23479              		.loc 1 194 0
 23480 005a 4FF00003 		mov	r3, #0
 23481 005e FB73     		strb	r3, [r7, #15]
 195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t wait_ack = 0x00000000;
 23482              		.loc 1 195 0
 23483 0060 4FF00003 		mov	r3, #0
 23484 0064 BB60     		str	r3, [r7, #8]
 196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Exit from sleep mode */
 211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 23485              		.loc 1 211 0
 23486 0066 7B68     		ldr	r3, [r7, #4]
 23487 0068 1B68     		ldr	r3, [r3, #0]
 23488 006a 23F00202 		bic	r2, r3, #2
 23489 006e 7B68     		ldr	r3, [r7, #4]
 23490 0070 1A60     		str	r2, [r3, #0]
 212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Request initialisation */
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 23491              		.loc 1 214 0
 23492 0072 7B68     		ldr	r3, [r7, #4]
 23493 0074 1B68     		ldr	r3, [r3, #0]
 23494 0076 43F00102 		orr	r2, r3, #1
 23495 007a 7B68     		ldr	r3, [r7, #4]
 23496 007c 1A60     		str	r2, [r3, #0]
 215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Wait the acknowledge */
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23497              		.loc 1 217 0
 23498 007e 03E0     		b	.L5
 23499              	.L7:
 218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     wait_ack++;
 23500              		.loc 1 219 0
 23501 0080 BB68     		ldr	r3, [r7, #8]
 23502 0082 03F10103 		add	r3, r3, #1
 23503 0086 BB60     		str	r3, [r7, #8]
 23504              	.L5:
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23505              		.loc 1 217 0 discriminator 1
 23506 0088 7B68     		ldr	r3, [r7, #4]
 23507 008a 5B68     		ldr	r3, [r3, #4]
 23508 008c 03F00103 		and	r3, r3, #1
 23509 0090 002B     		cmp	r3, #0
 23510 0092 04D1     		bne	.L6
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23511              		.loc 1 217 0 is_stmt 0 discriminator 2
 23512 0094 BA68     		ldr	r2, [r7, #8]
 23513 0096 4FF6FF73 		movw	r3, #65535
 23514 009a 9A42     		cmp	r2, r3
 23515 009c F0D1     		bne	.L7
 23516              	.L6:
 220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check acknowledge */
 223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 23517              		.loc 1 223 0 is_stmt 1
 23518 009e 7B68     		ldr	r3, [r7, #4]
 23519 00a0 5B68     		ldr	r3, [r3, #4]
 23520 00a2 03F00103 		and	r3, r3, #1
 23521 00a6 002B     		cmp	r3, #0
 23522 00a8 03D1     		bne	.L8
 224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 23523              		.loc 1 225 0
 23524 00aa 4FF00003 		mov	r3, #0
 23525 00ae FB73     		strb	r3, [r7, #15]
 23526 00b0 ABE0     		b	.L9
 23527              	.L8:
 226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else 
 228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the time triggered communication mode */
 230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 23528              		.loc 1 230 0
 23529 00b2 3B68     		ldr	r3, [r7, #0]
 23530 00b4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 23531 00b6 012B     		cmp	r3, #1
 23532 00b8 06D1     		bne	.L10
 231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 23533              		.loc 1 232 0
 23534 00ba 7B68     		ldr	r3, [r7, #4]
 23535 00bc 1B68     		ldr	r3, [r3, #0]
 23536 00be 43F08002 		orr	r2, r3, #128
 23537 00c2 7B68     		ldr	r3, [r7, #4]
 23538 00c4 1A60     		str	r2, [r3, #0]
 23539 00c6 05E0     		b	.L11
 23540              	.L10:
 233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 23541              		.loc 1 236 0
 23542 00c8 7B68     		ldr	r3, [r7, #4]
 23543 00ca 1B68     		ldr	r3, [r3, #0]
 23544 00cc 23F08002 		bic	r2, r3, #128
 23545 00d0 7B68     		ldr	r3, [r7, #4]
 23546 00d2 1A60     		str	r2, [r3, #0]
 23547              	.L11:
 237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the automatic bus-off management */
 240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 23548              		.loc 1 240 0
 23549 00d4 3B68     		ldr	r3, [r7, #0]
 23550 00d6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 23551 00d8 012B     		cmp	r3, #1
 23552 00da 06D1     		bne	.L12
 241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 23553              		.loc 1 242 0
 23554 00dc 7B68     		ldr	r3, [r7, #4]
 23555 00de 1B68     		ldr	r3, [r3, #0]
 23556 00e0 43F04002 		orr	r2, r3, #64
 23557 00e4 7B68     		ldr	r3, [r7, #4]
 23558 00e6 1A60     		str	r2, [r3, #0]
 23559 00e8 05E0     		b	.L13
 23560              	.L12:
 243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 23561              		.loc 1 246 0
 23562 00ea 7B68     		ldr	r3, [r7, #4]
 23563 00ec 1B68     		ldr	r3, [r3, #0]
 23564 00ee 23F04002 		bic	r2, r3, #64
 23565 00f2 7B68     		ldr	r3, [r7, #4]
 23566 00f4 1A60     		str	r2, [r3, #0]
 23567              	.L13:
 247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the automatic wake-up mode */
 250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 23568              		.loc 1 250 0
 23569 00f6 3B68     		ldr	r3, [r7, #0]
 23570 00f8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 23571 00fa 012B     		cmp	r3, #1
 23572 00fc 06D1     		bne	.L14
 251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 23573              		.loc 1 252 0
 23574 00fe 7B68     		ldr	r3, [r7, #4]
 23575 0100 1B68     		ldr	r3, [r3, #0]
 23576 0102 43F02002 		orr	r2, r3, #32
 23577 0106 7B68     		ldr	r3, [r7, #4]
 23578 0108 1A60     		str	r2, [r3, #0]
 23579 010a 05E0     		b	.L15
 23580              	.L14:
 253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 23581              		.loc 1 256 0
 23582 010c 7B68     		ldr	r3, [r7, #4]
 23583 010e 1B68     		ldr	r3, [r3, #0]
 23584 0110 23F02002 		bic	r2, r3, #32
 23585 0114 7B68     		ldr	r3, [r7, #4]
 23586 0116 1A60     		str	r2, [r3, #0]
 23587              	.L15:
 257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the no automatic retransmission */
 260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 23588              		.loc 1 260 0
 23589 0118 3B68     		ldr	r3, [r7, #0]
 23590 011a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 23591 011c 012B     		cmp	r3, #1
 23592 011e 06D1     		bne	.L16
 261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 23593              		.loc 1 262 0
 23594 0120 7B68     		ldr	r3, [r7, #4]
 23595 0122 1B68     		ldr	r3, [r3, #0]
 23596 0124 43F01002 		orr	r2, r3, #16
 23597 0128 7B68     		ldr	r3, [r7, #4]
 23598 012a 1A60     		str	r2, [r3, #0]
 23599 012c 05E0     		b	.L17
 23600              	.L16:
 263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 23601              		.loc 1 266 0
 23602 012e 7B68     		ldr	r3, [r7, #4]
 23603 0130 1B68     		ldr	r3, [r3, #0]
 23604 0132 23F01002 		bic	r2, r3, #16
 23605 0136 7B68     		ldr	r3, [r7, #4]
 23606 0138 1A60     		str	r2, [r3, #0]
 23607              	.L17:
 267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the receive FIFO locked mode */
 270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 23608              		.loc 1 270 0
 23609 013a 3B68     		ldr	r3, [r7, #0]
 23610 013c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 23611 013e 012B     		cmp	r3, #1
 23612 0140 06D1     		bne	.L18
 271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 23613              		.loc 1 272 0
 23614 0142 7B68     		ldr	r3, [r7, #4]
 23615 0144 1B68     		ldr	r3, [r3, #0]
 23616 0146 43F00802 		orr	r2, r3, #8
 23617 014a 7B68     		ldr	r3, [r7, #4]
 23618 014c 1A60     		str	r2, [r3, #0]
 23619 014e 05E0     		b	.L19
 23620              	.L18:
 273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 23621              		.loc 1 276 0
 23622 0150 7B68     		ldr	r3, [r7, #4]
 23623 0152 1B68     		ldr	r3, [r3, #0]
 23624 0154 23F00802 		bic	r2, r3, #8
 23625 0158 7B68     		ldr	r3, [r7, #4]
 23626 015a 1A60     		str	r2, [r3, #0]
 23627              	.L19:
 277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the transmit FIFO priority */
 280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 23628              		.loc 1 280 0
 23629 015c 3B68     		ldr	r3, [r7, #0]
 23630 015e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 23631 0160 012B     		cmp	r3, #1
 23632 0162 06D1     		bne	.L20
 281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 23633              		.loc 1 282 0
 23634 0164 7B68     		ldr	r3, [r7, #4]
 23635 0166 1B68     		ldr	r3, [r3, #0]
 23636 0168 43F00402 		orr	r2, r3, #4
 23637 016c 7B68     		ldr	r3, [r7, #4]
 23638 016e 1A60     		str	r2, [r3, #0]
 23639 0170 05E0     		b	.L21
 23640              	.L20:
 283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 23641              		.loc 1 286 0
 23642 0172 7B68     		ldr	r3, [r7, #4]
 23643 0174 1B68     		ldr	r3, [r3, #0]
 23644 0176 23F00402 		bic	r2, r3, #4
 23645 017a 7B68     		ldr	r3, [r7, #4]
 23646 017c 1A60     		str	r2, [r3, #0]
 23647              	.L21:
 287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set the bit timing register */
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 23648              		.loc 1 290 0
 23649 017e 3B68     		ldr	r3, [r7, #0]
 23650 0180 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23651 0182 4FEA8372 		lsl	r2, r3, #30
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 23652              		.loc 1 291 0
 23653 0186 3B68     		ldr	r3, [r7, #0]
 23654 0188 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 23655 018a 4FEA0363 		lsl	r3, r3, #24
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 23656              		.loc 1 290 0
 23657 018e 42EA0302 		orr	r2, r2, r3
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 23658              		.loc 1 292 0
 23659 0192 3B68     		ldr	r3, [r7, #0]
 23660 0194 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23661 0196 4FEA0343 		lsl	r3, r3, #16
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 23662              		.loc 1 291 0
 23663 019a 42EA0302 		orr	r2, r2, r3
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 23664              		.loc 1 293 0
 23665 019e 3B68     		ldr	r3, [r7, #0]
 23666 01a0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 23667 01a2 4FEA0353 		lsl	r3, r3, #20
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 23668              		.loc 1 292 0
 23669 01a6 42EA0302 		orr	r2, r2, r3
 294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 23670              		.loc 1 294 0
 23671 01aa 3B68     		ldr	r3, [r7, #0]
 23672 01ac 1B88     		ldrh	r3, [r3, #0]
 23673 01ae 03F1FF33 		add	r3, r3, #-1
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 23674              		.loc 1 293 0
 23675 01b2 42EA0302 		orr	r2, r2, r3
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 23676              		.loc 1 290 0
 23677 01b6 7B68     		ldr	r3, [r7, #4]
 23678 01b8 DA61     		str	r2, [r3, #28]
 295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Request leave initialisation */
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 23679              		.loc 1 297 0
 23680 01ba 7B68     		ldr	r3, [r7, #4]
 23681 01bc 1B68     		ldr	r3, [r3, #0]
 23682 01be 23F00102 		bic	r2, r3, #1
 23683 01c2 7B68     		ldr	r3, [r7, #4]
 23684 01c4 1A60     		str	r2, [r3, #0]
 298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    /* Wait the acknowledge */
 300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    wait_ack = 0;
 23685              		.loc 1 300 0
 23686 01c6 4FF00003 		mov	r3, #0
 23687 01ca BB60     		str	r3, [r7, #8]
 301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23688              		.loc 1 302 0
 23689 01cc 03E0     		b	.L22
 23690              	.L24:
 303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    {
 304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      wait_ack++;
 23691              		.loc 1 304 0
 23692 01ce BB68     		ldr	r3, [r7, #8]
 23693 01d0 03F10103 		add	r3, r3, #1
 23694 01d4 BB60     		str	r3, [r7, #8]
 23695              	.L22:
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23696              		.loc 1 302 0 discriminator 1
 23697 01d6 7B68     		ldr	r3, [r7, #4]
 23698 01d8 5B68     		ldr	r3, [r3, #4]
 23699 01da 03F00103 		and	r3, r3, #1
 23700 01de DBB2     		uxtb	r3, r3
 23701 01e0 002B     		cmp	r3, #0
 23702 01e2 04D0     		beq	.L23
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 23703              		.loc 1 302 0 is_stmt 0 discriminator 2
 23704 01e4 BA68     		ldr	r2, [r7, #8]
 23705 01e6 4FF6FF73 		movw	r3, #65535
 23706 01ea 9A42     		cmp	r2, r3
 23707 01ec EFD1     		bne	.L24
 23708              	.L23:
 305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    }
 306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* ...and check acknowledged */
 308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 23709              		.loc 1 308 0 is_stmt 1
 23710 01ee 7B68     		ldr	r3, [r7, #4]
 23711 01f0 5B68     		ldr	r3, [r3, #4]
 23712 01f2 03F00103 		and	r3, r3, #1
 23713 01f6 DBB2     		uxtb	r3, r3
 23714 01f8 002B     		cmp	r3, #0
 23715 01fa 03D0     		beq	.L25
 309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 23716              		.loc 1 310 0
 23717 01fc 4FF00003 		mov	r3, #0
 23718 0200 FB73     		strb	r3, [r7, #15]
 23719 0202 02E0     		b	.L9
 23720              	.L25:
 311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 23721              		.loc 1 314 0
 23722 0204 4FF00103 		mov	r3, #1
 23723 0208 FB73     		strb	r3, [r7, #15]
 23724              	.L9:
 315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* At this step, return the status of initialization */
 319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return InitStatus;
 23725              		.loc 1 319 0
 23726 020a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 23727              		.loc 1 320 0
 23728 020c 1846     		mov	r0, r3
 23729 020e 07F11407 		add	r7, r7, #20
 23730 0212 BD46     		mov	sp, r7
 23731 0214 80BC     		pop	{r7}
 23732 0216 7047     		bx	lr
 23733              		.cfi_endproc
 23734              	.LFE30:
 23736              		.align	2
 23737              		.global	CAN_FilterInit
 23738              		.thumb
 23739              		.thumb_func
 23741              	CAN_FilterInit:
 23742              	.LFB31:
 321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         contains the configuration information.
 327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 23743              		.loc 1 330 0
 23744              		.cfi_startproc
 23745              		@ args = 0, pretend = 0, frame = 16
 23746              		@ frame_needed = 1, uses_anonymous_args = 0
 23747              		@ link register save eliminated.
 23748 0218 80B4     		push	{r7}
 23749              	.LCFI6:
 23750              		.cfi_def_cfa_offset 4
 23751 021a 85B0     		sub	sp, sp, #20
 23752              	.LCFI7:
 23753              		.cfi_def_cfa_offset 24
 23754 021c 00AF     		add	r7, sp, #0
 23755              		.cfi_offset 7, -4
 23756              	.LCFI8:
 23757              		.cfi_def_cfa_register 7
 23758 021e 7860     		str	r0, [r7, #4]
 331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 23759              		.loc 1 331 0
 23760 0220 4FF00003 		mov	r3, #0
 23761 0224 FB60     		str	r3, [r7, #12]
 332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 23762              		.loc 1 339 0
 23763 0226 7B68     		ldr	r3, [r7, #4]
 23764 0228 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 23765 022a 4FF00102 		mov	r2, #1
 23766 022e 02FA03F3 		lsl	r3, r2, r3
 23767 0232 FB60     		str	r3, [r7, #12]
 340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialisation mode for the filter */
 342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 23768              		.loc 1 342 0
 23769 0234 4FF4C843 		mov	r3, #25600
 23770 0238 C4F20003 		movt	r3, 16384
 23771 023c 4FF4C842 		mov	r2, #25600
 23772 0240 C4F20002 		movt	r2, 16384
 23773 0244 D2F80022 		ldr	r2, [r2, #512]
 23774 0248 42F00102 		orr	r2, r2, #1
 23775 024c C3F80022 		str	r2, [r3, #512]
 343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Filter Deactivation */
 345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 23776              		.loc 1 345 0
 23777 0250 4FF4C843 		mov	r3, #25600
 23778 0254 C4F20003 		movt	r3, 16384
 23779 0258 4FF4C842 		mov	r2, #25600
 23780 025c C4F20002 		movt	r2, 16384
 23781 0260 D2F81C12 		ldr	r1, [r2, #540]
 23782 0264 FA68     		ldr	r2, [r7, #12]
 23783 0266 6FEA0202 		mvn	r2, r2
 23784 026a 01EA0202 		and	r2, r1, r2
 23785 026e C3F81C22 		str	r2, [r3, #540]
 346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Filter Scale */
 348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 23786              		.loc 1 348 0
 23787 0272 7B68     		ldr	r3, [r7, #4]
 23788 0274 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23789 0276 002B     		cmp	r3, #0
 23790 0278 36D1     		bne	.L27
 349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* 16-bit scale for the filter */
 351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 23791              		.loc 1 351 0
 23792 027a 4FF4C843 		mov	r3, #25600
 23793 027e C4F20003 		movt	r3, 16384
 23794 0282 4FF4C842 		mov	r2, #25600
 23795 0286 C4F20002 		movt	r2, 16384
 23796 028a D2F80C12 		ldr	r1, [r2, #524]
 23797 028e FA68     		ldr	r2, [r7, #12]
 23798 0290 6FEA0202 		mvn	r2, r2
 23799 0294 01EA0202 		and	r2, r1, r2
 23800 0298 C3F80C22 		str	r2, [r3, #524]
 352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 23801              		.loc 1 355 0
 23802 029c 4FF4C843 		mov	r3, #25600
 23803 02a0 C4F20003 		movt	r3, 16384
 23804 02a4 7A68     		ldr	r2, [r7, #4]
 23805 02a6 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 23806              		.loc 1 356 0
 23807 02a8 7968     		ldr	r1, [r7, #4]
 23808 02aa C988     		ldrh	r1, [r1, #6]
 23809 02ac 4FEA0140 		lsl	r0, r1, #16
 357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 23810              		.loc 1 357 0
 23811 02b0 7968     		ldr	r1, [r7, #4]
 23812 02b2 4988     		ldrh	r1, [r1, #2]
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 23813              		.loc 1 356 0
 23814 02b4 40EA0101 		orr	r1, r0, r1
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 23815              		.loc 1 355 0
 23816 02b8 02F14802 		add	r2, r2, #72
 23817 02bc 43F83210 		str	r1, [r3, r2, lsl #3]
 358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 23818              		.loc 1 361 0
 23819 02c0 4FF4C842 		mov	r2, #25600
 23820 02c4 C4F20002 		movt	r2, 16384
 23821 02c8 7B68     		ldr	r3, [r7, #4]
 23822 02ca 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 23823              		.loc 1 362 0
 23824 02cc 7968     		ldr	r1, [r7, #4]
 23825 02ce 8988     		ldrh	r1, [r1, #4]
 23826 02d0 4FEA0140 		lsl	r0, r1, #16
 363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 23827              		.loc 1 363 0
 23828 02d4 7968     		ldr	r1, [r7, #4]
 23829 02d6 0988     		ldrh	r1, [r1, #0]
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 23830              		.loc 1 362 0
 23831 02d8 40EA0101 		orr	r1, r0, r1
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 23832              		.loc 1 361 0
 23833 02dc 03F14803 		add	r3, r3, #72
 23834 02e0 4FEAC303 		lsl	r3, r3, #3
 23835 02e4 1344     		add	r3, r2, r3
 23836 02e6 5960     		str	r1, [r3, #4]
 23837              	.L27:
 364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 23838              		.loc 1 366 0
 23839 02e8 7B68     		ldr	r3, [r7, #4]
 23840 02ea 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23841 02ec 012B     		cmp	r3, #1
 23842 02ee 34D1     		bne	.L28
 367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* 32-bit scale for the filter */
 369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 23843              		.loc 1 369 0
 23844 02f0 4FF4C843 		mov	r3, #25600
 23845 02f4 C4F20003 		movt	r3, 16384
 23846 02f8 4FF4C842 		mov	r2, #25600
 23847 02fc C4F20002 		movt	r2, 16384
 23848 0300 D2F80C12 		ldr	r1, [r2, #524]
 23849 0304 FA68     		ldr	r2, [r7, #12]
 23850 0306 41EA0202 		orr	r2, r1, r2
 23851 030a C3F80C22 		str	r2, [r3, #524]
 370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 23852              		.loc 1 371 0
 23853 030e 4FF4C843 		mov	r3, #25600
 23854 0312 C4F20003 		movt	r3, 16384
 23855 0316 7A68     		ldr	r2, [r7, #4]
 23856 0318 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 23857              		.loc 1 372 0
 23858 031a 7968     		ldr	r1, [r7, #4]
 23859 031c 0988     		ldrh	r1, [r1, #0]
 23860 031e 4FEA0140 		lsl	r0, r1, #16
 373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 23861              		.loc 1 373 0
 23862 0322 7968     		ldr	r1, [r7, #4]
 23863 0324 4988     		ldrh	r1, [r1, #2]
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 23864              		.loc 1 372 0
 23865 0326 40EA0101 		orr	r1, r0, r1
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 23866              		.loc 1 371 0
 23867 032a 02F14802 		add	r2, r2, #72
 23868 032e 43F83210 		str	r1, [r3, r2, lsl #3]
 374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 23869              		.loc 1 375 0
 23870 0332 4FF4C842 		mov	r2, #25600
 23871 0336 C4F20002 		movt	r2, 16384
 23872 033a 7B68     		ldr	r3, [r7, #4]
 23873 033c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 23874              		.loc 1 376 0
 23875 033e 7968     		ldr	r1, [r7, #4]
 23876 0340 8988     		ldrh	r1, [r1, #4]
 23877 0342 4FEA0140 		lsl	r0, r1, #16
 377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 23878              		.loc 1 377 0
 23879 0346 7968     		ldr	r1, [r7, #4]
 23880 0348 C988     		ldrh	r1, [r1, #6]
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 23881              		.loc 1 376 0
 23882 034a 40EA0101 		orr	r1, r0, r1
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 23883              		.loc 1 375 0
 23884 034e 03F14803 		add	r3, r3, #72
 23885 0352 4FEAC303 		lsl	r3, r3, #3
 23886 0356 1344     		add	r3, r2, r3
 23887 0358 5960     		str	r1, [r3, #4]
 23888              	.L28:
 378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Filter Mode */
 381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 23889              		.loc 1 381 0
 23890 035a 7B68     		ldr	r3, [r7, #4]
 23891 035c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 23892 035e 002B     		cmp	r3, #0
 23893 0360 11D1     		bne	.L29
 382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /*Id/Mask mode for the filter*/
 384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 23894              		.loc 1 384 0
 23895 0362 4FF4C843 		mov	r3, #25600
 23896 0366 C4F20003 		movt	r3, 16384
 23897 036a 4FF4C842 		mov	r2, #25600
 23898 036e C4F20002 		movt	r2, 16384
 23899 0372 D2F80412 		ldr	r1, [r2, #516]
 23900 0376 FA68     		ldr	r2, [r7, #12]
 23901 0378 6FEA0202 		mvn	r2, r2
 23902 037c 01EA0202 		and	r2, r1, r2
 23903 0380 C3F80422 		str	r2, [r3, #516]
 23904 0384 0EE0     		b	.L30
 23905              	.L29:
 385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /*Identifier list mode for the filter*/
 389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 23906              		.loc 1 389 0
 23907 0386 4FF4C843 		mov	r3, #25600
 23908 038a C4F20003 		movt	r3, 16384
 23909 038e 4FF4C842 		mov	r2, #25600
 23910 0392 C4F20002 		movt	r2, 16384
 23911 0396 D2F80412 		ldr	r1, [r2, #516]
 23912 039a FA68     		ldr	r2, [r7, #12]
 23913 039c 41EA0202 		orr	r2, r1, r2
 23914 03a0 C3F80422 		str	r2, [r3, #516]
 23915              	.L30:
 390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Filter FIFO assignment */
 393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 23916              		.loc 1 393 0
 23917 03a4 7B68     		ldr	r3, [r7, #4]
 23918 03a6 1B89     		ldrh	r3, [r3, #8]
 23919 03a8 002B     		cmp	r3, #0
 23920 03aa 10D1     		bne	.L31
 394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 23921              		.loc 1 396 0
 23922 03ac 4FF4C843 		mov	r3, #25600
 23923 03b0 C4F20003 		movt	r3, 16384
 23924 03b4 4FF4C842 		mov	r2, #25600
 23925 03b8 C4F20002 		movt	r2, 16384
 23926 03bc D2F81412 		ldr	r1, [r2, #532]
 23927 03c0 FA68     		ldr	r2, [r7, #12]
 23928 03c2 6FEA0202 		mvn	r2, r2
 23929 03c6 01EA0202 		and	r2, r1, r2
 23930 03ca C3F81422 		str	r2, [r3, #532]
 23931              	.L31:
 397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 23932              		.loc 1 399 0
 23933 03ce 7B68     		ldr	r3, [r7, #4]
 23934 03d0 1B89     		ldrh	r3, [r3, #8]
 23935 03d2 012B     		cmp	r3, #1
 23936 03d4 0ED1     		bne	.L32
 400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 23937              		.loc 1 402 0
 23938 03d6 4FF4C843 		mov	r3, #25600
 23939 03da C4F20003 		movt	r3, 16384
 23940 03de 4FF4C842 		mov	r2, #25600
 23941 03e2 C4F20002 		movt	r2, 16384
 23942 03e6 D2F81412 		ldr	r1, [r2, #532]
 23943 03ea FA68     		ldr	r2, [r7, #12]
 23944 03ec 41EA0202 		orr	r2, r1, r2
 23945 03f0 C3F81422 		str	r2, [r3, #532]
 23946              	.L32:
 403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Filter activation */
 406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 23947              		.loc 1 406 0
 23948 03f4 7B68     		ldr	r3, [r7, #4]
 23949 03f6 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 23950 03f8 012B     		cmp	r3, #1
 23951 03fa 0ED1     		bne	.L33
 407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 23952              		.loc 1 408 0
 23953 03fc 4FF4C843 		mov	r3, #25600
 23954 0400 C4F20003 		movt	r3, 16384
 23955 0404 4FF4C842 		mov	r2, #25600
 23956 0408 C4F20002 		movt	r2, 16384
 23957 040c D2F81C12 		ldr	r1, [r2, #540]
 23958 0410 FA68     		ldr	r2, [r7, #12]
 23959 0412 41EA0202 		orr	r2, r1, r2
 23960 0416 C3F81C22 		str	r2, [r3, #540]
 23961              	.L33:
 409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 23962              		.loc 1 412 0
 23963 041a 4FF4C843 		mov	r3, #25600
 23964 041e C4F20003 		movt	r3, 16384
 23965 0422 4FF4C842 		mov	r2, #25600
 23966 0426 C4F20002 		movt	r2, 16384
 23967 042a D2F80022 		ldr	r2, [r2, #512]
 23968 042e 22F00102 		bic	r2, r2, #1
 23969 0432 C3F80022 		str	r2, [r3, #512]
 413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 23970              		.loc 1 413 0
 23971 0436 07F11407 		add	r7, r7, #20
 23972 043a BD46     		mov	sp, r7
 23973 043c 80BC     		pop	{r7}
 23974 043e 7047     		bx	lr
 23975              		.cfi_endproc
 23976              	.LFE31:
 23978              		.align	2
 23979              		.global	CAN_StructInit
 23980              		.thumb
 23981              		.thumb_func
 23983              	CAN_StructInit:
 23984              	.LFB32:
 414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 23985              		.loc 1 421 0
 23986              		.cfi_startproc
 23987              		@ args = 0, pretend = 0, frame = 8
 23988              		@ frame_needed = 1, uses_anonymous_args = 0
 23989              		@ link register save eliminated.
 23990 0440 80B4     		push	{r7}
 23991              	.LCFI9:
 23992              		.cfi_def_cfa_offset 4
 23993 0442 83B0     		sub	sp, sp, #12
 23994              	.LCFI10:
 23995              		.cfi_def_cfa_offset 16
 23996 0444 00AF     		add	r7, sp, #0
 23997              		.cfi_offset 7, -4
 23998              	.LCFI11:
 23999              		.cfi_def_cfa_register 7
 24000 0446 7860     		str	r0, [r7, #4]
 422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Reset CAN init structure parameters values */
 423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the time triggered communication mode */
 425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 24001              		.loc 1 425 0
 24002 0448 7B68     		ldr	r3, [r7, #4]
 24003 044a 4FF00002 		mov	r2, #0
 24004 044e 9A71     		strb	r2, [r3, #6]
 426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the automatic bus-off management */
 428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 24005              		.loc 1 428 0
 24006 0450 7B68     		ldr	r3, [r7, #4]
 24007 0452 4FF00002 		mov	r2, #0
 24008 0456 DA71     		strb	r2, [r3, #7]
 429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 24009              		.loc 1 431 0
 24010 0458 7B68     		ldr	r3, [r7, #4]
 24011 045a 4FF00002 		mov	r2, #0
 24012 045e 1A72     		strb	r2, [r3, #8]
 432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the no automatic retransmission */
 434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 24013              		.loc 1 434 0
 24014 0460 7B68     		ldr	r3, [r7, #4]
 24015 0462 4FF00002 		mov	r2, #0
 24016 0466 5A72     		strb	r2, [r3, #9]
 435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 24017              		.loc 1 437 0
 24018 0468 7B68     		ldr	r3, [r7, #4]
 24019 046a 4FF00002 		mov	r2, #0
 24020 046e 9A72     		strb	r2, [r3, #10]
 438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 24021              		.loc 1 440 0
 24022 0470 7B68     		ldr	r3, [r7, #4]
 24023 0472 4FF00002 		mov	r2, #0
 24024 0476 DA72     		strb	r2, [r3, #11]
 441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the CAN_Mode member */
 443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 24025              		.loc 1 443 0
 24026 0478 7B68     		ldr	r3, [r7, #4]
 24027 047a 4FF00002 		mov	r2, #0
 24028 047e 9A70     		strb	r2, [r3, #2]
 444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the CAN_SJW member */
 446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 24029              		.loc 1 446 0
 24030 0480 7B68     		ldr	r3, [r7, #4]
 24031 0482 4FF00002 		mov	r2, #0
 24032 0486 DA70     		strb	r2, [r3, #3]
 447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 24033              		.loc 1 449 0
 24034 0488 7B68     		ldr	r3, [r7, #4]
 24035 048a 4FF00302 		mov	r2, #3
 24036 048e 1A71     		strb	r2, [r3, #4]
 450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 24037              		.loc 1 452 0
 24038 0490 7B68     		ldr	r3, [r7, #4]
 24039 0492 4FF00202 		mov	r2, #2
 24040 0496 5A71     		strb	r2, [r3, #5]
 453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 24041              		.loc 1 455 0
 24042 0498 7B68     		ldr	r3, [r7, #4]
 24043 049a 4FF00102 		mov	r2, #1
 24044 049e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24045              		.loc 1 456 0
 24046 04a0 07F10C07 		add	r7, r7, #12
 24047 04a4 BD46     		mov	sp, r7
 24048 04a6 80BC     		pop	{r7}
 24049 04a8 7047     		bx	lr
 24050              		.cfi_endproc
 24051              	.LFE32:
 24053 04aa 00BF     		.align	2
 24054              		.global	CAN_SlaveStartBank
 24055              		.thumb
 24056              		.thumb_func
 24058              	CAN_SlaveStartBank:
 24059              	.LFB33:
 457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24060              		.loc 1 464 0
 24061              		.cfi_startproc
 24062              		@ args = 0, pretend = 0, frame = 8
 24063              		@ frame_needed = 1, uses_anonymous_args = 0
 24064              		@ link register save eliminated.
 24065 04ac 80B4     		push	{r7}
 24066              	.LCFI12:
 24067              		.cfi_def_cfa_offset 4
 24068 04ae 83B0     		sub	sp, sp, #12
 24069              	.LCFI13:
 24070              		.cfi_def_cfa_offset 16
 24071 04b0 00AF     		add	r7, sp, #0
 24072              		.cfi_offset 7, -4
 24073              	.LCFI14:
 24074              		.cfi_def_cfa_register 7
 24075 04b2 0346     		mov	r3, r0
 24076 04b4 FB71     		strb	r3, [r7, #7]
 465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 24077              		.loc 1 469 0
 24078 04b6 4FF4C843 		mov	r3, #25600
 24079 04ba C4F20003 		movt	r3, 16384
 24080 04be 4FF4C842 		mov	r2, #25600
 24081 04c2 C4F20002 		movt	r2, 16384
 24082 04c6 D2F80022 		ldr	r2, [r2, #512]
 24083 04ca 42F00102 		orr	r2, r2, #1
 24084 04ce C3F80022 		str	r2, [r3, #512]
 470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Select the start slave bank */
 472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 24085              		.loc 1 472 0
 24086 04d2 4FF4C843 		mov	r3, #25600
 24087 04d6 C4F20003 		movt	r3, 16384
 24088 04da 4FF4C842 		mov	r2, #25600
 24089 04de C4F20002 		movt	r2, 16384
 24090 04e2 D2F80022 		ldr	r2, [r2, #512]
 24091 04e6 22F47C52 		bic	r2, r2, #16128
 24092 04ea 22F00E02 		bic	r2, r2, #14
 24093 04ee C3F80022 		str	r2, [r3, #512]
 473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 24094              		.loc 1 473 0
 24095 04f2 4FF4C843 		mov	r3, #25600
 24096 04f6 C4F20003 		movt	r3, 16384
 24097 04fa 4FF4C842 		mov	r2, #25600
 24098 04fe C4F20002 		movt	r2, 16384
 24099 0502 D2F80012 		ldr	r1, [r2, #512]
 24100 0506 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24101 0508 4FEA0222 		lsl	r2, r2, #8
 24102 050c 41EA0202 		orr	r2, r1, r2
 24103 0510 C3F80022 		str	r2, [r3, #512]
 474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 24104              		.loc 1 476 0
 24105 0514 4FF4C843 		mov	r3, #25600
 24106 0518 C4F20003 		movt	r3, 16384
 24107 051c 4FF4C842 		mov	r2, #25600
 24108 0520 C4F20002 		movt	r2, 16384
 24109 0524 D2F80022 		ldr	r2, [r2, #512]
 24110 0528 22F00102 		bic	r2, r2, #1
 24111 052c C3F80022 		str	r2, [r3, #512]
 477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24112              		.loc 1 477 0
 24113 0530 07F10C07 		add	r7, r7, #12
 24114 0534 BD46     		mov	sp, r7
 24115 0536 80BC     		pop	{r7}
 24116 0538 7047     		bx	lr
 24117              		.cfi_endproc
 24118              	.LFE33:
 24120 053a 00BF     		.align	2
 24121              		.global	CAN_DBGFreeze
 24122              		.thumb
 24123              		.thumb_func
 24125              	CAN_DBGFreeze:
 24126              	.LFB34:
 478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24127              		.loc 1 489 0
 24128              		.cfi_startproc
 24129              		@ args = 0, pretend = 0, frame = 8
 24130              		@ frame_needed = 1, uses_anonymous_args = 0
 24131              		@ link register save eliminated.
 24132 053c 80B4     		push	{r7}
 24133              	.LCFI15:
 24134              		.cfi_def_cfa_offset 4
 24135 053e 83B0     		sub	sp, sp, #12
 24136              	.LCFI16:
 24137              		.cfi_def_cfa_offset 16
 24138 0540 00AF     		add	r7, sp, #0
 24139              		.cfi_offset 7, -4
 24140              	.LCFI17:
 24141              		.cfi_def_cfa_register 7
 24142 0542 7860     		str	r0, [r7, #4]
 24143 0544 0B46     		mov	r3, r1
 24144 0546 FB70     		strb	r3, [r7, #3]
 490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (NewState != DISABLE)
 24145              		.loc 1 494 0
 24146 0548 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24147 054a 002B     		cmp	r3, #0
 24148 054c 06D0     		beq	.L37
 495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Enable Debug Freeze  */
 497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR |= MCR_DBF;
 24149              		.loc 1 497 0
 24150 054e 7B68     		ldr	r3, [r7, #4]
 24151 0550 1B68     		ldr	r3, [r3, #0]
 24152 0552 43F48032 		orr	r2, r3, #65536
 24153 0556 7B68     		ldr	r3, [r7, #4]
 24154 0558 1A60     		str	r2, [r3, #0]
 24155 055a 05E0     		b	.L36
 24156              	.L37:
 498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Disable Debug Freeze */
 502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 24157              		.loc 1 502 0
 24158 055c 7B68     		ldr	r3, [r7, #4]
 24159 055e 1B68     		ldr	r3, [r3, #0]
 24160 0560 23F48032 		bic	r2, r3, #65536
 24161 0564 7B68     		ldr	r3, [r7, #4]
 24162 0566 1A60     		str	r2, [r3, #0]
 24163              	.L36:
 503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24164              		.loc 1 504 0
 24165 0568 07F10C07 		add	r7, r7, #12
 24166 056c BD46     		mov	sp, r7
 24167 056e 80BC     		pop	{r7}
 24168 0570 7047     		bx	lr
 24169              		.cfi_endproc
 24170              	.LFE34:
 24172 0572 00BF     		.align	2
 24173              		.global	CAN_TTComModeCmd
 24174              		.thumb
 24175              		.thumb_func
 24177              	CAN_TTComModeCmd:
 24178              	.LFB35:
 505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         sent over the CAN bus.  
 511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         in data byte 7. 
 516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24179              		.loc 1 519 0
 24180              		.cfi_startproc
 24181              		@ args = 0, pretend = 0, frame = 8
 24182              		@ frame_needed = 1, uses_anonymous_args = 0
 24183              		@ link register save eliminated.
 24184 0574 80B4     		push	{r7}
 24185              	.LCFI18:
 24186              		.cfi_def_cfa_offset 4
 24187 0576 83B0     		sub	sp, sp, #12
 24188              	.LCFI19:
 24189              		.cfi_def_cfa_offset 16
 24190 0578 00AF     		add	r7, sp, #0
 24191              		.cfi_offset 7, -4
 24192              	.LCFI20:
 24193              		.cfi_def_cfa_register 7
 24194 057a 7860     		str	r0, [r7, #4]
 24195 057c 0B46     		mov	r3, r1
 24196 057e FB70     		strb	r3, [r7, #3]
 520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (NewState != DISABLE)
 24197              		.loc 1 523 0
 24198 0580 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24199 0582 002B     		cmp	r3, #0
 24200 0584 1ED0     		beq	.L40
 524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Enable the TTCM mode */
 526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 24201              		.loc 1 526 0
 24202 0586 7B68     		ldr	r3, [r7, #4]
 24203 0588 1B68     		ldr	r3, [r3, #0]
 24204 058a 43F08002 		orr	r2, r3, #128
 24205 058e 7B68     		ldr	r3, [r7, #4]
 24206 0590 1A60     		str	r2, [r3, #0]
 527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set TGT bits */
 529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 24207              		.loc 1 529 0
 24208 0592 7B68     		ldr	r3, [r7, #4]
 24209 0594 D3F88431 		ldr	r3, [r3, #388]
 24210 0598 43F48072 		orr	r2, r3, #256
 24211 059c 7B68     		ldr	r3, [r7, #4]
 24212 059e C3F88421 		str	r2, [r3, #388]
 530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 24213              		.loc 1 530 0
 24214 05a2 7B68     		ldr	r3, [r7, #4]
 24215 05a4 D3F89431 		ldr	r3, [r3, #404]
 24216 05a8 43F48072 		orr	r2, r3, #256
 24217 05ac 7B68     		ldr	r3, [r7, #4]
 24218 05ae C3F89421 		str	r2, [r3, #404]
 531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 24219              		.loc 1 531 0
 24220 05b2 7B68     		ldr	r3, [r7, #4]
 24221 05b4 D3F8A431 		ldr	r3, [r3, #420]
 24222 05b8 43F48072 		orr	r2, r3, #256
 24223 05bc 7B68     		ldr	r3, [r7, #4]
 24224 05be C3F8A421 		str	r2, [r3, #420]
 24225 05c2 1DE0     		b	.L39
 24226              	.L40:
 532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Disable the TTCM mode */
 536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 24227              		.loc 1 536 0
 24228 05c4 7B68     		ldr	r3, [r7, #4]
 24229 05c6 1B68     		ldr	r3, [r3, #0]
 24230 05c8 23F08002 		bic	r2, r3, #128
 24231 05cc 7B68     		ldr	r3, [r7, #4]
 24232 05ce 1A60     		str	r2, [r3, #0]
 537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Reset TGT bits */
 539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 24233              		.loc 1 539 0
 24234 05d0 7B68     		ldr	r3, [r7, #4]
 24235 05d2 D3F88431 		ldr	r3, [r3, #388]
 24236 05d6 23F48072 		bic	r2, r3, #256
 24237 05da 7B68     		ldr	r3, [r7, #4]
 24238 05dc C3F88421 		str	r2, [r3, #388]
 540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 24239              		.loc 1 540 0
 24240 05e0 7B68     		ldr	r3, [r7, #4]
 24241 05e2 D3F89431 		ldr	r3, [r3, #404]
 24242 05e6 23F48072 		bic	r2, r3, #256
 24243 05ea 7B68     		ldr	r3, [r7, #4]
 24244 05ec C3F89421 		str	r2, [r3, #404]
 541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 24245              		.loc 1 541 0
 24246 05f0 7B68     		ldr	r3, [r7, #4]
 24247 05f2 D3F8A431 		ldr	r3, [r3, #420]
 24248 05f6 23F48072 		bic	r2, r3, #256
 24249 05fa 7B68     		ldr	r3, [r7, #4]
 24250 05fc C3F8A421 		str	r2, [r3, #420]
 24251              	.L39:
 542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24252              		.loc 1 543 0
 24253 0600 07F10C07 		add	r7, r7, #12
 24254 0604 BD46     		mov	sp, r7
 24255 0606 80BC     		pop	{r7}
 24256 0608 7047     		bx	lr
 24257              		.cfi_endproc
 24258              	.LFE35:
 24260 060a 00BF     		.align	2
 24261              		.global	CAN_Transmit
 24262              		.thumb
 24263              		.thumb_func
 24265              	CAN_Transmit:
 24266              	.LFB36:
 544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
 546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
 552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim    
 553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
 554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       CAN Frames Transmission functions
 555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
 556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to 
 557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Check the transmission status of a CAN Frame
 559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    - Cancel a transmit request
 560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
 561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
 562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
 563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24267              		.loc 1 573 0
 24268              		.cfi_startproc
 24269              		@ args = 0, pretend = 0, frame = 16
 24270              		@ frame_needed = 1, uses_anonymous_args = 0
 24271              		@ link register save eliminated.
 24272 060c 80B4     		push	{r7}
 24273              	.LCFI21:
 24274              		.cfi_def_cfa_offset 4
 24275 060e 85B0     		sub	sp, sp, #20
 24276              	.LCFI22:
 24277              		.cfi_def_cfa_offset 24
 24278 0610 00AF     		add	r7, sp, #0
 24279              		.cfi_offset 7, -4
 24280              	.LCFI23:
 24281              		.cfi_def_cfa_register 7
 24282 0612 7860     		str	r0, [r7, #4]
 24283 0614 3960     		str	r1, [r7, #0]
 574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t transmit_mailbox = 0;
 24284              		.loc 1 574 0
 24285 0616 4FF00003 		mov	r3, #0
 24286 061a FB73     		strb	r3, [r7, #15]
 575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Select one empty transmit mailbox */
 582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 24287              		.loc 1 582 0
 24288 061c 7B68     		ldr	r3, [r7, #4]
 24289 061e 9B68     		ldr	r3, [r3, #8]
 24290 0620 03F08063 		and	r3, r3, #67108864
 24291 0624 002B     		cmp	r3, #0
 24292 0626 03D0     		beq	.L43
 583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     transmit_mailbox = 0;
 24293              		.loc 1 584 0
 24294 0628 4FF00003 		mov	r3, #0
 24295 062c FB73     		strb	r3, [r7, #15]
 24296 062e 16E0     		b	.L44
 24297              	.L43:
 585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 24298              		.loc 1 586 0
 24299 0630 7B68     		ldr	r3, [r7, #4]
 24300 0632 9B68     		ldr	r3, [r3, #8]
 24301 0634 03F00063 		and	r3, r3, #134217728
 24302 0638 002B     		cmp	r3, #0
 24303 063a 03D0     		beq	.L45
 587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     transmit_mailbox = 1;
 24304              		.loc 1 588 0
 24305 063c 4FF00103 		mov	r3, #1
 24306 0640 FB73     		strb	r3, [r7, #15]
 24307 0642 0CE0     		b	.L44
 24308              	.L45:
 589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 24309              		.loc 1 590 0
 24310 0644 7B68     		ldr	r3, [r7, #4]
 24311 0646 9B68     		ldr	r3, [r3, #8]
 24312 0648 03F08053 		and	r3, r3, #268435456
 24313 064c 002B     		cmp	r3, #0
 24314 064e 03D0     		beq	.L46
 591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     transmit_mailbox = 2;
 24315              		.loc 1 592 0
 24316 0650 4FF00203 		mov	r3, #2
 24317 0654 FB73     		strb	r3, [r7, #15]
 24318 0656 02E0     		b	.L44
 24319              	.L46:
 593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 24320              		.loc 1 596 0
 24321 0658 4FF00403 		mov	r3, #4
 24322 065c FB73     		strb	r3, [r7, #15]
 24323              	.L44:
 597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 24324              		.loc 1 599 0
 24325 065e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24326 0660 042B     		cmp	r3, #4
 24327 0662 00F0CE80 		beq	.L47
 600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set up the Id */
 602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 24328              		.loc 1 602 0
 24329 0666 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24330 0668 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24331 066a 7968     		ldr	r1, [r7, #4]
 24332 066c 02F11802 		add	r2, r2, #24
 24333 0670 4FEA0212 		lsl	r2, r2, #4
 24334 0674 0A44     		add	r2, r1, r2
 24335 0676 1268     		ldr	r2, [r2, #0]
 24336 0678 02F00102 		and	r2, r2, #1
 24337 067c 7968     		ldr	r1, [r7, #4]
 24338 067e 03F11803 		add	r3, r3, #24
 24339 0682 4FEA0313 		lsl	r3, r3, #4
 24340 0686 0B44     		add	r3, r1, r3
 24341 0688 1A60     		str	r2, [r3, #0]
 603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 24342              		.loc 1 603 0
 24343 068a 3B68     		ldr	r3, [r7, #0]
 24344 068c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 24345 068e 002B     		cmp	r3, #0
 24346 0690 1AD1     		bne	.L48
 604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 24347              		.loc 1 606 0
 24348 0692 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24349 0694 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24350 0696 7968     		ldr	r1, [r7, #4]
 24351 0698 02F11802 		add	r2, r2, #24
 24352 069c 4FEA0212 		lsl	r2, r2, #4
 24353 06a0 0A44     		add	r2, r1, r2
 24354 06a2 1168     		ldr	r1, [r2, #0]
 24355 06a4 3A68     		ldr	r2, [r7, #0]
 24356 06a6 1268     		ldr	r2, [r2, #0]
 24357 06a8 4FEA4250 		lsl	r0, r2, #21
 607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                                   TxMessage->RTR);
 24358              		.loc 1 607 0
 24359 06ac 3A68     		ldr	r2, [r7, #0]
 24360 06ae 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 24361              		.loc 1 606 0
 24362 06b0 40EA0202 		orr	r2, r0, r2
 24363 06b4 41EA0202 		orr	r2, r1, r2
 24364 06b8 7968     		ldr	r1, [r7, #4]
 24365 06ba 03F11803 		add	r3, r3, #24
 24366 06be 4FEA0313 		lsl	r3, r3, #4
 24367 06c2 0B44     		add	r3, r1, r3
 24368 06c4 1A60     		str	r2, [r3, #0]
 24369 06c6 1DE0     		b	.L49
 24370              	.L48:
 608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 24371              		.loc 1 612 0
 24372 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24373 06ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24374 06cc 7968     		ldr	r1, [r7, #4]
 24375 06ce 02F11802 		add	r2, r2, #24
 24376 06d2 4FEA0212 		lsl	r2, r2, #4
 24377 06d6 0A44     		add	r2, r1, r2
 24378 06d8 1168     		ldr	r1, [r2, #0]
 24379 06da 3A68     		ldr	r2, [r7, #0]
 24380 06dc 5268     		ldr	r2, [r2, #4]
 24381 06de 4FEAC200 		lsl	r0, r2, #3
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                                   TxMessage->IDE | \
 24382              		.loc 1 613 0
 24383 06e2 3A68     		ldr	r2, [r7, #0]
 24384 06e4 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 24385              		.loc 1 612 0
 24386 06e6 40EA0200 		orr	r0, r0, r2
 614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                                   TxMessage->RTR);
 24387              		.loc 1 614 0
 24388 06ea 3A68     		ldr	r2, [r7, #0]
 24389 06ec 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                                   TxMessage->IDE | \
 24390              		.loc 1 613 0
 24391 06ee 40EA0202 		orr	r2, r0, r2
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 24392              		.loc 1 612 0
 24393 06f2 41EA0202 		orr	r2, r1, r2
 24394 06f6 7968     		ldr	r1, [r7, #4]
 24395 06f8 03F11803 		add	r3, r3, #24
 24396 06fc 4FEA0313 		lsl	r3, r3, #4
 24397 0700 0B44     		add	r3, r1, r3
 24398 0702 1A60     		str	r2, [r3, #0]
 24399              	.L49:
 615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     
 617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set up the DLC */
 618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 24400              		.loc 1 618 0
 24401 0704 3B68     		ldr	r3, [r7, #0]
 24402 0706 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 24403 0708 03F00F03 		and	r3, r3, #15
 24404 070c DAB2     		uxtb	r2, r3
 24405 070e 3B68     		ldr	r3, [r7, #0]
 24406 0710 9A72     		strb	r2, [r3, #10]
 619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 24407              		.loc 1 619 0
 24408 0712 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24409 0714 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24410 0716 7968     		ldr	r1, [r7, #4]
 24411 0718 02F11802 		add	r2, r2, #24
 24412 071c 4FEA0212 		lsl	r2, r2, #4
 24413 0720 0A44     		add	r2, r1, r2
 24414 0722 02F10402 		add	r2, r2, #4
 24415 0726 1268     		ldr	r2, [r2, #0]
 24416 0728 22F00F02 		bic	r2, r2, #15
 24417 072c 7968     		ldr	r1, [r7, #4]
 24418 072e 03F11803 		add	r3, r3, #24
 24419 0732 4FEA0313 		lsl	r3, r3, #4
 24420 0736 0B44     		add	r3, r1, r3
 24421 0738 03F10403 		add	r3, r3, #4
 24422 073c 1A60     		str	r2, [r3, #0]
 620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 24423              		.loc 1 620 0
 24424 073e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24425 0740 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24426 0742 7968     		ldr	r1, [r7, #4]
 24427 0744 02F11802 		add	r2, r2, #24
 24428 0748 4FEA0212 		lsl	r2, r2, #4
 24429 074c 0A44     		add	r2, r1, r2
 24430 074e 02F10402 		add	r2, r2, #4
 24431 0752 1168     		ldr	r1, [r2, #0]
 24432 0754 3A68     		ldr	r2, [r7, #0]
 24433 0756 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 24434 0758 41EA0202 		orr	r2, r1, r2
 24435 075c 7968     		ldr	r1, [r7, #4]
 24436 075e 03F11803 		add	r3, r3, #24
 24437 0762 4FEA0313 		lsl	r3, r3, #4
 24438 0766 0B44     		add	r3, r1, r3
 24439 0768 03F10403 		add	r3, r3, #4
 24440 076c 1A60     		str	r2, [r3, #0]
 621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Set up the data field */
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 24441              		.loc 1 623 0
 24442 076e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24443 0770 3A68     		ldr	r2, [r7, #0]
 24444 0772 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 24445 0774 4FEA0261 		lsl	r1, r2, #24
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 24446              		.loc 1 624 0
 24447 0778 3A68     		ldr	r2, [r7, #0]
 24448 077a 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 24449 077c 4FEA0242 		lsl	r2, r2, #16
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 24450              		.loc 1 623 0
 24451 0780 41EA0201 		orr	r1, r1, r2
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 24452              		.loc 1 625 0
 24453 0784 3A68     		ldr	r2, [r7, #0]
 24454 0786 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 24455 0788 4FEA0222 		lsl	r2, r2, #8
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 24456              		.loc 1 624 0
 24457 078c 41EA0201 		orr	r1, r1, r2
 626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 24458              		.loc 1 626 0
 24459 0790 3A68     		ldr	r2, [r7, #0]
 24460 0792 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 24461              		.loc 1 625 0
 24462 0794 41EA0202 		orr	r2, r1, r2
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 24463              		.loc 1 623 0
 24464 0798 7968     		ldr	r1, [r7, #4]
 24465 079a 4FEA0313 		lsl	r3, r3, #4
 24466 079e 0B44     		add	r3, r1, r3
 24467 07a0 03F5C473 		add	r3, r3, #392
 24468 07a4 1A60     		str	r2, [r3, #0]
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 24469              		.loc 1 627 0
 24470 07a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24471 07a8 3A68     		ldr	r2, [r7, #0]
 24472 07aa 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 24473 07ac 4FEA0261 		lsl	r1, r2, #24
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 24474              		.loc 1 628 0
 24475 07b0 3A68     		ldr	r2, [r7, #0]
 24476 07b2 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 24477 07b4 4FEA0242 		lsl	r2, r2, #16
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 24478              		.loc 1 627 0
 24479 07b8 41EA0201 		orr	r1, r1, r2
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 24480              		.loc 1 629 0
 24481 07bc 3A68     		ldr	r2, [r7, #0]
 24482 07be 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 24483 07c0 4FEA0222 		lsl	r2, r2, #8
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 24484              		.loc 1 628 0
 24485 07c4 41EA0201 		orr	r1, r1, r2
 630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 24486              		.loc 1 630 0
 24487 07c8 3A68     		ldr	r2, [r7, #0]
 24488 07ca D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 24489              		.loc 1 629 0
 24490 07cc 41EA0202 		orr	r2, r1, r2
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 24491              		.loc 1 627 0
 24492 07d0 7968     		ldr	r1, [r7, #4]
 24493 07d2 4FEA0313 		lsl	r3, r3, #4
 24494 07d6 0B44     		add	r3, r1, r3
 24495 07d8 03F5C673 		add	r3, r3, #396
 24496 07dc 1A60     		str	r2, [r3, #0]
 631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Request transmission */
 632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 24497              		.loc 1 632 0
 24498 07de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24499 07e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24500 07e2 7968     		ldr	r1, [r7, #4]
 24501 07e4 02F11802 		add	r2, r2, #24
 24502 07e8 4FEA0212 		lsl	r2, r2, #4
 24503 07ec 0A44     		add	r2, r1, r2
 24504 07ee 1268     		ldr	r2, [r2, #0]
 24505 07f0 42F00102 		orr	r2, r2, #1
 24506 07f4 7968     		ldr	r1, [r7, #4]
 24507 07f6 03F11803 		add	r3, r3, #24
 24508 07fa 4FEA0313 		lsl	r3, r3, #4
 24509 07fe 0B44     		add	r3, r1, r3
 24510 0800 1A60     		str	r2, [r3, #0]
 24511              	.L47:
 633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return transmit_mailbox;
 24512              		.loc 1 634 0
 24513 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24514              		.loc 1 635 0
 24515 0804 1846     		mov	r0, r3
 24516 0806 07F11407 		add	r7, r7, #20
 24517 080a BD46     		mov	sp, r7
 24518 080c 80BC     		pop	{r7}
 24519 080e 7047     		bx	lr
 24520              		.cfi_endproc
 24521              	.LFE36:
 24523              		.align	2
 24524              		.global	CAN_TransmitStatus
 24525              		.thumb
 24526              		.thumb_func
 24528              	CAN_TransmitStatus:
 24529              	.LFB37:
 636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24530              		.loc 1 645 0
 24531              		.cfi_startproc
 24532              		@ args = 0, pretend = 0, frame = 16
 24533              		@ frame_needed = 1, uses_anonymous_args = 0
 24534              		@ link register save eliminated.
 24535 0810 80B4     		push	{r7}
 24536              	.LCFI24:
 24537              		.cfi_def_cfa_offset 4
 24538 0812 85B0     		sub	sp, sp, #20
 24539              	.LCFI25:
 24540              		.cfi_def_cfa_offset 24
 24541 0814 00AF     		add	r7, sp, #0
 24542              		.cfi_offset 7, -4
 24543              	.LCFI26:
 24544              		.cfi_def_cfa_register 7
 24545 0816 7860     		str	r0, [r7, #4]
 24546 0818 0B46     		mov	r3, r1
 24547 081a FB70     		strb	r3, [r7, #3]
 646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t state = 0;
 24548              		.loc 1 646 0
 24549 081c 4FF00003 		mov	r3, #0
 24550 0820 FB60     		str	r3, [r7, #12]
 647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  
 652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (TransmitMailbox)
 24551              		.loc 1 652 0
 24552 0822 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24553 0824 012B     		cmp	r3, #1
 24554 0826 0DD0     		beq	.L53
 24555 0828 022B     		cmp	r3, #2
 24556 082a 15D0     		beq	.L54
 24557 082c 002B     		cmp	r3, #0
 24558 082e 1DD1     		bne	.L66
 24559              	.L52:
 653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 24560              		.loc 1 655 0
 24561 0830 7B68     		ldr	r3, [r7, #4]
 24562 0832 9A68     		ldr	r2, [r3, #8]
 24563 0834 4FF00303 		mov	r3, #3
 24564 0838 C0F20043 		movt	r3, 1024
 24565 083c 02EA0303 		and	r3, r2, r3
 24566 0840 FB60     		str	r3, [r7, #12]
 656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24567              		.loc 1 656 0
 24568 0842 17E0     		b	.L55
 24569              	.L53:
 657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 24570              		.loc 1 658 0
 24571 0844 7B68     		ldr	r3, [r7, #4]
 24572 0846 9A68     		ldr	r2, [r3, #8]
 24573 0848 4FF44073 		mov	r3, #768
 24574 084c C0F60003 		movt	r3, 2048
 24575 0850 02EA0303 		and	r3, r2, r3
 24576 0854 FB60     		str	r3, [r7, #12]
 659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24577              		.loc 1 659 0
 24578 0856 0DE0     		b	.L55
 24579              	.L54:
 660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 24580              		.loc 1 661 0
 24581 0858 7B68     		ldr	r3, [r7, #4]
 24582 085a 9A68     		ldr	r2, [r3, #8]
 24583 085c 4FF00003 		mov	r3, #0
 24584 0860 C1F20303 		movt	r3, 4099
 24585 0864 02EA0303 		and	r3, r2, r3
 24586 0868 FB60     		str	r3, [r7, #12]
 662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24587              		.loc 1 662 0
 24588 086a 03E0     		b	.L55
 24589              	.L66:
 663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     default:
 664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       state = CAN_TxStatus_Failed;
 24590              		.loc 1 664 0
 24591 086c 4FF00003 		mov	r3, #0
 24592 0870 FB60     		str	r3, [r7, #12]
 665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24593              		.loc 1 665 0
 24594 0872 00BF     		nop
 24595              	.L55:
 666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (state)
 24596              		.loc 1 667 0
 24597 0874 FB68     		ldr	r3, [r7, #12]
 24598 0876 4FF48072 		mov	r2, #256
 24599 087a C0F60002 		movt	r2, 2048
 24600 087e 9342     		cmp	r3, r2
 24601 0880 2FD0     		beq	.L60
 24602 0882 4FF48072 		mov	r2, #256
 24603 0886 C0F60002 		movt	r2, 2048
 24604 088a 9342     		cmp	r3, r2
 24605 088c 0ED8     		bhi	.L64
 24606 088e 4FF00102 		mov	r2, #1
 24607 0892 C0F20042 		movt	r2, 1024
 24608 0896 9342     		cmp	r3, r2
 24609 0898 1FD0     		beq	.L58
 24610 089a 4FF00302 		mov	r2, #3
 24611 089e C0F20042 		movt	r2, 1024
 24612 08a2 9342     		cmp	r3, r2
 24613 08a4 25D0     		beq	.L59
 24614 08a6 002B     		cmp	r3, #0
 24615 08a8 13D0     		beq	.L57
 24616 08aa 2EE0     		b	.L56
 24617              	.L64:
 24618 08ac 4FF00002 		mov	r2, #0
 24619 08b0 C1F20102 		movt	r2, 4097
 24620 08b4 9342     		cmp	r3, r2
 24621 08b6 18D0     		beq	.L62
 24622 08b8 4FF00002 		mov	r2, #0
 24623 08bc C1F20302 		movt	r2, 4099
 24624 08c0 9342     		cmp	r3, r2
 24625 08c2 1ED0     		beq	.L63
 24626 08c4 4FF44072 		mov	r2, #768
 24627 08c8 C0F60002 		movt	r2, 2048
 24628 08cc 9342     		cmp	r3, r2
 24629 08ce 14D0     		beq	.L61
 24630 08d0 1BE0     		b	.L56
 24631              	.L57:
 668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* transmit pending  */
 670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 24632              		.loc 1 670 0
 24633 08d2 4FF00203 		mov	r3, #2
 24634 08d6 FB60     		str	r3, [r7, #12]
 671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24635              		.loc 1 671 0
 24636 08d8 1BE0     		b	.L65
 24637              	.L58:
 672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* transmit failed  */
 673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 24638              		.loc 1 673 0
 24639 08da 4FF00003 		mov	r3, #0
 24640 08de FB60     		str	r3, [r7, #12]
 674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24641              		.loc 1 674 0
 24642 08e0 17E0     		b	.L65
 24643              	.L60:
 675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 24644              		.loc 1 675 0
 24645 08e2 4FF00003 		mov	r3, #0
 24646 08e6 FB60     		str	r3, [r7, #12]
 676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24647              		.loc 1 676 0
 24648 08e8 13E0     		b	.L65
 24649              	.L62:
 677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 24650              		.loc 1 677 0
 24651 08ea 4FF00003 		mov	r3, #0
 24652 08ee FB60     		str	r3, [r7, #12]
 678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24653              		.loc 1 678 0
 24654 08f0 0FE0     		b	.L65
 24655              	.L59:
 679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* transmit succeeded  */
 680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 24656              		.loc 1 680 0
 24657 08f2 4FF00103 		mov	r3, #1
 24658 08f6 FB60     		str	r3, [r7, #12]
 681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24659              		.loc 1 681 0
 24660 08f8 0BE0     		b	.L65
 24661              	.L61:
 682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 24662              		.loc 1 682 0
 24663 08fa 4FF00103 		mov	r3, #1
 24664 08fe FB60     		str	r3, [r7, #12]
 683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24665              		.loc 1 683 0
 24666 0900 07E0     		b	.L65
 24667              	.L63:
 684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 24668              		.loc 1 684 0
 24669 0902 4FF00103 		mov	r3, #1
 24670 0906 FB60     		str	r3, [r7, #12]
 685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24671              		.loc 1 685 0
 24672 0908 03E0     		b	.L65
 24673              	.L56:
 686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     default: state = CAN_TxStatus_Failed;
 24674              		.loc 1 686 0
 24675 090a 4FF00003 		mov	r3, #0
 24676 090e FB60     		str	r3, [r7, #12]
 687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24677              		.loc 1 687 0
 24678 0910 00BF     		nop
 24679              	.L65:
 688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return (uint8_t) state;
 24680              		.loc 1 689 0
 24681 0912 FB68     		ldr	r3, [r7, #12]
 24682 0914 DBB2     		uxtb	r3, r3
 690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24683              		.loc 1 690 0
 24684 0916 1846     		mov	r0, r3
 24685 0918 07F11407 		add	r7, r7, #20
 24686 091c BD46     		mov	sp, r7
 24687 091e 80BC     		pop	{r7}
 24688 0920 7047     		bx	lr
 24689              		.cfi_endproc
 24690              	.LFE37:
 24692 0922 00BF     		.align	2
 24693              		.global	CAN_CancelTransmit
 24694              		.thumb
 24695              		.thumb_func
 24697              	CAN_CancelTransmit:
 24698              	.LFB38:
 691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Cancels a transmit request.
 694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24699              		.loc 1 699 0
 24700              		.cfi_startproc
 24701              		@ args = 0, pretend = 0, frame = 8
 24702              		@ frame_needed = 1, uses_anonymous_args = 0
 24703              		@ link register save eliminated.
 24704 0924 80B4     		push	{r7}
 24705              	.LCFI27:
 24706              		.cfi_def_cfa_offset 4
 24707 0926 83B0     		sub	sp, sp, #12
 24708              	.LCFI28:
 24709              		.cfi_def_cfa_offset 16
 24710 0928 00AF     		add	r7, sp, #0
 24711              		.cfi_offset 7, -4
 24712              	.LCFI29:
 24713              		.cfi_def_cfa_register 7
 24714 092a 7860     		str	r0, [r7, #4]
 24715 092c 0B46     		mov	r3, r1
 24716 092e FB70     		strb	r3, [r7, #3]
 700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* abort transmission */
 704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (Mailbox)
 24717              		.loc 1 704 0
 24718 0930 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24719 0932 012B     		cmp	r3, #1
 24720 0934 0AD0     		beq	.L70
 24721 0936 022B     		cmp	r3, #2
 24722 0938 0FD0     		beq	.L71
 24723 093a 002B     		cmp	r3, #0
 24724 093c 15D1     		bne	.L73
 24725              	.L69:
 705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 24726              		.loc 1 706 0
 24727 093e 7B68     		ldr	r3, [r7, #4]
 24728 0940 9B68     		ldr	r3, [r3, #8]
 24729 0942 43F08002 		orr	r2, r3, #128
 24730 0946 7B68     		ldr	r3, [r7, #4]
 24731 0948 9A60     		str	r2, [r3, #8]
 707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24732              		.loc 1 707 0
 24733 094a 0FE0     		b	.L67
 24734              	.L70:
 708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 24735              		.loc 1 708 0
 24736 094c 7B68     		ldr	r3, [r7, #4]
 24737 094e 9B68     		ldr	r3, [r3, #8]
 24738 0950 43F40042 		orr	r2, r3, #32768
 24739 0954 7B68     		ldr	r3, [r7, #4]
 24740 0956 9A60     		str	r2, [r3, #8]
 709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24741              		.loc 1 709 0
 24742 0958 08E0     		b	.L67
 24743              	.L71:
 710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 24744              		.loc 1 710 0
 24745 095a 7B68     		ldr	r3, [r7, #4]
 24746 095c 9B68     		ldr	r3, [r3, #8]
 24747 095e 43F40002 		orr	r2, r3, #8388608
 24748 0962 7B68     		ldr	r3, [r7, #4]
 24749 0964 9A60     		str	r2, [r3, #8]
 711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24750              		.loc 1 711 0
 24751 0966 00BF     		nop
 24752 0968 00E0     		b	.L67
 24753              	.L73:
 712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     default:
 713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 24754              		.loc 1 713 0
 24755 096a 00BF     		nop
 24756              	.L67:
 714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24757              		.loc 1 715 0
 24758 096c 07F10C07 		add	r7, r7, #12
 24759 0970 BD46     		mov	sp, r7
 24760 0972 80BC     		pop	{r7}
 24761 0974 7047     		bx	lr
 24762              		.cfi_endproc
 24763              	.LFE38:
 24765 0976 00BF     		.align	2
 24766              		.global	CAN_Receive
 24767              		.thumb
 24768              		.thumb_func
 24770              	CAN_Receive:
 24771              	.LFB39:
 716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
 718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
 724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim    
 725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
 726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       CAN Frames Reception functions
 727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
 728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to 
 729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Receive a correct CAN frame
 730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Return the number of the pending received CAN frames
 732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
 733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
 734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
 735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24772              		.loc 1 746 0
 24773              		.cfi_startproc
 24774              		@ args = 0, pretend = 0, frame = 16
 24775              		@ frame_needed = 1, uses_anonymous_args = 0
 24776              		@ link register save eliminated.
 24777 0978 80B4     		push	{r7}
 24778              	.LCFI30:
 24779              		.cfi_def_cfa_offset 4
 24780 097a 85B0     		sub	sp, sp, #20
 24781              	.LCFI31:
 24782              		.cfi_def_cfa_offset 24
 24783 097c 00AF     		add	r7, sp, #0
 24784              		.cfi_offset 7, -4
 24785              	.LCFI32:
 24786              		.cfi_def_cfa_register 7
 24787 097e F860     		str	r0, [r7, #12]
 24788 0980 0B46     		mov	r3, r1
 24789 0982 7A60     		str	r2, [r7, #4]
 24790 0984 FB72     		strb	r3, [r7, #11]
 747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the Id */
 751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 24791              		.loc 1 751 0
 24792 0986 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24793 0988 FA68     		ldr	r2, [r7, #12]
 24794 098a 03F11B03 		add	r3, r3, #27
 24795 098e 4FEA0313 		lsl	r3, r3, #4
 24796 0992 1344     		add	r3, r2, r3
 24797 0994 1B68     		ldr	r3, [r3, #0]
 24798 0996 DBB2     		uxtb	r3, r3
 24799 0998 03F00403 		and	r3, r3, #4
 24800 099c DAB2     		uxtb	r2, r3
 24801 099e 7B68     		ldr	r3, [r7, #4]
 24802 09a0 1A72     		strb	r2, [r3, #8]
 752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 24803              		.loc 1 752 0
 24804 09a2 7B68     		ldr	r3, [r7, #4]
 24805 09a4 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 24806 09a6 002B     		cmp	r3, #0
 24807 09a8 0CD1     		bne	.L75
 753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 24808              		.loc 1 754 0
 24809 09aa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24810 09ac FA68     		ldr	r2, [r7, #12]
 24811 09ae 03F11B03 		add	r3, r3, #27
 24812 09b2 4FEA0313 		lsl	r3, r3, #4
 24813 09b6 1344     		add	r3, r2, r3
 24814 09b8 1B68     		ldr	r3, [r3, #0]
 24815 09ba 4FEA5352 		lsr	r2, r3, #21
 24816 09be 7B68     		ldr	r3, [r7, #4]
 24817 09c0 1A60     		str	r2, [r3, #0]
 24818 09c2 0BE0     		b	.L76
 24819              	.L75:
 755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 24820              		.loc 1 758 0
 24821 09c4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24822 09c6 FA68     		ldr	r2, [r7, #12]
 24823 09c8 03F11B03 		add	r3, r3, #27
 24824 09cc 4FEA0313 		lsl	r3, r3, #4
 24825 09d0 1344     		add	r3, r2, r3
 24826 09d2 1B68     		ldr	r3, [r3, #0]
 24827 09d4 4FEAD302 		lsr	r2, r3, #3
 24828 09d8 7B68     		ldr	r3, [r7, #4]
 24829 09da 5A60     		str	r2, [r3, #4]
 24830              	.L76:
 759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 24831              		.loc 1 761 0
 24832 09dc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24833 09de FA68     		ldr	r2, [r7, #12]
 24834 09e0 03F11B03 		add	r3, r3, #27
 24835 09e4 4FEA0313 		lsl	r3, r3, #4
 24836 09e8 1344     		add	r3, r2, r3
 24837 09ea 1B68     		ldr	r3, [r3, #0]
 24838 09ec DBB2     		uxtb	r3, r3
 24839 09ee 03F00203 		and	r3, r3, #2
 24840 09f2 DAB2     		uxtb	r2, r3
 24841 09f4 7B68     		ldr	r3, [r7, #4]
 24842 09f6 5A72     		strb	r2, [r3, #9]
 762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the DLC */
 763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 24843              		.loc 1 763 0
 24844 09f8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24845 09fa FA68     		ldr	r2, [r7, #12]
 24846 09fc 03F11B03 		add	r3, r3, #27
 24847 0a00 4FEA0313 		lsl	r3, r3, #4
 24848 0a04 1344     		add	r3, r2, r3
 24849 0a06 03F10403 		add	r3, r3, #4
 24850 0a0a 1B68     		ldr	r3, [r3, #0]
 24851 0a0c DBB2     		uxtb	r3, r3
 24852 0a0e 03F00F03 		and	r3, r3, #15
 24853 0a12 DAB2     		uxtb	r2, r3
 24854 0a14 7B68     		ldr	r3, [r7, #4]
 24855 0a16 9A72     		strb	r2, [r3, #10]
 764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the FMI */
 765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 24856              		.loc 1 765 0
 24857 0a18 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24858 0a1a FA68     		ldr	r2, [r7, #12]
 24859 0a1c 03F11B03 		add	r3, r3, #27
 24860 0a20 4FEA0313 		lsl	r3, r3, #4
 24861 0a24 1344     		add	r3, r2, r3
 24862 0a26 03F10403 		add	r3, r3, #4
 24863 0a2a 1B68     		ldr	r3, [r3, #0]
 24864 0a2c 4FEA1323 		lsr	r3, r3, #8
 24865 0a30 DAB2     		uxtb	r2, r3
 24866 0a32 7B68     		ldr	r3, [r7, #4]
 24867 0a34 DA74     		strb	r2, [r3, #19]
 766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the data field */
 767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 24868              		.loc 1 767 0
 24869 0a36 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24870 0a38 FA68     		ldr	r2, [r7, #12]
 24871 0a3a 4FEA0313 		lsl	r3, r3, #4
 24872 0a3e 1344     		add	r3, r2, r3
 24873 0a40 03F5DC73 		add	r3, r3, #440
 24874 0a44 1B68     		ldr	r3, [r3, #0]
 24875 0a46 DAB2     		uxtb	r2, r3
 24876 0a48 7B68     		ldr	r3, [r7, #4]
 24877 0a4a DA72     		strb	r2, [r3, #11]
 768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 24878              		.loc 1 768 0
 24879 0a4c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24880 0a4e FA68     		ldr	r2, [r7, #12]
 24881 0a50 4FEA0313 		lsl	r3, r3, #4
 24882 0a54 1344     		add	r3, r2, r3
 24883 0a56 03F5DC73 		add	r3, r3, #440
 24884 0a5a 1B68     		ldr	r3, [r3, #0]
 24885 0a5c 4FEA1323 		lsr	r3, r3, #8
 24886 0a60 DAB2     		uxtb	r2, r3
 24887 0a62 7B68     		ldr	r3, [r7, #4]
 24888 0a64 1A73     		strb	r2, [r3, #12]
 769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 24889              		.loc 1 769 0
 24890 0a66 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24891 0a68 FA68     		ldr	r2, [r7, #12]
 24892 0a6a 4FEA0313 		lsl	r3, r3, #4
 24893 0a6e 1344     		add	r3, r2, r3
 24894 0a70 03F5DC73 		add	r3, r3, #440
 24895 0a74 1B68     		ldr	r3, [r3, #0]
 24896 0a76 4FEA1343 		lsr	r3, r3, #16
 24897 0a7a DAB2     		uxtb	r2, r3
 24898 0a7c 7B68     		ldr	r3, [r7, #4]
 24899 0a7e 5A73     		strb	r2, [r3, #13]
 770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 24900              		.loc 1 770 0
 24901 0a80 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24902 0a82 FA68     		ldr	r2, [r7, #12]
 24903 0a84 4FEA0313 		lsl	r3, r3, #4
 24904 0a88 1344     		add	r3, r2, r3
 24905 0a8a 03F5DC73 		add	r3, r3, #440
 24906 0a8e 1B68     		ldr	r3, [r3, #0]
 24907 0a90 4FEA1363 		lsr	r3, r3, #24
 24908 0a94 DAB2     		uxtb	r2, r3
 24909 0a96 7B68     		ldr	r3, [r7, #4]
 24910 0a98 9A73     		strb	r2, [r3, #14]
 771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 24911              		.loc 1 771 0
 24912 0a9a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24913 0a9c FA68     		ldr	r2, [r7, #12]
 24914 0a9e 4FEA0313 		lsl	r3, r3, #4
 24915 0aa2 1344     		add	r3, r2, r3
 24916 0aa4 03F5DE73 		add	r3, r3, #444
 24917 0aa8 1B68     		ldr	r3, [r3, #0]
 24918 0aaa DAB2     		uxtb	r2, r3
 24919 0aac 7B68     		ldr	r3, [r7, #4]
 24920 0aae DA73     		strb	r2, [r3, #15]
 772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 24921              		.loc 1 772 0
 24922 0ab0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24923 0ab2 FA68     		ldr	r2, [r7, #12]
 24924 0ab4 4FEA0313 		lsl	r3, r3, #4
 24925 0ab8 1344     		add	r3, r2, r3
 24926 0aba 03F5DE73 		add	r3, r3, #444
 24927 0abe 1B68     		ldr	r3, [r3, #0]
 24928 0ac0 4FEA1323 		lsr	r3, r3, #8
 24929 0ac4 DAB2     		uxtb	r2, r3
 24930 0ac6 7B68     		ldr	r3, [r7, #4]
 24931 0ac8 1A74     		strb	r2, [r3, #16]
 773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 24932              		.loc 1 773 0
 24933 0aca FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24934 0acc FA68     		ldr	r2, [r7, #12]
 24935 0ace 4FEA0313 		lsl	r3, r3, #4
 24936 0ad2 1344     		add	r3, r2, r3
 24937 0ad4 03F5DE73 		add	r3, r3, #444
 24938 0ad8 1B68     		ldr	r3, [r3, #0]
 24939 0ada 4FEA1343 		lsr	r3, r3, #16
 24940 0ade DAB2     		uxtb	r2, r3
 24941 0ae0 7B68     		ldr	r3, [r7, #4]
 24942 0ae2 5A74     		strb	r2, [r3, #17]
 774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 24943              		.loc 1 774 0
 24944 0ae4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24945 0ae6 FA68     		ldr	r2, [r7, #12]
 24946 0ae8 4FEA0313 		lsl	r3, r3, #4
 24947 0aec 1344     		add	r3, r2, r3
 24948 0aee 03F5DE73 		add	r3, r3, #444
 24949 0af2 1B68     		ldr	r3, [r3, #0]
 24950 0af4 4FEA1363 		lsr	r3, r3, #24
 24951 0af8 DAB2     		uxtb	r2, r3
 24952 0afa 7B68     		ldr	r3, [r7, #4]
 24953 0afc 9A74     		strb	r2, [r3, #18]
 775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Release the FIFO */
 776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Release FIFO0 */
 777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 24954              		.loc 1 777 0
 24955 0afe FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 24956 0b00 002B     		cmp	r3, #0
 24957 0b02 06D1     		bne	.L77
 778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 24958              		.loc 1 779 0
 24959 0b04 FB68     		ldr	r3, [r7, #12]
 24960 0b06 DB68     		ldr	r3, [r3, #12]
 24961 0b08 43F02002 		orr	r2, r3, #32
 24962 0b0c FB68     		ldr	r3, [r7, #12]
 24963 0b0e DA60     		str	r2, [r3, #12]
 24964 0b10 05E0     		b	.L74
 24965              	.L77:
 780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Release FIFO1 */
 782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 24966              		.loc 1 784 0
 24967 0b12 FB68     		ldr	r3, [r7, #12]
 24968 0b14 1B69     		ldr	r3, [r3, #16]
 24969 0b16 43F02002 		orr	r2, r3, #32
 24970 0b1a FB68     		ldr	r3, [r7, #12]
 24971 0b1c 1A61     		str	r2, [r3, #16]
 24972              	.L74:
 785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 24973              		.loc 1 786 0
 24974 0b1e 07F11407 		add	r7, r7, #20
 24975 0b22 BD46     		mov	sp, r7
 24976 0b24 80BC     		pop	{r7}
 24977 0b26 7047     		bx	lr
 24978              		.cfi_endproc
 24979              	.LFE39:
 24981              		.align	2
 24982              		.global	CAN_FIFORelease
 24983              		.thumb
 24984              		.thumb_func
 24986              	CAN_FIFORelease:
 24987              	.LFB40:
 787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
 793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 24988              		.loc 1 795 0
 24989              		.cfi_startproc
 24990              		@ args = 0, pretend = 0, frame = 8
 24991              		@ frame_needed = 1, uses_anonymous_args = 0
 24992              		@ link register save eliminated.
 24993 0b28 80B4     		push	{r7}
 24994              	.LCFI33:
 24995              		.cfi_def_cfa_offset 4
 24996 0b2a 83B0     		sub	sp, sp, #12
 24997              	.LCFI34:
 24998              		.cfi_def_cfa_offset 16
 24999 0b2c 00AF     		add	r7, sp, #0
 25000              		.cfi_offset 7, -4
 25001              	.LCFI35:
 25002              		.cfi_def_cfa_register 7
 25003 0b2e 7860     		str	r0, [r7, #4]
 25004 0b30 0B46     		mov	r3, r1
 25005 0b32 FB70     		strb	r3, [r7, #3]
 796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Release FIFO0 */
 800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 25006              		.loc 1 800 0
 25007 0b34 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25008 0b36 002B     		cmp	r3, #0
 25009 0b38 06D1     		bne	.L80
 801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 25010              		.loc 1 802 0
 25011 0b3a 7B68     		ldr	r3, [r7, #4]
 25012 0b3c DB68     		ldr	r3, [r3, #12]
 25013 0b3e 43F02002 		orr	r2, r3, #32
 25014 0b42 7B68     		ldr	r3, [r7, #4]
 25015 0b44 DA60     		str	r2, [r3, #12]
 25016 0b46 05E0     		b	.L79
 25017              	.L80:
 803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Release FIFO1 */
 805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 25018              		.loc 1 807 0
 25019 0b48 7B68     		ldr	r3, [r7, #4]
 25020 0b4a 1B69     		ldr	r3, [r3, #16]
 25021 0b4c 43F02002 		orr	r2, r3, #32
 25022 0b50 7B68     		ldr	r3, [r7, #4]
 25023 0b52 1A61     		str	r2, [r3, #16]
 25024              	.L79:
 808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25025              		.loc 1 809 0
 25026 0b54 07F10C07 		add	r7, r7, #12
 25027 0b58 BD46     		mov	sp, r7
 25028 0b5a 80BC     		pop	{r7}
 25029 0b5c 7047     		bx	lr
 25030              		.cfi_endproc
 25031              	.LFE40:
 25033 0b5e 00BF     		.align	2
 25034              		.global	CAN_MessagePending
 25035              		.thumb
 25036              		.thumb_func
 25038              	CAN_MessagePending:
 25039              	.LFB41:
 810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25040              		.loc 1 818 0
 25041              		.cfi_startproc
 25042              		@ args = 0, pretend = 0, frame = 16
 25043              		@ frame_needed = 1, uses_anonymous_args = 0
 25044              		@ link register save eliminated.
 25045 0b60 80B4     		push	{r7}
 25046              	.LCFI36:
 25047              		.cfi_def_cfa_offset 4
 25048 0b62 85B0     		sub	sp, sp, #20
 25049              	.LCFI37:
 25050              		.cfi_def_cfa_offset 24
 25051 0b64 00AF     		add	r7, sp, #0
 25052              		.cfi_offset 7, -4
 25053              	.LCFI38:
 25054              		.cfi_def_cfa_register 7
 25055 0b66 7860     		str	r0, [r7, #4]
 25056 0b68 0B46     		mov	r3, r1
 25057 0b6a FB70     		strb	r3, [r7, #3]
 819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t message_pending=0;
 25058              		.loc 1 819 0
 25059 0b6c 4FF00003 		mov	r3, #0
 25060 0b70 FB73     		strb	r3, [r7, #15]
 820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 25061              		.loc 1 823 0
 25062 0b72 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25063 0b74 002B     		cmp	r3, #0
 25064 0b76 06D1     		bne	.L83
 824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 25065              		.loc 1 825 0
 25066 0b78 7B68     		ldr	r3, [r7, #4]
 25067 0b7a DB68     		ldr	r3, [r3, #12]
 25068 0b7c DBB2     		uxtb	r3, r3
 25069 0b7e 03F00303 		and	r3, r3, #3
 25070 0b82 FB73     		strb	r3, [r7, #15]
 25071 0b84 0CE0     		b	.L84
 25072              	.L83:
 826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 25073              		.loc 1 827 0
 25074 0b86 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25075 0b88 012B     		cmp	r3, #1
 25076 0b8a 06D1     		bne	.L85
 828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 25077              		.loc 1 829 0
 25078 0b8c 7B68     		ldr	r3, [r7, #4]
 25079 0b8e 1B69     		ldr	r3, [r3, #16]
 25080 0b90 DBB2     		uxtb	r3, r3
 25081 0b92 03F00303 		and	r3, r3, #3
 25082 0b96 FB73     		strb	r3, [r7, #15]
 25083 0b98 02E0     		b	.L84
 25084              	.L85:
 830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     message_pending = 0;
 25085              		.loc 1 833 0
 25086 0b9a 4FF00003 		mov	r3, #0
 25087 0b9e FB73     		strb	r3, [r7, #15]
 25088              	.L84:
 834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return message_pending;
 25089              		.loc 1 835 0
 25090 0ba0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25091              		.loc 1 836 0
 25092 0ba2 1846     		mov	r0, r3
 25093 0ba4 07F11407 		add	r7, r7, #20
 25094 0ba8 BD46     		mov	sp, r7
 25095 0baa 80BC     		pop	{r7}
 25096 0bac 7047     		bx	lr
 25097              		.cfi_endproc
 25098              	.LFE41:
 25100 0bae 00BF     		.align	2
 25101              		.global	CAN_OperatingModeRequest
 25102              		.thumb
 25103              		.thumb_func
 25105              	CAN_OperatingModeRequest:
 25106              	.LFB42:
 837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
 839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
 845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim    
 846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
 847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       CAN Operation modes functions
 848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
 849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   - sleep mode
 851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   - normal mode 
 852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   - initialization mode
 853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
 854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
 855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
 856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval status of the requested mode which can be 
 864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25107              		.loc 1 868 0
 25108              		.cfi_startproc
 25109              		@ args = 0, pretend = 0, frame = 16
 25110              		@ frame_needed = 1, uses_anonymous_args = 0
 25111              		@ link register save eliminated.
 25112 0bb0 80B4     		push	{r7}
 25113              	.LCFI39:
 25114              		.cfi_def_cfa_offset 4
 25115 0bb2 85B0     		sub	sp, sp, #20
 25116              	.LCFI40:
 25117              		.cfi_def_cfa_offset 24
 25118 0bb4 00AF     		add	r7, sp, #0
 25119              		.cfi_offset 7, -4
 25120              	.LCFI41:
 25121              		.cfi_def_cfa_register 7
 25122 0bb6 7860     		str	r0, [r7, #4]
 25123 0bb8 0B46     		mov	r3, r1
 25124 0bba FB70     		strb	r3, [r7, #3]
 869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 25125              		.loc 1 869 0
 25126 0bbc 4FF00003 		mov	r3, #0
 25127 0bc0 FB73     		strb	r3, [r7, #15]
 870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 25128              		.loc 1 872 0
 25129 0bc2 4FF6FF73 		movw	r3, #65535
 25130 0bc6 BB60     		str	r3, [r7, #8]
 873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 25131              		.loc 1 878 0
 25132 0bc8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25133 0bca 002B     		cmp	r3, #0
 25134 0bcc 23D1     		bne	.L87
 879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Request initialisation */
 881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 25135              		.loc 1 881 0
 25136 0bce 7B68     		ldr	r3, [r7, #4]
 25137 0bd0 1B68     		ldr	r3, [r3, #0]
 25138 0bd2 23F00303 		bic	r3, r3, #3
 25139 0bd6 43F00102 		orr	r2, r3, #1
 25140 0bda 7B68     		ldr	r3, [r7, #4]
 25141 0bdc 1A60     		str	r2, [r3, #0]
 882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Wait the acknowledge */
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 25142              		.loc 1 884 0
 25143 0bde 03E0     		b	.L88
 25144              	.L90:
 885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       timeout--;
 25145              		.loc 1 886 0
 25146 0be0 BB68     		ldr	r3, [r7, #8]
 25147 0be2 03F1FF33 		add	r3, r3, #-1
 25148 0be6 BB60     		str	r3, [r7, #8]
 25149              	.L88:
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 25150              		.loc 1 884 0 discriminator 1
 25151 0be8 7B68     		ldr	r3, [r7, #4]
 25152 0bea 5B68     		ldr	r3, [r3, #4]
 25153 0bec 03F00303 		and	r3, r3, #3
 25154 0bf0 012B     		cmp	r3, #1
 25155 0bf2 02D0     		beq	.L89
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 25156              		.loc 1 884 0 is_stmt 0 discriminator 2
 25157 0bf4 BB68     		ldr	r3, [r7, #8]
 25158 0bf6 002B     		cmp	r3, #0
 25159 0bf8 F2D1     		bne	.L90
 25160              	.L89:
 887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 25161              		.loc 1 888 0 is_stmt 1
 25162 0bfa 7B68     		ldr	r3, [r7, #4]
 25163 0bfc 5B68     		ldr	r3, [r3, #4]
 25164 0bfe 03F00303 		and	r3, r3, #3
 25165 0c02 012B     		cmp	r3, #1
 25166 0c04 03D0     		beq	.L91
 889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Failed;
 25167              		.loc 1 890 0
 25168 0c06 4FF00003 		mov	r3, #0
 25169 0c0a FB73     		strb	r3, [r7, #15]
 25170 0c0c 52E0     		b	.L92
 25171              	.L91:
 891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Success;
 25172              		.loc 1 894 0
 25173 0c0e 4FF00103 		mov	r3, #1
 25174 0c12 FB73     		strb	r3, [r7, #15]
 25175 0c14 4EE0     		b	.L92
 25176              	.L87:
 895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 25177              		.loc 1 897 0
 25178 0c16 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25179 0c18 012B     		cmp	r3, #1
 25180 0c1a 21D1     		bne	.L93
 898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 25181              		.loc 1 900 0
 25182 0c1c 7B68     		ldr	r3, [r7, #4]
 25183 0c1e 1B68     		ldr	r3, [r3, #0]
 25184 0c20 23F00302 		bic	r2, r3, #3
 25185 0c24 7B68     		ldr	r3, [r7, #4]
 25186 0c26 1A60     		str	r2, [r3, #0]
 901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Wait the acknowledge */
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 25187              		.loc 1 903 0
 25188 0c28 03E0     		b	.L94
 25189              	.L96:
 904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       timeout--;
 25190              		.loc 1 905 0
 25191 0c2a BB68     		ldr	r3, [r7, #8]
 25192 0c2c 03F1FF33 		add	r3, r3, #-1
 25193 0c30 BB60     		str	r3, [r7, #8]
 25194              	.L94:
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 25195              		.loc 1 903 0 discriminator 1
 25196 0c32 7B68     		ldr	r3, [r7, #4]
 25197 0c34 5B68     		ldr	r3, [r3, #4]
 25198 0c36 03F00303 		and	r3, r3, #3
 25199 0c3a 002B     		cmp	r3, #0
 25200 0c3c 02D0     		beq	.L95
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 25201              		.loc 1 903 0 is_stmt 0 discriminator 2
 25202 0c3e BB68     		ldr	r3, [r7, #8]
 25203 0c40 002B     		cmp	r3, #0
 25204 0c42 F2D1     		bne	.L96
 25205              	.L95:
 906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 25206              		.loc 1 907 0 is_stmt 1
 25207 0c44 7B68     		ldr	r3, [r7, #4]
 25208 0c46 5B68     		ldr	r3, [r3, #4]
 25209 0c48 03F00303 		and	r3, r3, #3
 25210 0c4c 002B     		cmp	r3, #0
 25211 0c4e 03D0     		beq	.L97
 908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Failed;
 25212              		.loc 1 909 0
 25213 0c50 4FF00003 		mov	r3, #0
 25214 0c54 FB73     		strb	r3, [r7, #15]
 25215 0c56 2DE0     		b	.L92
 25216              	.L97:
 910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Success;
 25217              		.loc 1 913 0
 25218 0c58 4FF00103 		mov	r3, #1
 25219 0c5c FB73     		strb	r3, [r7, #15]
 25220 0c5e 29E0     		b	.L92
 25221              	.L93:
 914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 25222              		.loc 1 916 0
 25223 0c60 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25224 0c62 022B     		cmp	r3, #2
 25225 0c64 23D1     		bne	.L98
 917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Request Sleep mode */
 919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 25226              		.loc 1 919 0
 25227 0c66 7B68     		ldr	r3, [r7, #4]
 25228 0c68 1B68     		ldr	r3, [r3, #0]
 25229 0c6a 23F00303 		bic	r3, r3, #3
 25230 0c6e 43F00202 		orr	r2, r3, #2
 25231 0c72 7B68     		ldr	r3, [r7, #4]
 25232 0c74 1A60     		str	r2, [r3, #0]
 920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Wait the acknowledge */
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 25233              		.loc 1 922 0
 25234 0c76 03E0     		b	.L99
 25235              	.L101:
 923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       timeout--;
 25236              		.loc 1 924 0
 25237 0c78 BB68     		ldr	r3, [r7, #8]
 25238 0c7a 03F1FF33 		add	r3, r3, #-1
 25239 0c7e BB60     		str	r3, [r7, #8]
 25240              	.L99:
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 25241              		.loc 1 922 0 discriminator 1
 25242 0c80 7B68     		ldr	r3, [r7, #4]
 25243 0c82 5B68     		ldr	r3, [r3, #4]
 25244 0c84 03F00303 		and	r3, r3, #3
 25245 0c88 022B     		cmp	r3, #2
 25246 0c8a 02D0     		beq	.L100
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 25247              		.loc 1 922 0 is_stmt 0 discriminator 2
 25248 0c8c BB68     		ldr	r3, [r7, #8]
 25249 0c8e 002B     		cmp	r3, #0
 25250 0c90 F2D1     		bne	.L101
 25251              	.L100:
 925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 25252              		.loc 1 926 0 is_stmt 1
 25253 0c92 7B68     		ldr	r3, [r7, #4]
 25254 0c94 5B68     		ldr	r3, [r3, #4]
 25255 0c96 03F00303 		and	r3, r3, #3
 25256 0c9a 022B     		cmp	r3, #2
 25257 0c9c 03D0     		beq	.L102
 927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Failed;
 25258              		.loc 1 928 0
 25259 0c9e 4FF00003 		mov	r3, #0
 25260 0ca2 FB73     		strb	r3, [r7, #15]
 25261 0ca4 06E0     		b	.L92
 25262              	.L102:
 929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
 931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
 932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       status = CAN_ModeStatus_Success;
 25263              		.loc 1 932 0
 25264 0ca6 4FF00103 		mov	r3, #1
 25265 0caa FB73     		strb	r3, [r7, #15]
 25266 0cac 02E0     		b	.L92
 25267              	.L98:
 933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
 934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
 936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     status = CAN_ModeStatus_Failed;
 25268              		.loc 1 937 0
 25269 0cae 4FF00003 		mov	r3, #0
 25270 0cb2 FB73     		strb	r3, [r7, #15]
 25271              	.L92:
 938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return  (uint8_t) status;
 25272              		.loc 1 940 0
 25273 0cb4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25274              		.loc 1 941 0
 25275 0cb6 1846     		mov	r0, r3
 25276 0cb8 07F11407 		add	r7, r7, #20
 25277 0cbc BD46     		mov	sp, r7
 25278 0cbe 80BC     		pop	{r7}
 25279 0cc0 7047     		bx	lr
 25280              		.cfi_endproc
 25281              	.LFE42:
 25283 0cc2 00BF     		.align	2
 25284              		.global	CAN_Sleep
 25285              		.thumb
 25286              		.thumb_func
 25288              	CAN_Sleep:
 25289              	.LFB43:
 942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25290              		.loc 1 949 0
 25291              		.cfi_startproc
 25292              		@ args = 0, pretend = 0, frame = 16
 25293              		@ frame_needed = 1, uses_anonymous_args = 0
 25294              		@ link register save eliminated.
 25295 0cc4 80B4     		push	{r7}
 25296              	.LCFI42:
 25297              		.cfi_def_cfa_offset 4
 25298 0cc6 85B0     		sub	sp, sp, #20
 25299              	.LCFI43:
 25300              		.cfi_def_cfa_offset 24
 25301 0cc8 00AF     		add	r7, sp, #0
 25302              		.cfi_offset 7, -4
 25303              	.LCFI44:
 25304              		.cfi_def_cfa_register 7
 25305 0cca 7860     		str	r0, [r7, #4]
 950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 25306              		.loc 1 950 0
 25307 0ccc 4FF00003 		mov	r3, #0
 25308 0cd0 FB73     		strb	r3, [r7, #15]
 951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     
 955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Request Sleep mode */
 956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 25309              		.loc 1 956 0
 25310 0cd2 7B68     		ldr	r3, [r7, #4]
 25311 0cd4 1B68     		ldr	r3, [r3, #0]
 25312 0cd6 23F00303 		bic	r3, r3, #3
 25313 0cda 43F00202 		orr	r2, r3, #2
 25314 0cde 7B68     		ldr	r3, [r7, #4]
 25315 0ce0 1A60     		str	r2, [r3, #0]
 957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
 958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Sleep mode status */
 959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 25316              		.loc 1 959 0
 25317 0ce2 7B68     		ldr	r3, [r7, #4]
 25318 0ce4 5B68     		ldr	r3, [r3, #4]
 25319 0ce6 03F00303 		and	r3, r3, #3
 25320 0cea 022B     		cmp	r3, #2
 25321 0cec 02D1     		bne	.L104
 960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Sleep mode not entered */
 962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 25322              		.loc 1 962 0
 25323 0cee 4FF00103 		mov	r3, #1
 25324 0cf2 FB73     		strb	r3, [r7, #15]
 25325              	.L104:
 963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* return sleep mode status */
 965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    return (uint8_t)sleepstatus;
 25326              		.loc 1 965 0
 25327 0cf4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25328              		.loc 1 966 0
 25329 0cf6 1846     		mov	r0, r3
 25330 0cf8 07F11407 		add	r7, r7, #20
 25331 0cfc BD46     		mov	sp, r7
 25332 0cfe 80BC     		pop	{r7}
 25333 0d00 7047     		bx	lr
 25334              		.cfi_endproc
 25335              	.LFE43:
 25337 0d02 00BF     		.align	2
 25338              		.global	CAN_WakeUp
 25339              		.thumb
 25340              		.thumb_func
 25342              	CAN_WakeUp:
 25343              	.LFB44:
 967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
 968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
 973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25344              		.loc 1 974 0
 25345              		.cfi_startproc
 25346              		@ args = 0, pretend = 0, frame = 16
 25347              		@ frame_needed = 1, uses_anonymous_args = 0
 25348              		@ link register save eliminated.
 25349 0d04 80B4     		push	{r7}
 25350              	.LCFI45:
 25351              		.cfi_def_cfa_offset 4
 25352 0d06 85B0     		sub	sp, sp, #20
 25353              	.LCFI46:
 25354              		.cfi_def_cfa_offset 24
 25355 0d08 00AF     		add	r7, sp, #0
 25356              		.cfi_offset 7, -4
 25357              	.LCFI47:
 25358              		.cfi_def_cfa_register 7
 25359 0d0a 7860     		str	r0, [r7, #4]
 975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 25360              		.loc 1 975 0
 25361 0d0c 4FF6FF73 		movw	r3, #65535
 25362 0d10 FB60     		str	r3, [r7, #12]
 976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 25363              		.loc 1 976 0
 25364 0d12 4FF00003 		mov	r3, #0
 25365 0d16 FB72     		strb	r3, [r7, #11]
 977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
 978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
 979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     
 981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Wake up request */
 982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 25366              		.loc 1 982 0
 25367 0d18 7B68     		ldr	r3, [r7, #4]
 25368 0d1a 1B68     		ldr	r3, [r3, #0]
 25369 0d1c 23F00202 		bic	r2, r3, #2
 25370 0d20 7B68     		ldr	r3, [r7, #4]
 25371 0d22 1A60     		str	r2, [r3, #0]
 983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     
 984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Sleep mode status */
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 25372              		.loc 1 985 0
 25373 0d24 03E0     		b	.L106
 25374              	.L108:
 986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    wait_slak--;
 25375              		.loc 1 987 0
 25376 0d26 FB68     		ldr	r3, [r7, #12]
 25377 0d28 03F1FF33 		add	r3, r3, #-1
 25378 0d2c FB60     		str	r3, [r7, #12]
 25379              	.L106:
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 25380              		.loc 1 985 0 discriminator 1
 25381 0d2e 7B68     		ldr	r3, [r7, #4]
 25382 0d30 5B68     		ldr	r3, [r3, #4]
 25383 0d32 03F00203 		and	r3, r3, #2
 25384 0d36 002B     		cmp	r3, #0
 25385 0d38 02D0     		beq	.L107
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 25386              		.loc 1 985 0 is_stmt 0 discriminator 2
 25387 0d3a FB68     		ldr	r3, [r7, #12]
 25388 0d3c 002B     		cmp	r3, #0
 25389 0d3e F2D1     		bne	.L108
 25390              	.L107:
 988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 25391              		.loc 1 989 0 is_stmt 1
 25392 0d40 7B68     		ldr	r3, [r7, #4]
 25393 0d42 5B68     		ldr	r3, [r3, #4]
 25394 0d44 03F00203 		and	r3, r3, #2
 25395 0d48 002B     		cmp	r3, #0
 25396 0d4a 02D1     		bne	.L109
 990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
 991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    /* wake up done : Sleep mode exited */
 992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 25397              		.loc 1 992 0
 25398 0d4c 4FF00103 		mov	r3, #1
 25399 0d50 FB72     		strb	r3, [r7, #11]
 25400              	.L109:
 993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
 994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* return wakeup status */
 995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return (uint8_t)wakeupstatus;
 25401              		.loc 1 995 0
 25402 0d52 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25403              		.loc 1 996 0
 25404 0d54 1846     		mov	r0, r3
 25405 0d56 07F11407 		add	r7, r7, #20
 25406 0d5a BD46     		mov	sp, r7
 25407 0d5c 80BC     		pop	{r7}
 25408 0d5e 7047     		bx	lr
 25409              		.cfi_endproc
 25410              	.LFE44:
 25412              		.align	2
 25413              		.global	CAN_GetLastErrorCode
 25414              		.thumb
 25415              		.thumb_func
 25417              	CAN_GetLastErrorCode:
 25418              	.LFB45:
 997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
 998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
 999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
1005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim    
1006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
1007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       CAN Bus Error management functions
1008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
1009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to 
1010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    
1014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                         
1018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
1019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
1020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval Error code: 
1026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25419              		.loc 1 1036 0
 25420              		.cfi_startproc
 25421              		@ args = 0, pretend = 0, frame = 16
 25422              		@ frame_needed = 1, uses_anonymous_args = 0
 25423              		@ link register save eliminated.
 25424 0d60 80B4     		push	{r7}
 25425              	.LCFI48:
 25426              		.cfi_def_cfa_offset 4
 25427 0d62 85B0     		sub	sp, sp, #20
 25428              	.LCFI49:
 25429              		.cfi_def_cfa_offset 24
 25430 0d64 00AF     		add	r7, sp, #0
 25431              		.cfi_offset 7, -4
 25432              	.LCFI50:
 25433              		.cfi_def_cfa_register 7
 25434 0d66 7860     		str	r0, [r7, #4]
1037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t errorcode=0;
 25435              		.loc 1 1037 0
 25436 0d68 4FF00003 		mov	r3, #0
 25437 0d6c FB73     		strb	r3, [r7, #15]
1038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the error code*/
1043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 25438              		.loc 1 1043 0
 25439 0d6e 7B68     		ldr	r3, [r7, #4]
 25440 0d70 9B69     		ldr	r3, [r3, #24]
 25441 0d72 DBB2     		uxtb	r3, r3
 25442 0d74 03F07003 		and	r3, r3, #112
 25443 0d78 FB73     		strb	r3, [r7, #15]
1044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Return the error code*/
1046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return errorcode;
 25444              		.loc 1 1046 0
 25445 0d7a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25446              		.loc 1 1047 0
 25447 0d7c 1846     		mov	r0, r3
 25448 0d7e 07F11407 		add	r7, r7, #20
 25449 0d82 BD46     		mov	sp, r7
 25450 0d84 80BC     		pop	{r7}
 25451 0d86 7047     		bx	lr
 25452              		.cfi_endproc
 25453              	.LFE45:
 25455              		.align	2
 25456              		.global	CAN_GetReceiveErrorCounter
 25457              		.thumb
 25458              		.thumb_func
 25460              	CAN_GetReceiveErrorCounter:
 25461              	.LFB46:
1048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *         error passive state.  
1057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25462              		.loc 1 1061 0
 25463              		.cfi_startproc
 25464              		@ args = 0, pretend = 0, frame = 16
 25465              		@ frame_needed = 1, uses_anonymous_args = 0
 25466              		@ link register save eliminated.
 25467 0d88 80B4     		push	{r7}
 25468              	.LCFI51:
 25469              		.cfi_def_cfa_offset 4
 25470 0d8a 85B0     		sub	sp, sp, #20
 25471              	.LCFI52:
 25472              		.cfi_def_cfa_offset 24
 25473 0d8c 00AF     		add	r7, sp, #0
 25474              		.cfi_offset 7, -4
 25475              	.LCFI53:
 25476              		.cfi_def_cfa_register 7
 25477 0d8e 7860     		str	r0, [r7, #4]
1062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t counter=0;
 25478              		.loc 1 1062 0
 25479 0d90 4FF00003 		mov	r3, #0
 25480 0d94 FB73     		strb	r3, [r7, #15]
1063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the Receive Error Counter*/
1068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 25481              		.loc 1 1068 0
 25482 0d96 7B68     		ldr	r3, [r7, #4]
 25483 0d98 9B69     		ldr	r3, [r3, #24]
 25484 0d9a 4FEA1363 		lsr	r3, r3, #24
 25485 0d9e FB73     		strb	r3, [r7, #15]
1069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Return the Receive Error Counter*/
1071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return counter;
 25486              		.loc 1 1071 0
 25487 0da0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25488              		.loc 1 1072 0
 25489 0da2 1846     		mov	r0, r3
 25490 0da4 07F11407 		add	r7, r7, #20
 25491 0da8 BD46     		mov	sp, r7
 25492 0daa 80BC     		pop	{r7}
 25493 0dac 7047     		bx	lr
 25494              		.cfi_endproc
 25495              	.LFE46:
 25497 0dae 00BF     		.align	2
 25498              		.global	CAN_GetLSBTransmitErrorCounter
 25499              		.thumb
 25500              		.thumb_func
 25502              	CAN_GetLSBTransmitErrorCounter:
 25503              	.LFB47:
1073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25504              		.loc 1 1081 0
 25505              		.cfi_startproc
 25506              		@ args = 0, pretend = 0, frame = 16
 25507              		@ frame_needed = 1, uses_anonymous_args = 0
 25508              		@ link register save eliminated.
 25509 0db0 80B4     		push	{r7}
 25510              	.LCFI54:
 25511              		.cfi_def_cfa_offset 4
 25512 0db2 85B0     		sub	sp, sp, #20
 25513              	.LCFI55:
 25514              		.cfi_def_cfa_offset 24
 25515 0db4 00AF     		add	r7, sp, #0
 25516              		.cfi_offset 7, -4
 25517              	.LCFI56:
 25518              		.cfi_def_cfa_register 7
 25519 0db6 7860     		str	r0, [r7, #4]
1082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint8_t counter=0;
 25520              		.loc 1 1082 0
 25521 0db8 4FF00003 		mov	r3, #0
 25522 0dbc FB73     		strb	r3, [r7, #15]
1083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 25523              		.loc 1 1088 0
 25524 0dbe 7B68     		ldr	r3, [r7, #4]
 25525 0dc0 9B69     		ldr	r3, [r3, #24]
 25526 0dc2 03F47F03 		and	r3, r3, #16711680
 25527 0dc6 4FEA1343 		lsr	r3, r3, #16
 25528 0dca FB73     		strb	r3, [r7, #15]
1089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return counter;
 25529              		.loc 1 1091 0
 25530 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25531              		.loc 1 1092 0
 25532 0dce 1846     		mov	r0, r3
 25533 0dd0 07F11407 		add	r7, r7, #20
 25534 0dd4 BD46     		mov	sp, r7
 25535 0dd6 80BC     		pop	{r7}
 25536 0dd8 7047     		bx	lr
 25537              		.cfi_endproc
 25538              	.LFE47:
 25540 0dda 00BF     		.align	2
 25541              		.global	CAN_ITConfig
 25542              		.thumb
 25543              		.thumb_func
 25545              	CAN_ITConfig:
 25546              	.LFB48:
1093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
1095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  *
1100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @verbatim   
1101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================
1102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                    Interrupts and flags management functions
1103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  ===============================================================================  
1104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ===============  
1111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       Flags :
1112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ===============
1113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    A. Transmit Flags
1116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -----------------------
1117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_RQCP0, 
1118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_RQCP1, 
1119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           been performed. 
1122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   B. Receive Flags
1124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -----------------------
1125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FMP0,
1127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set to signal that messages are pending in the receive 
1129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           FIFO.
1130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           These Flags are cleared only by hardware. 
1131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FF0,
1133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set when three messages are stored in the selected 
1135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           FIFO.                        
1136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FOV0              
1138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set when a new message has been received and passed 
1140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           the filter while the FIFO was full.         
1141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   C. Operating Mode Flags
1143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ----------------------- 
1144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         
1148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     
1151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   D. Error Flags
1152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ----------------------- 
1153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           This Flag is cleared only by hardware.
1157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                             
1158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           greater than 127).
1162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           This Flag is cleared only by hardware.
1163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                              
1164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           This Flag is cleared only by hardware.
1168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                    
1169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           set If a message has been transferred (reception or
1171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           
1173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ===============  
1174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    Interrupts :
1175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ===============
1176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    A. Transmit interrupt
1179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -----------------------   
1180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    B. Receive Interrupts
1185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -----------------------          
1186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FMP0,
1187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           messages are pending in the receive FIFO.
1190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           only by hardware.
1192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                 
1193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FF0,              
1194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           three messages are stored in the selected FIFO.
1197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         
1198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FOV0,        
1199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           a new message has been received and passed the filter
1202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           while the FIFO was full.
1203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    C. Operating Mode Interrupts
1205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -------------------------------          
1206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           in Sleep mode.
1210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                   
1211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    D. Error Interrupts 
1216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   -----------------------         
1217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when
1219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                
1222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when
1224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           
1227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when
1229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           This Flag is cleared only by hardware.
1232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                                   
1233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           a message has been transferred (reception or
1236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           transmission) with error, and the error code is hold.
1237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           
1238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                           an error condition is pending.      
1241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****                       
1242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   Managing the CAN controller events :
1244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ------------------------------------ 
1245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** @endverbatim
1262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @{
1263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */ 
1264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be: 
1269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
1286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25547              		.loc 1 1288 0
 25548              		.cfi_startproc
 25549              		@ args = 0, pretend = 0, frame = 16
 25550              		@ frame_needed = 1, uses_anonymous_args = 0
 25551              		@ link register save eliminated.
 25552 0ddc 80B4     		push	{r7}
 25553              	.LCFI57:
 25554              		.cfi_def_cfa_offset 4
 25555 0dde 85B0     		sub	sp, sp, #20
 25556              	.LCFI58:
 25557              		.cfi_def_cfa_offset 24
 25558 0de0 00AF     		add	r7, sp, #0
 25559              		.cfi_offset 7, -4
 25560              	.LCFI59:
 25561              		.cfi_def_cfa_register 7
 25562 0de2 F860     		str	r0, [r7, #12]
 25563 0de4 B960     		str	r1, [r7, #8]
 25564 0de6 1346     		mov	r3, r2
 25565 0de8 FB71     		strb	r3, [r7, #7]
1289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (NewState != DISABLE)
 25566              		.loc 1 1294 0
 25567 0dea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25568 0dec 002B     		cmp	r3, #0
 25569 0dee 07D0     		beq	.L114
1295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Enable the selected CANx interrupt */
1297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->IER |= CAN_IT;
 25570              		.loc 1 1297 0
 25571 0df0 FB68     		ldr	r3, [r7, #12]
 25572 0df2 5A69     		ldr	r2, [r3, #20]
 25573 0df4 BB68     		ldr	r3, [r7, #8]
 25574 0df6 42EA0302 		orr	r2, r2, r3
 25575 0dfa FB68     		ldr	r3, [r7, #12]
 25576 0dfc 5A61     		str	r2, [r3, #20]
 25577 0dfe 08E0     		b	.L113
 25578              	.L114:
1298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
1300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Disable the selected CANx interrupt */
1302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->IER &= ~CAN_IT;
 25579              		.loc 1 1302 0
 25580 0e00 FB68     		ldr	r3, [r7, #12]
 25581 0e02 5A69     		ldr	r2, [r3, #20]
 25582 0e04 BB68     		ldr	r3, [r7, #8]
 25583 0e06 6FEA0303 		mvn	r3, r3
 25584 0e0a 02EA0302 		and	r2, r2, r3
 25585 0e0e FB68     		ldr	r3, [r7, #12]
 25586 0e10 5A61     		str	r2, [r3, #20]
 25587              	.L113:
1303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25588              		.loc 1 1304 0
 25589 0e12 07F11407 		add	r7, r7, #20
 25590 0e16 BD46     		mov	sp, r7
 25591 0e18 80BC     		pop	{r7}
 25592 0e1a 7047     		bx	lr
 25593              		.cfi_endproc
 25594              	.LFE48:
 25596              		.align	2
 25597              		.global	CAN_GetFlagStatus
 25598              		.thumb
 25599              		.thumb_func
 25601              	CAN_GetFlagStatus:
 25602              	.LFB49:
1305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be one of the following values:
1310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25603              		.loc 1 1328 0
 25604              		.cfi_startproc
 25605              		@ args = 0, pretend = 0, frame = 16
 25606              		@ frame_needed = 1, uses_anonymous_args = 0
 25607              		@ link register save eliminated.
 25608 0e1c 80B4     		push	{r7}
 25609              	.LCFI60:
 25610              		.cfi_def_cfa_offset 4
 25611 0e1e 85B0     		sub	sp, sp, #20
 25612              	.LCFI61:
 25613              		.cfi_def_cfa_offset 24
 25614 0e20 00AF     		add	r7, sp, #0
 25615              		.cfi_offset 7, -4
 25616              	.LCFI62:
 25617              		.cfi_def_cfa_register 7
 25618 0e22 7860     		str	r0, [r7, #4]
 25619 0e24 3960     		str	r1, [r7, #0]
1329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   FlagStatus bitstatus = RESET;
 25620              		.loc 1 1329 0
 25621 0e26 4FF00003 		mov	r3, #0
 25622 0e2a FB73     		strb	r3, [r7, #15]
1330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 25623              		.loc 1 1336 0
 25624 0e2c 3B68     		ldr	r3, [r7, #0]
 25625 0e2e 03F47003 		and	r3, r3, #15728640
 25626 0e32 002B     		cmp	r3, #0
 25627 0e34 12D0     		beq	.L117
1337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   { 
1338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Check the status of the specified CAN flag */
1339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 25628              		.loc 1 1339 0
 25629 0e36 7B68     		ldr	r3, [r7, #4]
 25630 0e38 9A69     		ldr	r2, [r3, #24]
 25631 0e3a 3B68     		ldr	r3, [r7, #0]
 25632 0e3c 02EA0303 		and	r3, r2, r3
 25633 0e40 23F07F43 		bic	r3, r3, #-16777216
 25634 0e44 23F47003 		bic	r3, r3, #15728640
 25635 0e48 002B     		cmp	r3, #0
 25636 0e4a 03D0     		beq	.L118
1340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is set */
1342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = SET;
 25637              		.loc 1 1342 0
 25638 0e4c 4FF00103 		mov	r3, #1
 25639 0e50 FB73     		strb	r3, [r7, #15]
 25640 0e52 5DE0     		b	.L119
 25641              	.L118:
1343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
1345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is reset */
1347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = RESET;
 25642              		.loc 1 1347 0
 25643 0e54 4FF00003 		mov	r3, #0
 25644 0e58 FB73     		strb	r3, [r7, #15]
 25645 0e5a 59E0     		b	.L119
 25646              	.L117:
1348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 25647              		.loc 1 1350 0
 25648 0e5c 3B68     		ldr	r3, [r7, #0]
 25649 0e5e 03F08073 		and	r3, r3, #16777216
 25650 0e62 002B     		cmp	r3, #0
 25651 0e64 12D0     		beq	.L120
1351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   { 
1352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Check the status of the specified CAN flag */
1353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 25652              		.loc 1 1353 0
 25653 0e66 7B68     		ldr	r3, [r7, #4]
 25654 0e68 5A68     		ldr	r2, [r3, #4]
 25655 0e6a 3B68     		ldr	r3, [r7, #0]
 25656 0e6c 02EA0303 		and	r3, r2, r3
 25657 0e70 23F07F43 		bic	r3, r3, #-16777216
 25658 0e74 23F47003 		bic	r3, r3, #15728640
 25659 0e78 002B     		cmp	r3, #0
 25660 0e7a 03D0     		beq	.L121
1354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is set */
1356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = SET;
 25661              		.loc 1 1356 0
 25662 0e7c 4FF00103 		mov	r3, #1
 25663 0e80 FB73     		strb	r3, [r7, #15]
 25664 0e82 45E0     		b	.L119
 25665              	.L121:
1357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
1359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is reset */
1361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = RESET;
 25666              		.loc 1 1361 0
 25667 0e84 4FF00003 		mov	r3, #0
 25668 0e88 FB73     		strb	r3, [r7, #15]
 25669 0e8a 41E0     		b	.L119
 25670              	.L120:
1362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 25671              		.loc 1 1364 0
 25672 0e8c 3B68     		ldr	r3, [r7, #0]
 25673 0e8e 03F00063 		and	r3, r3, #134217728
 25674 0e92 002B     		cmp	r3, #0
 25675 0e94 12D0     		beq	.L122
1365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   { 
1366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Check the status of the specified CAN flag */
1367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 25676              		.loc 1 1367 0
 25677 0e96 7B68     		ldr	r3, [r7, #4]
 25678 0e98 9A68     		ldr	r2, [r3, #8]
 25679 0e9a 3B68     		ldr	r3, [r7, #0]
 25680 0e9c 02EA0303 		and	r3, r2, r3
 25681 0ea0 23F07F43 		bic	r3, r3, #-16777216
 25682 0ea4 23F47003 		bic	r3, r3, #15728640
 25683 0ea8 002B     		cmp	r3, #0
 25684 0eaa 03D0     		beq	.L123
1368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is set */
1370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = SET;
 25685              		.loc 1 1370 0
 25686 0eac 4FF00103 		mov	r3, #1
 25687 0eb0 FB73     		strb	r3, [r7, #15]
 25688 0eb2 2DE0     		b	.L119
 25689              	.L123:
1371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
1373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is reset */
1375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = RESET;
 25690              		.loc 1 1375 0
 25691 0eb4 4FF00003 		mov	r3, #0
 25692 0eb8 FB73     		strb	r3, [r7, #15]
 25693 0eba 29E0     		b	.L119
 25694              	.L122:
1376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 25695              		.loc 1 1378 0
 25696 0ebc 3B68     		ldr	r3, [r7, #0]
 25697 0ebe 03F00073 		and	r3, r3, #33554432
 25698 0ec2 002B     		cmp	r3, #0
 25699 0ec4 12D0     		beq	.L124
1379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   { 
1380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Check the status of the specified CAN flag */
1381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 25700              		.loc 1 1381 0
 25701 0ec6 7B68     		ldr	r3, [r7, #4]
 25702 0ec8 DA68     		ldr	r2, [r3, #12]
 25703 0eca 3B68     		ldr	r3, [r7, #0]
 25704 0ecc 02EA0303 		and	r3, r2, r3
 25705 0ed0 23F07F43 		bic	r3, r3, #-16777216
 25706 0ed4 23F47003 		bic	r3, r3, #15728640
 25707 0ed8 002B     		cmp	r3, #0
 25708 0eda 03D0     		beq	.L125
1382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is set */
1384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = SET;
 25709              		.loc 1 1384 0
 25710 0edc 4FF00103 		mov	r3, #1
 25711 0ee0 FB73     		strb	r3, [r7, #15]
 25712 0ee2 15E0     		b	.L119
 25713              	.L125:
1385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
1387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is reset */
1389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = RESET;
 25714              		.loc 1 1389 0
 25715 0ee4 4FF00003 		mov	r3, #0
 25716 0ee8 FB73     		strb	r3, [r7, #15]
 25717 0eea 11E0     		b	.L119
 25718              	.L124:
1390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   { 
1394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Check the status of the specified CAN flag */
1395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 25719              		.loc 1 1395 0
 25720 0eec 7B68     		ldr	r3, [r7, #4]
 25721 0eee 1A69     		ldr	r2, [r3, #16]
 25722 0ef0 3B68     		ldr	r3, [r7, #0]
 25723 0ef2 02EA0303 		and	r3, r2, r3
 25724 0ef6 23F07F43 		bic	r3, r3, #-16777216
 25725 0efa 23F47003 		bic	r3, r3, #15728640
 25726 0efe 002B     		cmp	r3, #0
 25727 0f00 03D0     		beq	.L126
1396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is set */
1398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = SET;
 25728              		.loc 1 1398 0
 25729 0f02 4FF00103 		mov	r3, #1
 25730 0f06 FB73     		strb	r3, [r7, #15]
 25731 0f08 02E0     		b	.L119
 25732              	.L126:
1399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else
1401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     { 
1402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* CAN_FLAG is reset */
1403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       bitstatus = RESET;
 25733              		.loc 1 1403 0
 25734 0f0a 4FF00003 		mov	r3, #0
 25735 0f0e FB73     		strb	r3, [r7, #15]
 25736              	.L119:
1404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Return the CAN_FLAG status */
1407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return  bitstatus;
 25737              		.loc 1 1407 0
 25738 0f10 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25739              		.loc 1 1408 0
 25740 0f12 1846     		mov	r0, r3
 25741 0f14 07F11407 		add	r7, r7, #20
 25742 0f18 BD46     		mov	sp, r7
 25743 0f1a 80BC     		pop	{r7}
 25744 0f1c 7047     		bx	lr
 25745              		.cfi_endproc
 25746              	.LFE49:
 25748 0f1e 00BF     		.align	2
 25749              		.global	CAN_ClearFlag
 25750              		.thumb
 25751              		.thumb_func
 25753              	CAN_ClearFlag:
 25754              	.LFB50:
1409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be one of the following values:
1415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
1426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25755              		.loc 1 1428 0
 25756              		.cfi_startproc
 25757              		@ args = 0, pretend = 0, frame = 16
 25758              		@ frame_needed = 1, uses_anonymous_args = 0
 25759              		@ link register save eliminated.
 25760 0f20 80B4     		push	{r7}
 25761              	.LCFI63:
 25762              		.cfi_def_cfa_offset 4
 25763 0f22 85B0     		sub	sp, sp, #20
 25764              	.LCFI64:
 25765              		.cfi_def_cfa_offset 24
 25766 0f24 00AF     		add	r7, sp, #0
 25767              		.cfi_offset 7, -4
 25768              	.LCFI65:
 25769              		.cfi_def_cfa_register 7
 25770 0f26 7860     		str	r0, [r7, #4]
 25771 0f28 3960     		str	r1, [r7, #0]
1429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   uint32_t flagtmp=0;
 25772              		.loc 1 1429 0
 25773 0f2a 4FF00003 		mov	r3, #0
 25774 0f2e FB60     		str	r3, [r7, #12]
1430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 25775              		.loc 1 1434 0
 25776 0f30 3A68     		ldr	r2, [r7, #0]
 25777 0f32 4FF07003 		mov	r3, #112
 25778 0f36 C3F2F003 		movt	r3, 12528
 25779 0f3a 9A42     		cmp	r2, r3
 25780 0f3c 04D1     		bne	.L128
1435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* Clear the selected CAN flags */
1437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 25781              		.loc 1 1437 0
 25782 0f3e 7B68     		ldr	r3, [r7, #4]
 25783 0f40 4FF00002 		mov	r2, #0
 25784 0f44 9A61     		str	r2, [r3, #24]
 25785 0f46 23E0     		b	.L127
 25786              	.L128:
1438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 25787              		.loc 1 1441 0
 25788 0f48 3B68     		ldr	r3, [r7, #0]
 25789 0f4a 23F07F43 		bic	r3, r3, #-16777216
 25790 0f4e 23F47003 		bic	r3, r3, #15728640
 25791 0f52 FB60     		str	r3, [r7, #12]
1442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 25792              		.loc 1 1443 0
 25793 0f54 3B68     		ldr	r3, [r7, #0]
 25794 0f56 03F00073 		and	r3, r3, #33554432
 25795 0f5a 002B     		cmp	r3, #0
 25796 0f5c 03D0     		beq	.L130
1444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
1445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Receive Flags */
1446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 25797              		.loc 1 1446 0
 25798 0f5e 7B68     		ldr	r3, [r7, #4]
 25799 0f60 FA68     		ldr	r2, [r7, #12]
 25800 0f62 DA60     		str	r2, [r3, #12]
 25801 0f64 14E0     		b	.L127
 25802              	.L130:
1447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 25803              		.loc 1 1448 0
 25804 0f66 3B68     		ldr	r3, [r7, #0]
 25805 0f68 03F08063 		and	r3, r3, #67108864
 25806 0f6c 002B     		cmp	r3, #0
 25807 0f6e 03D0     		beq	.L131
1449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
1450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Receive Flags */
1451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 25808              		.loc 1 1451 0
 25809 0f70 7B68     		ldr	r3, [r7, #4]
 25810 0f72 FA68     		ldr	r2, [r7, #12]
 25811 0f74 1A61     		str	r2, [r3, #16]
 25812 0f76 0BE0     		b	.L127
 25813              	.L131:
1452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 25814              		.loc 1 1453 0
 25815 0f78 3B68     		ldr	r3, [r7, #0]
 25816 0f7a 03F00063 		and	r3, r3, #134217728
 25817 0f7e 002B     		cmp	r3, #0
 25818 0f80 03D0     		beq	.L132
1454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
1455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Transmit Flags */
1456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 25819              		.loc 1 1456 0
 25820 0f82 7B68     		ldr	r3, [r7, #4]
 25821 0f84 FA68     		ldr	r2, [r7, #12]
 25822 0f86 9A60     		str	r2, [r3, #8]
 25823 0f88 02E0     		b	.L127
 25824              	.L132:
1457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
1460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Operating mode Flags */
1461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 25825              		.loc 1 1461 0
 25826 0f8a 7B68     		ldr	r3, [r7, #4]
 25827 0f8c FA68     		ldr	r2, [r7, #12]
 25828 0f8e 5A60     		str	r2, [r3, #4]
 25829              	.L127:
1462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 25830              		.loc 1 1464 0
 25831 0f90 07F11407 		add	r7, r7, #20
 25832 0f94 BD46     		mov	sp, r7
 25833 0f96 80BC     		pop	{r7}
 25834 0f98 7047     		bx	lr
 25835              		.cfi_endproc
 25836              	.LFE50:
 25838 0f9a 00BF     		.align	2
 25839              		.global	CAN_GetITStatus
 25840              		.thumb
 25841              		.thumb_func
 25843              	CAN_GetITStatus:
 25844              	.LFB51:
1465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be one of the following values:
1471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 25845              		.loc 1 1488 0
 25846              		.cfi_startproc
 25847              		@ args = 0, pretend = 0, frame = 16
 25848              		@ frame_needed = 1, uses_anonymous_args = 0
 25849 0f9c 80B5     		push	{r7, lr}
 25850              	.LCFI66:
 25851              		.cfi_def_cfa_offset 8
 25852 0f9e 84B0     		sub	sp, sp, #16
 25853              	.LCFI67:
 25854              		.cfi_def_cfa_offset 24
 25855 0fa0 00AF     		add	r7, sp, #0
 25856              		.cfi_offset 14, -4
 25857              		.cfi_offset 7, -8
 25858              	.LCFI68:
 25859              		.cfi_def_cfa_register 7
 25860 0fa2 7860     		str	r0, [r7, #4]
 25861 0fa4 3960     		str	r1, [r7, #0]
1489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ITStatus itstatus = RESET;
 25862              		.loc 1 1489 0
 25863 0fa6 4FF00003 		mov	r3, #0
 25864 0faa FB73     		strb	r3, [r7, #15]
1490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* check the interrupt enable bit */
1495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 25865              		.loc 1 1495 0
 25866 0fac 7B68     		ldr	r3, [r7, #4]
 25867 0fae 5A69     		ldr	r2, [r3, #20]
 25868 0fb0 3B68     		ldr	r3, [r7, #0]
 25869 0fb2 02EA0303 		and	r3, r2, r3
 25870 0fb6 002B     		cmp	r3, #0
 25871 0fb8 00F0C480 		beq	.L134
1496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  {
1497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     switch (CAN_IT)
 25872              		.loc 1 1498 0
 25873 0fbc 3B68     		ldr	r3, [r7, #0]
 25874 0fbe 402B     		cmp	r3, #64
 25875 0fc0 6BD0     		beq	.L142
 25876 0fc2 402B     		cmp	r3, #64
 25877 0fc4 0FD8     		bhi	.L150
 25878 0fc6 042B     		cmp	r3, #4
 25879 0fc8 3FD0     		beq	.L138
 25880 0fca 042B     		cmp	r3, #4
 25881 0fcc 04D8     		bhi	.L151
 25882 0fce 012B     		cmp	r3, #1
 25883 0fd0 25D0     		beq	.L136
 25884 0fd2 022B     		cmp	r3, #2
 25885 0fd4 2FD0     		beq	.L137
 25886 0fd6 B1E0     		b	.L135
 25887              	.L151:
 25888 0fd8 102B     		cmp	r3, #16
 25889 0fda 4AD0     		beq	.L140
 25890 0fdc 202B     		cmp	r3, #32
 25891 0fde 52D0     		beq	.L141
 25892 0fe0 082B     		cmp	r3, #8
 25893 0fe2 3CD0     		beq	.L139
 25894 0fe4 AAE0     		b	.L135
 25895              	.L150:
 25896 0fe6 B3F5006F 		cmp	r3, #2048
 25897 0fea 00F09280 		beq	.L146
 25898 0fee B3F5006F 		cmp	r3, #2048
 25899 0ff2 09D8     		bhi	.L152
 25900 0ff4 B3F5007F 		cmp	r3, #512
 25901 0ff8 77D0     		beq	.L144
 25902 0ffa B3F5806F 		cmp	r3, #1024
 25903 0ffe 7ED0     		beq	.L145
 25904 1000 B3F5807F 		cmp	r3, #256
 25905 1004 67D0     		beq	.L143
 25906 1006 99E0     		b	.L135
 25907              	.L152:
 25908 1008 B3F5803F 		cmp	r3, #65536
 25909 100c 4FD0     		beq	.L148
 25910 100e B3F5003F 		cmp	r3, #131072
 25911 1012 56D0     		beq	.L149
 25912 1014 B3F5004F 		cmp	r3, #32768
 25913 1018 00F08580 		beq	.L147
 25914 101c 8EE0     		b	.L135
 25915              	.L136:
1499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     {
1500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_TME:
1501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 25916              		.loc 1 1502 0
 25917 101e 7B68     		ldr	r3, [r7, #4]
 25918 1020 9B68     		ldr	r3, [r3, #8]
 25919 1022 1846     		mov	r0, r3
 25920 1024 40F20111 		movw	r1, #257
 25921 1028 C0F20101 		movt	r1, 1
 25922 102c 00F010F9 		bl	CheckITStatus
 25923 1030 0346     		mov	r3, r0
 25924 1032 FB73     		strb	r3, [r7, #15]
1503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25925              		.loc 1 1503 0
 25926 1034 89E0     		b	.L154
 25927              	.L137:
1504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FMP0:
1505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 25928              		.loc 1 1506 0
 25929 1036 7B68     		ldr	r3, [r7, #4]
 25930 1038 DB68     		ldr	r3, [r3, #12]
 25931 103a 1846     		mov	r0, r3
 25932 103c 4FF00301 		mov	r1, #3
 25933 1040 00F006F9 		bl	CheckITStatus
 25934 1044 0346     		mov	r3, r0
 25935 1046 FB73     		strb	r3, [r7, #15]
1507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25936              		.loc 1 1507 0
 25937 1048 7FE0     		b	.L154
 25938              	.L138:
1508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FF0:
1509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 25939              		.loc 1 1510 0
 25940 104a 7B68     		ldr	r3, [r7, #4]
 25941 104c DB68     		ldr	r3, [r3, #12]
 25942 104e 1846     		mov	r0, r3
 25943 1050 4FF00801 		mov	r1, #8
 25944 1054 00F0FCF8 		bl	CheckITStatus
 25945 1058 0346     		mov	r3, r0
 25946 105a FB73     		strb	r3, [r7, #15]
1511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25947              		.loc 1 1511 0
 25948 105c 75E0     		b	.L154
 25949              	.L139:
1512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FOV0:
1513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 25950              		.loc 1 1514 0
 25951 105e 7B68     		ldr	r3, [r7, #4]
 25952 1060 DB68     		ldr	r3, [r3, #12]
 25953 1062 1846     		mov	r0, r3
 25954 1064 4FF01001 		mov	r1, #16
 25955 1068 00F0F2F8 		bl	CheckITStatus
 25956 106c 0346     		mov	r3, r0
 25957 106e FB73     		strb	r3, [r7, #15]
1515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25958              		.loc 1 1515 0
 25959 1070 6BE0     		b	.L154
 25960              	.L140:
1516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FMP1:
1517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 25961              		.loc 1 1518 0
 25962 1072 7B68     		ldr	r3, [r7, #4]
 25963 1074 1B69     		ldr	r3, [r3, #16]
 25964 1076 1846     		mov	r0, r3
 25965 1078 4FF00301 		mov	r1, #3
 25966 107c 00F0E8F8 		bl	CheckITStatus
 25967 1080 0346     		mov	r3, r0
 25968 1082 FB73     		strb	r3, [r7, #15]
1519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25969              		.loc 1 1519 0
 25970 1084 61E0     		b	.L154
 25971              	.L141:
1520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FF1:
1521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 25972              		.loc 1 1522 0
 25973 1086 7B68     		ldr	r3, [r7, #4]
 25974 1088 1B69     		ldr	r3, [r3, #16]
 25975 108a 1846     		mov	r0, r3
 25976 108c 4FF00801 		mov	r1, #8
 25977 1090 00F0DEF8 		bl	CheckITStatus
 25978 1094 0346     		mov	r3, r0
 25979 1096 FB73     		strb	r3, [r7, #15]
1523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25980              		.loc 1 1523 0
 25981 1098 57E0     		b	.L154
 25982              	.L142:
1524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_FOV1:
1525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 25983              		.loc 1 1526 0
 25984 109a 7B68     		ldr	r3, [r7, #4]
 25985 109c 1B69     		ldr	r3, [r3, #16]
 25986 109e 1846     		mov	r0, r3
 25987 10a0 4FF01001 		mov	r1, #16
 25988 10a4 00F0D4F8 		bl	CheckITStatus
 25989 10a8 0346     		mov	r3, r0
 25990 10aa FB73     		strb	r3, [r7, #15]
1527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 25991              		.loc 1 1527 0
 25992 10ac 4DE0     		b	.L154
 25993              	.L148:
1528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_WKU:
1529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 25994              		.loc 1 1530 0
 25995 10ae 7B68     		ldr	r3, [r7, #4]
 25996 10b0 5B68     		ldr	r3, [r3, #4]
 25997 10b2 1846     		mov	r0, r3
 25998 10b4 4FF00801 		mov	r1, #8
 25999 10b8 00F0CAF8 		bl	CheckITStatus
 26000 10bc 0346     		mov	r3, r0
 26001 10be FB73     		strb	r3, [r7, #15]
1531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26002              		.loc 1 1531 0
 26003 10c0 43E0     		b	.L154
 26004              	.L149:
1532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_SLK:
1533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 26005              		.loc 1 1534 0
 26006 10c2 7B68     		ldr	r3, [r7, #4]
 26007 10c4 5B68     		ldr	r3, [r3, #4]
 26008 10c6 1846     		mov	r0, r3
 26009 10c8 4FF01001 		mov	r1, #16
 26010 10cc 00F0C0F8 		bl	CheckITStatus
 26011 10d0 0346     		mov	r3, r0
 26012 10d2 FB73     		strb	r3, [r7, #15]
1535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26013              		.loc 1 1535 0
 26014 10d4 39E0     		b	.L154
 26015              	.L143:
1536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_EWG:
1537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 26016              		.loc 1 1538 0
 26017 10d6 7B68     		ldr	r3, [r7, #4]
 26018 10d8 9B69     		ldr	r3, [r3, #24]
 26019 10da 1846     		mov	r0, r3
 26020 10dc 4FF00101 		mov	r1, #1
 26021 10e0 00F0B6F8 		bl	CheckITStatus
 26022 10e4 0346     		mov	r3, r0
 26023 10e6 FB73     		strb	r3, [r7, #15]
1539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26024              		.loc 1 1539 0
 26025 10e8 2FE0     		b	.L154
 26026              	.L144:
1540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_EPV:
1541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 26027              		.loc 1 1542 0
 26028 10ea 7B68     		ldr	r3, [r7, #4]
 26029 10ec 9B69     		ldr	r3, [r3, #24]
 26030 10ee 1846     		mov	r0, r3
 26031 10f0 4FF00201 		mov	r1, #2
 26032 10f4 00F0ACF8 		bl	CheckITStatus
 26033 10f8 0346     		mov	r3, r0
 26034 10fa FB73     		strb	r3, [r7, #15]
1543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26035              		.loc 1 1543 0
 26036 10fc 25E0     		b	.L154
 26037              	.L145:
1544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_BOF:
1545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 26038              		.loc 1 1546 0
 26039 10fe 7B68     		ldr	r3, [r7, #4]
 26040 1100 9B69     		ldr	r3, [r3, #24]
 26041 1102 1846     		mov	r0, r3
 26042 1104 4FF00401 		mov	r1, #4
 26043 1108 00F0A2F8 		bl	CheckITStatus
 26044 110c 0346     		mov	r3, r0
 26045 110e FB73     		strb	r3, [r7, #15]
1547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26046              		.loc 1 1547 0
 26047 1110 1BE0     		b	.L154
 26048              	.L146:
1548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_LEC:
1549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 26049              		.loc 1 1550 0
 26050 1112 7B68     		ldr	r3, [r7, #4]
 26051 1114 9B69     		ldr	r3, [r3, #24]
 26052 1116 1846     		mov	r0, r3
 26053 1118 4FF07001 		mov	r1, #112
 26054 111c 00F098F8 		bl	CheckITStatus
 26055 1120 0346     		mov	r3, r0
 26056 1122 FB73     		strb	r3, [r7, #15]
1551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26057              		.loc 1 1551 0
 26058 1124 11E0     		b	.L154
 26059              	.L147:
1552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       case CAN_IT_ERR:
1553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 26060              		.loc 1 1554 0
 26061 1126 7B68     		ldr	r3, [r7, #4]
 26062 1128 5B68     		ldr	r3, [r3, #4]
 26063 112a 1846     		mov	r0, r3
 26064 112c 4FF00401 		mov	r1, #4
 26065 1130 00F08EF8 		bl	CheckITStatus
 26066 1134 0346     		mov	r3, r0
 26067 1136 FB73     		strb	r3, [r7, #15]
1555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26068              		.loc 1 1555 0
 26069 1138 00BF     		nop
 26070 113a 06E0     		b	.L154
 26071              	.L135:
1556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       default:
1557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         /* in case of error, return RESET */
1558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         itstatus = RESET;
 26072              		.loc 1 1558 0
 26073 113c 4FF00003 		mov	r3, #0
 26074 1140 FB73     		strb	r3, [r7, #15]
1559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****         break;
 26075              		.loc 1 1559 0
 26076 1142 02E0     		b	.L154
 26077              	.L134:
1560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     }
1561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
1563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     itstatus  = RESET;
 26078              		.loc 1 1565 0
 26079 1144 4FF00003 		mov	r3, #0
 26080 1148 FB73     		strb	r3, [r7, #15]
 26081              	.L154:
1566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Return the CAN_IT status */
1569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return  itstatus;
 26082              		.loc 1 1569 0
 26083 114a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 26084              		.loc 1 1570 0
 26085 114c 1846     		mov	r0, r3
 26086 114e 07F11007 		add	r7, r7, #16
 26087 1152 BD46     		mov	sp, r7
 26088 1154 80BD     		pop	{r7, pc}
 26089              		.cfi_endproc
 26090              	.LFE51:
 26092 1156 00BF     		.align	2
 26093              		.global	CAN_ClearITPendingBit
 26094              		.thumb
 26095              		.thumb_func
 26097              	CAN_ClearITPendingBit:
 26098              	.LFB52:
1571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *          This parameter can be one of the following values:
1577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval None
1590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 26099              		.loc 1 1592 0
 26100              		.cfi_startproc
 26101              		@ args = 0, pretend = 0, frame = 8
 26102              		@ frame_needed = 1, uses_anonymous_args = 0
 26103              		@ link register save eliminated.
 26104 1158 80B4     		push	{r7}
 26105              	.LCFI69:
 26106              		.cfi_def_cfa_offset 4
 26107 115a 83B0     		sub	sp, sp, #12
 26108              	.LCFI70:
 26109              		.cfi_def_cfa_offset 16
 26110 115c 00AF     		add	r7, sp, #0
 26111              		.cfi_offset 7, -4
 26112              	.LCFI71:
 26113              		.cfi_def_cfa_register 7
 26114 115e 7860     		str	r0, [r7, #4]
 26115 1160 3960     		str	r1, [r7, #0]
1593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   /* Check the parameters */
1594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (CAN_IT)
 26116              		.loc 1 1597 0
 26117 1162 3B68     		ldr	r3, [r7, #0]
 26118 1164 B3F5807F 		cmp	r3, #256
 26119 1168 4CD0     		beq	.L162
 26120 116a B3F5807F 		cmp	r3, #256
 26121 116e 0DD8     		bhi	.L169
 26122 1170 082B     		cmp	r3, #8
 26123 1172 2ED0     		beq	.L159
 26124 1174 082B     		cmp	r3, #8
 26125 1176 04D8     		bhi	.L170
 26126 1178 012B     		cmp	r3, #1
 26127 117a 1ED0     		beq	.L157
 26128 117c 042B     		cmp	r3, #4
 26129 117e 23D0     		beq	.L158
1598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_TME:
1600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_FF0:
1604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_FOV0:
1608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_FF1:
1612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_FOV1:
1616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_WKU:
1620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_SLK:
1624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_EWG:
1628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_EPV:
1633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_BOF:
1638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        break;
1642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_LEC:
1643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /*  Clear LEC bits */
1644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->ESR = RESET; 
1645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
1648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     case CAN_IT_ERR:
1649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /*Clear LEC bits */
1650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->ESR = RESET; 
1651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        break;
1655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     default:
1656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        break;
 26130              		.loc 1 1656 0
 26131 1180 61E0     		b	.L155
 26132              	.L170:
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (CAN_IT)
 26133              		.loc 1 1597 0
 26134 1182 202B     		cmp	r3, #32
 26135 1184 2AD0     		beq	.L160
 26136 1186 402B     		cmp	r3, #64
 26137 1188 2DD0     		beq	.L161
 26138              		.loc 1 1656 0
 26139 118a 5CE0     		b	.L155
 26140              	.L169:
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (CAN_IT)
 26141              		.loc 1 1597 0
 26142 118c B3F5006F 		cmp	r3, #2048
 26143 1190 47D0     		beq	.L165
 26144 1192 B3F5006F 		cmp	r3, #2048
 26145 1196 06D8     		bhi	.L171
 26146 1198 B3F5007F 		cmp	r3, #512
 26147 119c 37D0     		beq	.L163
 26148 119e B3F5806F 		cmp	r3, #1024
 26149 11a2 39D0     		beq	.L164
 26150              		.loc 1 1656 0
 26151 11a4 4FE0     		b	.L155
 26152              	.L171:
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   switch (CAN_IT)
 26153              		.loc 1 1597 0
 26154 11a6 B3F5803F 		cmp	r3, #65536
 26155 11aa 21D0     		beq	.L167
 26156 11ac B3F5003F 		cmp	r3, #131072
 26157 11b0 23D0     		beq	.L168
 26158 11b2 B3F5004F 		cmp	r3, #32768
 26159 11b6 3DD0     		beq	.L166
 26160              		.loc 1 1656 0
 26161 11b8 45E0     		b	.L155
 26162              	.L157:
1601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 26163              		.loc 1 1601 0
 26164 11ba 7A68     		ldr	r2, [r7, #4]
 26165 11bc 40F20113 		movw	r3, #257
 26166 11c0 C0F20103 		movt	r3, 1
 26167 11c4 9360     		str	r3, [r2, #8]
1602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26168              		.loc 1 1602 0
 26169 11c6 3EE0     		b	.L155
 26170              	.L158:
1605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 26171              		.loc 1 1605 0
 26172 11c8 7B68     		ldr	r3, [r7, #4]
 26173 11ca 4FF00802 		mov	r2, #8
 26174 11ce DA60     		str	r2, [r3, #12]
1606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26175              		.loc 1 1606 0
 26176 11d0 39E0     		b	.L155
 26177              	.L159:
1609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 26178              		.loc 1 1609 0
 26179 11d2 7B68     		ldr	r3, [r7, #4]
 26180 11d4 4FF01002 		mov	r2, #16
 26181 11d8 DA60     		str	r2, [r3, #12]
1610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26182              		.loc 1 1610 0
 26183 11da 34E0     		b	.L155
 26184              	.L160:
1613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 26185              		.loc 1 1613 0
 26186 11dc 7B68     		ldr	r3, [r7, #4]
 26187 11de 4FF00802 		mov	r2, #8
 26188 11e2 1A61     		str	r2, [r3, #16]
1614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26189              		.loc 1 1614 0
 26190 11e4 2FE0     		b	.L155
 26191              	.L161:
1617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 26192              		.loc 1 1617 0
 26193 11e6 7B68     		ldr	r3, [r7, #4]
 26194 11e8 4FF01002 		mov	r2, #16
 26195 11ec 1A61     		str	r2, [r3, #16]
1618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26196              		.loc 1 1618 0
 26197 11ee 2AE0     		b	.L155
 26198              	.L167:
1621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 26199              		.loc 1 1621 0
 26200 11f0 7B68     		ldr	r3, [r7, #4]
 26201 11f2 4FF00802 		mov	r2, #8
 26202 11f6 5A60     		str	r2, [r3, #4]
1622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26203              		.loc 1 1622 0
 26204 11f8 25E0     		b	.L155
 26205              	.L168:
1625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 26206              		.loc 1 1625 0
 26207 11fa 7B68     		ldr	r3, [r7, #4]
 26208 11fc 4FF01002 		mov	r2, #16
 26209 1200 5A60     		str	r2, [r3, #4]
1626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26210              		.loc 1 1626 0
 26211 1202 20E0     		b	.L155
 26212              	.L162:
1629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 26213              		.loc 1 1629 0
 26214 1204 7B68     		ldr	r3, [r7, #4]
 26215 1206 4FF00402 		mov	r2, #4
 26216 120a 5A60     		str	r2, [r3, #4]
1631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26217              		.loc 1 1631 0
 26218 120c 1BE0     		b	.L155
 26219              	.L163:
1634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 26220              		.loc 1 1634 0
 26221 120e 7B68     		ldr	r3, [r7, #4]
 26222 1210 4FF00402 		mov	r2, #4
 26223 1214 5A60     		str	r2, [r3, #4]
1636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26224              		.loc 1 1636 0
 26225 1216 16E0     		b	.L155
 26226              	.L164:
1639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 26227              		.loc 1 1639 0
 26228 1218 7B68     		ldr	r3, [r7, #4]
 26229 121a 4FF00402 		mov	r2, #4
 26230 121e 5A60     		str	r2, [r3, #4]
1641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        break;
 26231              		.loc 1 1641 0
 26232 1220 11E0     		b	.L155
 26233              	.L165:
1644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->ESR = RESET; 
 26234              		.loc 1 1644 0
 26235 1222 7B68     		ldr	r3, [r7, #4]
 26236 1224 4FF00002 		mov	r2, #0
 26237 1228 9A61     		str	r2, [r3, #24]
1646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 26238              		.loc 1 1646 0
 26239 122a 7B68     		ldr	r3, [r7, #4]
 26240 122c 4FF00402 		mov	r2, #4
 26241 1230 5A60     		str	r2, [r3, #4]
1647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       break;
 26242              		.loc 1 1647 0
 26243 1232 08E0     		b	.L155
 26244              	.L166:
1650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->ESR = RESET; 
 26245              		.loc 1 1650 0
 26246 1234 7B68     		ldr	r3, [r7, #4]
 26247 1236 4FF00002 		mov	r2, #0
 26248 123a 9A61     		str	r2, [r3, #24]
1652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 26249              		.loc 1 1652 0
 26250 123c 7B68     		ldr	r3, [r7, #4]
 26251 123e 4FF00402 		mov	r2, #4
 26252 1242 5A60     		str	r2, [r3, #4]
1654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****        break;
 26253              		.loc 1 1654 0
 26254 1244 00BF     		nop
 26255              	.L155:
1657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****    }
1658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 26256              		.loc 1 1658 0
 26257 1246 07F10C07 		add	r7, r7, #12
 26258 124a BD46     		mov	sp, r7
 26259 124c 80BC     		pop	{r7}
 26260 124e 7047     		bx	lr
 26261              		.cfi_endproc
 26262              	.LFE52:
 26264              		.align	2
 26265              		.thumb
 26266              		.thumb_func
 26268              	CheckITStatus:
 26269              	.LFB53:
1659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****  /**
1660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @}
1661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** 
1663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** /**
1664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   */
1669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** {
 26270              		.loc 1 1670 0
 26271              		.cfi_startproc
 26272              		@ args = 0, pretend = 0, frame = 16
 26273              		@ frame_needed = 1, uses_anonymous_args = 0
 26274              		@ link register save eliminated.
 26275 1250 80B4     		push	{r7}
 26276              	.LCFI72:
 26277              		.cfi_def_cfa_offset 4
 26278 1252 85B0     		sub	sp, sp, #20
 26279              	.LCFI73:
 26280              		.cfi_def_cfa_offset 24
 26281 1254 00AF     		add	r7, sp, #0
 26282              		.cfi_offset 7, -4
 26283              	.LCFI74:
 26284              		.cfi_def_cfa_register 7
 26285 1256 7860     		str	r0, [r7, #4]
 26286 1258 3960     		str	r1, [r7, #0]
1671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   ITStatus pendingbitstatus = RESET;
 26287              		.loc 1 1671 0
 26288 125a 4FF00003 		mov	r3, #0
 26289 125e FB73     		strb	r3, [r7, #15]
1672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   
1673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 26290              		.loc 1 1673 0
 26291 1260 7A68     		ldr	r2, [r7, #4]
 26292 1262 3B68     		ldr	r3, [r7, #0]
 26293 1264 02EA0303 		and	r3, r2, r3
 26294 1268 002B     		cmp	r3, #0
 26295 126a 03D0     		beq	.L174
1674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* CAN_IT is set */
1676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     pendingbitstatus = SET;
 26296              		.loc 1 1676 0
 26297 126c 4FF00103 		mov	r3, #1
 26298 1270 FB73     		strb	r3, [r7, #15]
 26299 1272 02E0     		b	.L175
 26300              	.L174:
1677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   else
1679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   {
1680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     /* CAN_IT is reset */
1681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****     pendingbitstatus = RESET;
 26301              		.loc 1 1681 0
 26302 1274 4FF00003 		mov	r3, #0
 26303 1278 FB73     		strb	r3, [r7, #15]
 26304              	.L175:
1682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   }
1683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c ****   return pendingbitstatus;
 26305              		.loc 1 1683 0
 26306 127a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_can.c **** }
 26307              		.loc 1 1684 0
 26308 127c 1846     		mov	r0, r3
 26309 127e 07F11407 		add	r7, r7, #20
 26310 1282 BD46     		mov	sp, r7
 26311 1284 80BC     		pop	{r7}
 26312 1286 7047     		bx	lr
 26313              		.cfi_endproc
 26314              	.LFE53:
 26316              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_can.c
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:23400  .text:00000000 $t
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:23405  .text:00000000 CAN_DeInit
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:23460  .text:00000050 CAN_Init
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:23741  .text:00000218 CAN_FilterInit
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:23983  .text:00000440 CAN_StructInit
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24058  .text:000004ac CAN_SlaveStartBank
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24125  .text:0000053c CAN_DBGFreeze
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24177  .text:00000574 CAN_TTComModeCmd
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24265  .text:0000060c CAN_Transmit
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24528  .text:00000810 CAN_TransmitStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24697  .text:00000924 CAN_CancelTransmit
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24770  .text:00000978 CAN_Receive
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:24986  .text:00000b28 CAN_FIFORelease
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25038  .text:00000b60 CAN_MessagePending
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25105  .text:00000bb0 CAN_OperatingModeRequest
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25288  .text:00000cc4 CAN_Sleep
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25342  .text:00000d04 CAN_WakeUp
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25417  .text:00000d60 CAN_GetLastErrorCode
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25460  .text:00000d88 CAN_GetReceiveErrorCounter
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25502  .text:00000db0 CAN_GetLSBTransmitErrorCounter
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25545  .text:00000ddc CAN_ITConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25601  .text:00000e1c CAN_GetFlagStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25753  .text:00000f20 CAN_ClearFlag
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:25843  .text:00000f9c CAN_GetITStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:26268  .text:00001250 CheckITStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLYVx1.s:26097  .text:00001158 CAN_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
