   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f2xx_tim.c"
  23              	.Ltext0:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c"
 23376              		.align	2
 23377              		.global	TIM_DeInit
 23378              		.thumb
 23379              		.thumb_func
 23381              	TIM_DeInit:
 23382              	.LFB29:
   1:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @file    stm32f2xx_tim.c
   4:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - TimeBase management
  10:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Output Compare management
  11:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Input Capture management
  12:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Clocks management
  15:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Synchronization management
  16:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Specific interface management
  17:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *              
  19:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  @verbatim
  20:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  
  21:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          ===================================================================
  22:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                 How to use this driver
  23:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          ===================================================================
  24:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          of all STM32F2xx devices.
  26:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   
  28:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 
  40:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             compare mode: 
  43:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   
  54:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             Input Capture mode:
  57:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   
  62:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                              
  69:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Get flags status
  72:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *              
  77:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         
  82:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
  89:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         
  94:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   
  97:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  @endverbatim
  98:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *    
  99:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
 100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @attention
 101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
 102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
 109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
 111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #include "stm32f2xx_tim.h"
 115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #include "stm32f2xx_rcc.h"
 116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
 118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM 
 122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
 158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
 159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
 160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        TimeBase management functions
 161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
 162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
 164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
 166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                     
 170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           with the corresponding configuration
 174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              
 181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
 185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23383              		.loc 1 195 0
 23384              		.cfi_startproc
 23385              		@ args = 0, pretend = 0, frame = 8
 23386              		@ frame_needed = 1, uses_anonymous_args = 0
 23387 0000 80B5     		push	{r7, lr}
 23388              	.LCFI0:
 23389              		.cfi_def_cfa_offset 8
 23390 0002 82B0     		sub	sp, sp, #8
 23391              	.LCFI1:
 23392              		.cfi_def_cfa_offset 16
 23393 0004 00AF     		add	r7, sp, #0
 23394              		.cfi_offset 14, -4
 23395              		.cfi_offset 7, -8
 23396              	.LCFI2:
 23397              		.cfi_def_cfa_register 7
 23398 0006 7860     		str	r0, [r7, #4]
 196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIMx == TIM1)
 23399              		.loc 1 199 0
 23400 0008 7A68     		ldr	r2, [r7, #4]
 23401 000a 4FF00003 		mov	r3, #0
 23402 000e C4F20103 		movt	r3, 16385
 23403 0012 9A42     		cmp	r2, r3
 23404 0014 0CD1     		bne	.L2
 200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 23405              		.loc 1 201 0
 23406 0016 4FF00100 		mov	r0, #1
 23407 001a 4FF00101 		mov	r1, #1
 23408 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 23409              		.loc 1 202 0
 23410 0022 4FF00100 		mov	r0, #1
 23411 0026 4FF00001 		mov	r1, #0
 23412 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 23413 002e FFE0     		b	.L1
 23414              	.L2:
 203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   } 
 204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM2) 
 23415              		.loc 1 204 0
 23416 0030 7B68     		ldr	r3, [r7, #4]
 23417 0032 B3F1804F 		cmp	r3, #1073741824
 23418 0036 0CD1     		bne	.L4
 205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {     
 206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 23419              		.loc 1 206 0
 23420 0038 4FF00100 		mov	r0, #1
 23421 003c 4FF00101 		mov	r1, #1
 23422 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 23423              		.loc 1 207 0
 23424 0044 4FF00100 		mov	r0, #1
 23425 0048 4FF00001 		mov	r1, #0
 23426 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23427 0050 EEE0     		b	.L1
 23428              	.L4:
 208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM3)
 23429              		.loc 1 209 0
 23430 0052 7A68     		ldr	r2, [r7, #4]
 23431 0054 4FF48063 		mov	r3, #1024
 23432 0058 C4F20003 		movt	r3, 16384
 23433 005c 9A42     		cmp	r2, r3
 23434 005e 0CD1     		bne	.L5
 210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 23435              		.loc 1 211 0
 23436 0060 4FF00200 		mov	r0, #2
 23437 0064 4FF00101 		mov	r1, #1
 23438 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 23439              		.loc 1 212 0
 23440 006c 4FF00200 		mov	r0, #2
 23441 0070 4FF00001 		mov	r1, #0
 23442 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23443 0078 DAE0     		b	.L1
 23444              	.L5:
 213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM4)
 23445              		.loc 1 214 0
 23446 007a 7A68     		ldr	r2, [r7, #4]
 23447 007c 4FF40063 		mov	r3, #2048
 23448 0080 C4F20003 		movt	r3, 16384
 23449 0084 9A42     		cmp	r2, r3
 23450 0086 0CD1     		bne	.L6
 215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 23451              		.loc 1 216 0
 23452 0088 4FF00400 		mov	r0, #4
 23453 008c 4FF00101 		mov	r1, #1
 23454 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 23455              		.loc 1 217 0
 23456 0094 4FF00400 		mov	r0, #4
 23457 0098 4FF00001 		mov	r1, #0
 23458 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23459 00a0 C6E0     		b	.L1
 23460              	.L6:
 218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM5)
 23461              		.loc 1 219 0
 23462 00a2 7A68     		ldr	r2, [r7, #4]
 23463 00a4 4FF44063 		mov	r3, #3072
 23464 00a8 C4F20003 		movt	r3, 16384
 23465 00ac 9A42     		cmp	r2, r3
 23466 00ae 0CD1     		bne	.L7
 220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 23467              		.loc 1 221 0
 23468 00b0 4FF00800 		mov	r0, #8
 23469 00b4 4FF00101 		mov	r1, #1
 23470 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 23471              		.loc 1 222 0
 23472 00bc 4FF00800 		mov	r0, #8
 23473 00c0 4FF00001 		mov	r1, #0
 23474 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23475 00c8 B2E0     		b	.L1
 23476              	.L7:
 223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM6)  
 23477              		.loc 1 224 0
 23478 00ca 7A68     		ldr	r2, [r7, #4]
 23479 00cc 4FF48053 		mov	r3, #4096
 23480 00d0 C4F20003 		movt	r3, 16384
 23481 00d4 9A42     		cmp	r2, r3
 23482 00d6 0CD1     		bne	.L8
 225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {    
 226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 23483              		.loc 1 226 0
 23484 00d8 4FF01000 		mov	r0, #16
 23485 00dc 4FF00101 		mov	r1, #1
 23486 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 23487              		.loc 1 227 0
 23488 00e4 4FF01000 		mov	r0, #16
 23489 00e8 4FF00001 		mov	r1, #0
 23490 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23491 00f0 9EE0     		b	.L1
 23492              	.L8:
 228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM7)
 23493              		.loc 1 229 0
 23494 00f2 7A68     		ldr	r2, [r7, #4]
 23495 00f4 4FF4A053 		mov	r3, #5120
 23496 00f8 C4F20003 		movt	r3, 16384
 23497 00fc 9A42     		cmp	r2, r3
 23498 00fe 0CD1     		bne	.L9
 230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 23499              		.loc 1 231 0
 23500 0100 4FF02000 		mov	r0, #32
 23501 0104 4FF00101 		mov	r1, #1
 23502 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 23503              		.loc 1 232 0
 23504 010c 4FF02000 		mov	r0, #32
 23505 0110 4FF00001 		mov	r1, #0
 23506 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23507 0118 8AE0     		b	.L1
 23508              	.L9:
 233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM8)
 23509              		.loc 1 234 0
 23510 011a 7A68     		ldr	r2, [r7, #4]
 23511 011c 4FF48063 		mov	r3, #1024
 23512 0120 C4F20103 		movt	r3, 16385
 23513 0124 9A42     		cmp	r2, r3
 23514 0126 0CD1     		bne	.L10
 235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 23515              		.loc 1 236 0
 23516 0128 4FF00200 		mov	r0, #2
 23517 012c 4FF00101 		mov	r1, #1
 23518 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 23519              		.loc 1 237 0
 23520 0134 4FF00200 		mov	r0, #2
 23521 0138 4FF00001 		mov	r1, #0
 23522 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 23523 0140 76E0     		b	.L1
 23524              	.L10:
 238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM9)
 23525              		.loc 1 239 0
 23526 0142 7A68     		ldr	r2, [r7, #4]
 23527 0144 4FF48043 		mov	r3, #16384
 23528 0148 C4F20103 		movt	r3, 16385
 23529 014c 9A42     		cmp	r2, r3
 23530 014e 0CD1     		bne	.L11
 240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 23531              		.loc 1 241 0
 23532 0150 4FF48030 		mov	r0, #65536
 23533 0154 4FF00101 		mov	r1, #1
 23534 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 23535              		.loc 1 242 0
 23536 015c 4FF48030 		mov	r0, #65536
 23537 0160 4FF00001 		mov	r1, #0
 23538 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 23539 0168 62E0     		b	.L1
 23540              	.L11:
 243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    }  
 244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM10)
 23541              		.loc 1 244 0
 23542 016a 7A68     		ldr	r2, [r7, #4]
 23543 016c 4FF48843 		mov	r3, #17408
 23544 0170 C4F20103 		movt	r3, 16385
 23545 0174 9A42     		cmp	r2, r3
 23546 0176 0CD1     		bne	.L12
 245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 23547              		.loc 1 246 0
 23548 0178 4FF40030 		mov	r0, #131072
 23549 017c 4FF00101 		mov	r1, #1
 23550 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 23551              		.loc 1 247 0
 23552 0184 4FF40030 		mov	r0, #131072
 23553 0188 4FF00001 		mov	r1, #0
 23554 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 23555 0190 4EE0     		b	.L1
 23556              	.L12:
 248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM11) 
 23557              		.loc 1 249 0
 23558 0192 7A68     		ldr	r2, [r7, #4]
 23559 0194 4FF49043 		mov	r3, #18432
 23560 0198 C4F20103 		movt	r3, 16385
 23561 019c 9A42     		cmp	r2, r3
 23562 019e 0CD1     		bne	.L13
 250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {     
 251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 23563              		.loc 1 251 0
 23564 01a0 4FF48020 		mov	r0, #262144
 23565 01a4 4FF00101 		mov	r1, #1
 23566 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 23567              		.loc 1 252 0
 23568 01ac 4FF48020 		mov	r0, #262144
 23569 01b0 4FF00001 		mov	r1, #0
 23570 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 23571 01b8 3AE0     		b	.L1
 23572              	.L13:
 253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM12)
 23573              		.loc 1 254 0
 23574 01ba 7A68     		ldr	r2, [r7, #4]
 23575 01bc 4FF4C053 		mov	r3, #6144
 23576 01c0 C4F20003 		movt	r3, 16384
 23577 01c4 9A42     		cmp	r2, r3
 23578 01c6 0CD1     		bne	.L14
 255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 23579              		.loc 1 256 0
 23580 01c8 4FF04000 		mov	r0, #64
 23581 01cc 4FF00101 		mov	r1, #1
 23582 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 23583              		.loc 1 257 0
 23584 01d4 4FF04000 		mov	r0, #64
 23585 01d8 4FF00001 		mov	r1, #0
 23586 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23587 01e0 26E0     		b	.L1
 23588              	.L14:
 258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM13) 
 23589              		.loc 1 259 0
 23590 01e2 7A68     		ldr	r2, [r7, #4]
 23591 01e4 4FF4E053 		mov	r3, #7168
 23592 01e8 C4F20003 		movt	r3, 16384
 23593 01ec 9A42     		cmp	r2, r3
 23594 01ee 0CD1     		bne	.L15
 260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {       
 261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 23595              		.loc 1 261 0
 23596 01f0 4FF08000 		mov	r0, #128
 23597 01f4 4FF00101 		mov	r1, #1
 23598 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 23599              		.loc 1 262 0
 23600 01fc 4FF08000 		mov	r0, #128
 23601 0200 4FF00001 		mov	r1, #0
 23602 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23603 0208 12E0     		b	.L1
 23604              	.L15:
 263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     if (TIMx == TIM14) 
 23605              		.loc 1 266 0
 23606 020a 7A68     		ldr	r2, [r7, #4]
 23607 020c 4FF40053 		mov	r3, #8192
 23608 0210 C4F20003 		movt	r3, 16384
 23609 0214 9A42     		cmp	r2, r3
 23610 0216 0BD1     		bne	.L1
 267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     {     
 268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 23611              		.loc 1 268 0
 23612 0218 4FF48070 		mov	r0, #256
 23613 021c 4FF00101 		mov	r1, #1
 23614 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 23615              		.loc 1 269 0
 23616 0224 4FF48070 		mov	r0, #256
 23617 0228 4FF00001 		mov	r1, #0
 23618 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 23619              	.L1:
 270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     }   
 271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23620              		.loc 1 272 0
 23621 0230 07F10807 		add	r7, r7, #8
 23622 0234 BD46     		mov	sp, r7
 23623 0236 80BD     		pop	{r7, pc}
 23624              		.cfi_endproc
 23625              	.LFE29:
 23627              		.align	2
 23628              		.global	TIM_TimeBaseInit
 23629              		.thumb
 23630              		.thumb_func
 23632              	TIM_TimeBaseInit:
 23633              	.LFB30:
 273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23634              		.loc 1 283 0
 23635              		.cfi_startproc
 23636              		@ args = 0, pretend = 0, frame = 16
 23637              		@ frame_needed = 1, uses_anonymous_args = 0
 23638              		@ link register save eliminated.
 23639 0238 80B4     		push	{r7}
 23640              	.LCFI3:
 23641              		.cfi_def_cfa_offset 4
 23642 023a 85B0     		sub	sp, sp, #20
 23643              	.LCFI4:
 23644              		.cfi_def_cfa_offset 24
 23645 023c 00AF     		add	r7, sp, #0
 23646              		.cfi_offset 7, -4
 23647              	.LCFI5:
 23648              		.cfi_def_cfa_register 7
 23649 023e 7860     		str	r0, [r7, #4]
 23650 0240 3960     		str	r1, [r7, #0]
 284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpcr1 = 0;
 23651              		.loc 1 284 0
 23652 0242 4FF00003 		mov	r3, #0
 23653 0246 FB81     		strh	r3, [r7, #14]	@ movhi
 285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 23654              		.loc 1 291 0
 23655 0248 7B68     		ldr	r3, [r7, #4]
 23656 024a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 23657 024c FB81     		strh	r3, [r7, #14]	@ movhi
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 23658              		.loc 1 293 0
 23659 024e 7A68     		ldr	r2, [r7, #4]
 23660 0250 4FF00003 		mov	r3, #0
 23661 0254 C4F20103 		movt	r3, 16385
 23662 0258 9A42     		cmp	r2, r3
 23663 025a 1FD0     		beq	.L17
 23664              		.loc 1 293 0 is_stmt 0 discriminator 1
 23665 025c 7A68     		ldr	r2, [r7, #4]
 23666 025e 4FF48063 		mov	r3, #1024
 23667 0262 C4F20103 		movt	r3, 16385
 23668 0266 9A42     		cmp	r2, r3
 23669 0268 18D0     		beq	.L17
 23670 026a 7B68     		ldr	r3, [r7, #4]
 23671 026c B3F1804F 		cmp	r3, #1073741824
 23672 0270 14D0     		beq	.L17
 294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 23673              		.loc 1 294 0 is_stmt 1
 23674 0272 7A68     		ldr	r2, [r7, #4]
 23675 0274 4FF48063 		mov	r3, #1024
 23676 0278 C4F20003 		movt	r3, 16384
 23677 027c 9A42     		cmp	r2, r3
 23678 027e 0DD0     		beq	.L17
 23679              		.loc 1 294 0 is_stmt 0 discriminator 1
 23680 0280 7A68     		ldr	r2, [r7, #4]
 23681 0282 4FF40063 		mov	r3, #2048
 23682 0286 C4F20003 		movt	r3, 16384
 23683 028a 9A42     		cmp	r2, r3
 23684 028c 06D0     		beq	.L17
 295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 23685              		.loc 1 295 0 is_stmt 1
 23686 028e 7A68     		ldr	r2, [r7, #4]
 23687 0290 4FF44063 		mov	r3, #3072
 23688 0294 C4F20003 		movt	r3, 16384
 23689 0298 9A42     		cmp	r2, r3
 23690 029a 09D1     		bne	.L18
 23691              	.L17:
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 23692              		.loc 1 298 0
 23693 029c FB89     		ldrh	r3, [r7, #14]	@ movhi
 23694 029e 23F07003 		bic	r3, r3, #112
 23695 02a2 FB81     		strh	r3, [r7, #14]	@ movhi
 299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 23696              		.loc 1 299 0
 23697 02a4 3B68     		ldr	r3, [r7, #0]
 23698 02a6 5A88     		ldrh	r2, [r3, #2]
 23699 02a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 23700 02aa 42EA0303 		orr	r3, r2, r3
 23701 02ae FB81     		strh	r3, [r7, #14]	@ movhi
 23702              	.L18:
 300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 23703              		.loc 1 302 0
 23704 02b0 7A68     		ldr	r2, [r7, #4]
 23705 02b2 4FF48053 		mov	r3, #4096
 23706 02b6 C4F20003 		movt	r3, 16384
 23707 02ba 9A42     		cmp	r2, r3
 23708 02bc 10D0     		beq	.L19
 23709              		.loc 1 302 0 is_stmt 0 discriminator 1
 23710 02be 7A68     		ldr	r2, [r7, #4]
 23711 02c0 4FF4A053 		mov	r3, #5120
 23712 02c4 C4F20003 		movt	r3, 16384
 23713 02c8 9A42     		cmp	r2, r3
 23714 02ca 09D0     		beq	.L19
 303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the clock division */
 305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 23715              		.loc 1 305 0 is_stmt 1
 23716 02cc FB89     		ldrh	r3, [r7, #14]	@ movhi
 23717 02ce 23F44073 		bic	r3, r3, #768
 23718 02d2 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 23719              		.loc 1 306 0
 23720 02d4 3B68     		ldr	r3, [r7, #0]
 23721 02d6 1A89     		ldrh	r2, [r3, #8]
 23722 02d8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 23723 02da 42EA0303 		orr	r3, r2, r3
 23724 02de FB81     		strh	r3, [r7, #14]	@ movhi
 23725              	.L19:
 307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 = tmpcr1;
 23726              		.loc 1 309 0
 23727 02e0 7B68     		ldr	r3, [r7, #4]
 23728 02e2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 23729 02e4 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 23730              		.loc 1 312 0
 23731 02e6 3B68     		ldr	r3, [r7, #0]
 23732 02e8 5A68     		ldr	r2, [r3, #4]
 23733 02ea 7B68     		ldr	r3, [r7, #4]
 23734 02ec DA62     		str	r2, [r3, #44]
 313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 23735              		.loc 1 315 0
 23736 02ee 3B68     		ldr	r3, [r7, #0]
 23737 02f0 1A88     		ldrh	r2, [r3, #0]
 23738 02f2 7B68     		ldr	r3, [r7, #4]
 23739 02f4 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 23740              		.loc 1 317 0
 23741 02f6 7A68     		ldr	r2, [r7, #4]
 23742 02f8 4FF00003 		mov	r3, #0
 23743 02fc C4F20103 		movt	r3, 16385
 23744 0300 9A42     		cmp	r2, r3
 23745 0302 06D0     		beq	.L20
 23746              		.loc 1 317 0 is_stmt 0 discriminator 1
 23747 0304 7A68     		ldr	r2, [r7, #4]
 23748 0306 4FF48063 		mov	r3, #1024
 23749 030a C4F20103 		movt	r3, 16385
 23750 030e 9A42     		cmp	r2, r3
 23751 0310 04D1     		bne	.L21
 23752              	.L20:
 318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 23753              		.loc 1 320 0 is_stmt 1
 23754 0312 3B68     		ldr	r3, [r7, #0]
 23755 0314 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 23756 0316 1A46     		mov	r2, r3
 23757 0318 7B68     		ldr	r3, [r7, #4]
 23758 031a 1A86     		strh	r2, [r3, #48]	@ movhi
 23759              	.L21:
 321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 23760              		.loc 1 325 0
 23761 031c 7B68     		ldr	r3, [r7, #4]
 23762 031e 4FF00102 		mov	r2, #1
 23763 0322 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23764              		.loc 1 326 0
 23765 0324 07F11407 		add	r7, r7, #20
 23766 0328 BD46     		mov	sp, r7
 23767 032a 80BC     		pop	{r7}
 23768 032c 7047     		bx	lr
 23769              		.cfi_endproc
 23770              	.LFE30:
 23772 032e 00BF     		.align	2
 23773              		.global	TIM_TimeBaseStructInit
 23774              		.thumb
 23775              		.thumb_func
 23777              	TIM_TimeBaseStructInit:
 23778              	.LFB31:
 327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23779              		.loc 1 335 0
 23780              		.cfi_startproc
 23781              		@ args = 0, pretend = 0, frame = 8
 23782              		@ frame_needed = 1, uses_anonymous_args = 0
 23783              		@ link register save eliminated.
 23784 0330 80B4     		push	{r7}
 23785              	.LCFI6:
 23786              		.cfi_def_cfa_offset 4
 23787 0332 83B0     		sub	sp, sp, #12
 23788              	.LCFI7:
 23789              		.cfi_def_cfa_offset 16
 23790 0334 00AF     		add	r7, sp, #0
 23791              		.cfi_offset 7, -4
 23792              	.LCFI8:
 23793              		.cfi_def_cfa_register 7
 23794 0336 7860     		str	r0, [r7, #4]
 336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
 337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 23795              		.loc 1 337 0
 23796 0338 7B68     		ldr	r3, [r7, #4]
 23797 033a 4FF0FF32 		mov	r2, #-1
 23798 033e 5A60     		str	r2, [r3, #4]
 338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 23799              		.loc 1 338 0
 23800 0340 7B68     		ldr	r3, [r7, #4]
 23801 0342 4FF00002 		mov	r2, #0
 23802 0346 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 23803              		.loc 1 339 0
 23804 0348 7B68     		ldr	r3, [r7, #4]
 23805 034a 4FF00002 		mov	r2, #0
 23806 034e 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 23807              		.loc 1 340 0
 23808 0350 7B68     		ldr	r3, [r7, #4]
 23809 0352 4FF00002 		mov	r2, #0
 23810 0356 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 23811              		.loc 1 341 0
 23812 0358 7B68     		ldr	r3, [r7, #4]
 23813 035a 4FF00002 		mov	r2, #0
 23814 035e 9A72     		strb	r2, [r3, #10]
 342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23815              		.loc 1 342 0
 23816 0360 07F10C07 		add	r7, r7, #12
 23817 0364 BD46     		mov	sp, r7
 23818 0366 80BC     		pop	{r7}
 23819 0368 7047     		bx	lr
 23820              		.cfi_endproc
 23821              	.LFE31:
 23823 036a 00BF     		.align	2
 23824              		.global	TIM_PrescalerConfig
 23825              		.thumb
 23826              		.thumb_func
 23828              	TIM_PrescalerConfig:
 23829              	.LFB32:
 343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23830              		.loc 1 355 0
 23831              		.cfi_startproc
 23832              		@ args = 0, pretend = 0, frame = 8
 23833              		@ frame_needed = 1, uses_anonymous_args = 0
 23834              		@ link register save eliminated.
 23835 036c 80B4     		push	{r7}
 23836              	.LCFI9:
 23837              		.cfi_def_cfa_offset 4
 23838 036e 83B0     		sub	sp, sp, #12
 23839              	.LCFI10:
 23840              		.cfi_def_cfa_offset 16
 23841 0370 00AF     		add	r7, sp, #0
 23842              		.cfi_offset 7, -4
 23843              	.LCFI11:
 23844              		.cfi_def_cfa_register 7
 23845 0372 7860     		str	r0, [r7, #4]
 23846 0374 1346     		mov	r3, r2
 23847 0376 0A46     		mov	r2, r1	@ movhi
 23848 0378 7A80     		strh	r2, [r7, #2]	@ movhi
 23849 037a 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->PSC = Prescaler;
 23850              		.loc 1 360 0
 23851 037c 7B68     		ldr	r3, [r7, #4]
 23852 037e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 23853 0380 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 23854              		.loc 1 362 0
 23855 0382 7B68     		ldr	r3, [r7, #4]
 23856 0384 3A88     		ldrh	r2, [r7, #0]	@ movhi
 23857 0386 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23858              		.loc 1 363 0
 23859 0388 07F10C07 		add	r7, r7, #12
 23860 038c BD46     		mov	sp, r7
 23861 038e 80BC     		pop	{r7}
 23862 0390 7047     		bx	lr
 23863              		.cfi_endproc
 23864              	.LFE32:
 23866 0392 00BF     		.align	2
 23867              		.global	TIM_CounterModeConfig
 23868              		.thumb
 23869              		.thumb_func
 23871              	TIM_CounterModeConfig:
 23872              	.LFB33:
 364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23873              		.loc 1 378 0
 23874              		.cfi_startproc
 23875              		@ args = 0, pretend = 0, frame = 16
 23876              		@ frame_needed = 1, uses_anonymous_args = 0
 23877              		@ link register save eliminated.
 23878 0394 80B4     		push	{r7}
 23879              	.LCFI12:
 23880              		.cfi_def_cfa_offset 4
 23881 0396 85B0     		sub	sp, sp, #20
 23882              	.LCFI13:
 23883              		.cfi_def_cfa_offset 24
 23884 0398 00AF     		add	r7, sp, #0
 23885              		.cfi_offset 7, -4
 23886              	.LCFI14:
 23887              		.cfi_def_cfa_register 7
 23888 039a 7860     		str	r0, [r7, #4]
 23889 039c 0B46     		mov	r3, r1
 23890 039e 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpcr1 = 0;
 23891              		.loc 1 379 0
 23892 03a0 4FF00003 		mov	r3, #0
 23893 03a4 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 = TIMx->CR1;
 23894              		.loc 1 385 0
 23895 03a6 7B68     		ldr	r3, [r7, #4]
 23896 03a8 1B88     		ldrh	r3, [r3, #0]	@ movhi
 23897 03aa FB81     		strh	r3, [r7, #14]	@ movhi
 386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 23898              		.loc 1 388 0
 23899 03ac FB89     		ldrh	r3, [r7, #14]	@ movhi
 23900 03ae 23F07003 		bic	r3, r3, #112
 23901 03b2 FB81     		strh	r3, [r7, #14]	@ movhi
 389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 23902              		.loc 1 391 0
 23903 03b4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 23904 03b6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 23905 03b8 42EA0303 		orr	r3, r2, r3
 23906 03bc FB81     		strh	r3, [r7, #14]	@ movhi
 392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 = tmpcr1;
 23907              		.loc 1 394 0
 23908 03be 7B68     		ldr	r3, [r7, #4]
 23909 03c0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 23910 03c2 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23911              		.loc 1 395 0
 23912 03c4 07F11407 		add	r7, r7, #20
 23913 03c8 BD46     		mov	sp, r7
 23914 03ca 80BC     		pop	{r7}
 23915 03cc 7047     		bx	lr
 23916              		.cfi_endproc
 23917              	.LFE33:
 23919 03ce 00BF     		.align	2
 23920              		.global	TIM_SetCounter
 23921              		.thumb
 23922              		.thumb_func
 23924              	TIM_SetCounter:
 23925              	.LFB34:
 396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23926              		.loc 1 404 0
 23927              		.cfi_startproc
 23928              		@ args = 0, pretend = 0, frame = 8
 23929              		@ frame_needed = 1, uses_anonymous_args = 0
 23930              		@ link register save eliminated.
 23931 03d0 80B4     		push	{r7}
 23932              	.LCFI15:
 23933              		.cfi_def_cfa_offset 4
 23934 03d2 83B0     		sub	sp, sp, #12
 23935              	.LCFI16:
 23936              		.cfi_def_cfa_offset 16
 23937 03d4 00AF     		add	r7, sp, #0
 23938              		.cfi_offset 7, -4
 23939              	.LCFI17:
 23940              		.cfi_def_cfa_register 7
 23941 03d6 7860     		str	r0, [r7, #4]
 23942 03d8 3960     		str	r1, [r7, #0]
 405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CNT = Counter;
 23943              		.loc 1 409 0
 23944 03da 7B68     		ldr	r3, [r7, #4]
 23945 03dc 3A68     		ldr	r2, [r7, #0]
 23946 03de 5A62     		str	r2, [r3, #36]
 410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23947              		.loc 1 410 0
 23948 03e0 07F10C07 		add	r7, r7, #12
 23949 03e4 BD46     		mov	sp, r7
 23950 03e6 80BC     		pop	{r7}
 23951 03e8 7047     		bx	lr
 23952              		.cfi_endproc
 23953              	.LFE34:
 23955 03ea 00BF     		.align	2
 23956              		.global	TIM_SetAutoreload
 23957              		.thumb
 23958              		.thumb_func
 23960              	TIM_SetAutoreload:
 23961              	.LFB35:
 411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23962              		.loc 1 419 0
 23963              		.cfi_startproc
 23964              		@ args = 0, pretend = 0, frame = 8
 23965              		@ frame_needed = 1, uses_anonymous_args = 0
 23966              		@ link register save eliminated.
 23967 03ec 80B4     		push	{r7}
 23968              	.LCFI18:
 23969              		.cfi_def_cfa_offset 4
 23970 03ee 83B0     		sub	sp, sp, #12
 23971              	.LCFI19:
 23972              		.cfi_def_cfa_offset 16
 23973 03f0 00AF     		add	r7, sp, #0
 23974              		.cfi_offset 7, -4
 23975              	.LCFI20:
 23976              		.cfi_def_cfa_register 7
 23977 03f2 7860     		str	r0, [r7, #4]
 23978 03f4 3960     		str	r1, [r7, #0]
 420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->ARR = Autoreload;
 23979              		.loc 1 424 0
 23980 03f6 7B68     		ldr	r3, [r7, #4]
 23981 03f8 3A68     		ldr	r2, [r7, #0]
 23982 03fa DA62     		str	r2, [r3, #44]
 425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 23983              		.loc 1 425 0
 23984 03fc 07F10C07 		add	r7, r7, #12
 23985 0400 BD46     		mov	sp, r7
 23986 0402 80BC     		pop	{r7}
 23987 0404 7047     		bx	lr
 23988              		.cfi_endproc
 23989              	.LFE35:
 23991 0406 00BF     		.align	2
 23992              		.global	TIM_GetCounter
 23993              		.thumb
 23994              		.thumb_func
 23996              	TIM_GetCounter:
 23997              	.LFB36:
 426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Counter Register value
 431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 23998              		.loc 1 433 0
 23999              		.cfi_startproc
 24000              		@ args = 0, pretend = 0, frame = 8
 24001              		@ frame_needed = 1, uses_anonymous_args = 0
 24002              		@ link register save eliminated.
 24003 0408 80B4     		push	{r7}
 24004              	.LCFI21:
 24005              		.cfi_def_cfa_offset 4
 24006 040a 83B0     		sub	sp, sp, #12
 24007              	.LCFI22:
 24008              		.cfi_def_cfa_offset 16
 24009 040c 00AF     		add	r7, sp, #0
 24010              		.cfi_offset 7, -4
 24011              	.LCFI23:
 24012              		.cfi_def_cfa_register 7
 24013 040e 7860     		str	r0, [r7, #4]
 434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CNT;
 24014              		.loc 1 438 0
 24015 0410 7B68     		ldr	r3, [r7, #4]
 24016 0412 5B6A     		ldr	r3, [r3, #36]
 439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24017              		.loc 1 439 0
 24018 0414 1846     		mov	r0, r3
 24019 0416 07F10C07 		add	r7, r7, #12
 24020 041a BD46     		mov	sp, r7
 24021 041c 80BC     		pop	{r7}
 24022 041e 7047     		bx	lr
 24023              		.cfi_endproc
 24024              	.LFE36:
 24026              		.align	2
 24027              		.global	TIM_GetPrescaler
 24028              		.thumb
 24029              		.thumb_func
 24031              	TIM_GetPrescaler:
 24032              	.LFB37:
 440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24033              		.loc 1 447 0
 24034              		.cfi_startproc
 24035              		@ args = 0, pretend = 0, frame = 8
 24036              		@ frame_needed = 1, uses_anonymous_args = 0
 24037              		@ link register save eliminated.
 24038 0420 80B4     		push	{r7}
 24039              	.LCFI24:
 24040              		.cfi_def_cfa_offset 4
 24041 0422 83B0     		sub	sp, sp, #12
 24042              	.LCFI25:
 24043              		.cfi_def_cfa_offset 16
 24044 0424 00AF     		add	r7, sp, #0
 24045              		.cfi_offset 7, -4
 24046              	.LCFI26:
 24047              		.cfi_def_cfa_register 7
 24048 0426 7860     		str	r0, [r7, #4]
 448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->PSC;
 24049              		.loc 1 452 0
 24050 0428 7B68     		ldr	r3, [r7, #4]
 24051 042a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 24052 042c 9BB2     		uxth	r3, r3
 453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24053              		.loc 1 453 0
 24054 042e 1846     		mov	r0, r3
 24055 0430 07F10C07 		add	r7, r7, #12
 24056 0434 BD46     		mov	sp, r7
 24057 0436 80BC     		pop	{r7}
 24058 0438 7047     		bx	lr
 24059              		.cfi_endproc
 24060              	.LFE37:
 24062 043a 00BF     		.align	2
 24063              		.global	TIM_UpdateDisableConfig
 24064              		.thumb
 24065              		.thumb_func
 24067              	TIM_UpdateDisableConfig:
 24068              	.LFB38:
 454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24069              		.loc 1 463 0
 24070              		.cfi_startproc
 24071              		@ args = 0, pretend = 0, frame = 8
 24072              		@ frame_needed = 1, uses_anonymous_args = 0
 24073              		@ link register save eliminated.
 24074 043c 80B4     		push	{r7}
 24075              	.LCFI27:
 24076              		.cfi_def_cfa_offset 4
 24077 043e 83B0     		sub	sp, sp, #12
 24078              	.LCFI28:
 24079              		.cfi_def_cfa_offset 16
 24080 0440 00AF     		add	r7, sp, #0
 24081              		.cfi_offset 7, -4
 24082              	.LCFI29:
 24083              		.cfi_def_cfa_register 7
 24084 0442 7860     		str	r0, [r7, #4]
 24085 0444 0B46     		mov	r3, r1
 24086 0446 FB70     		strb	r3, [r7, #3]
 464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 24087              		.loc 1 468 0
 24088 0448 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24089 044a 002B     		cmp	r3, #0
 24090 044c 08D0     		beq	.L30
 469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 24091              		.loc 1 471 0
 24092 044e 7B68     		ldr	r3, [r7, #4]
 24093 0450 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24094 0452 9BB2     		uxth	r3, r3
 24095 0454 43F00203 		orr	r3, r3, #2
 24096 0458 9AB2     		uxth	r2, r3
 24097 045a 7B68     		ldr	r3, [r7, #4]
 24098 045c 1A80     		strh	r2, [r3, #0]	@ movhi
 24099 045e 07E0     		b	.L29
 24100              	.L30:
 472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 24101              		.loc 1 476 0
 24102 0460 7B68     		ldr	r3, [r7, #4]
 24103 0462 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24104 0464 9BB2     		uxth	r3, r3
 24105 0466 23F00203 		bic	r3, r3, #2
 24106 046a 9AB2     		uxth	r2, r3
 24107 046c 7B68     		ldr	r3, [r7, #4]
 24108 046e 1A80     		strh	r2, [r3, #0]	@ movhi
 24109              	.L29:
 477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24110              		.loc 1 478 0
 24111 0470 07F10C07 		add	r7, r7, #12
 24112 0474 BD46     		mov	sp, r7
 24113 0476 80BC     		pop	{r7}
 24114 0478 7047     		bx	lr
 24115              		.cfi_endproc
 24116              	.LFE38:
 24118 047a 00BF     		.align	2
 24119              		.global	TIM_UpdateRequestConfig
 24120              		.thumb
 24121              		.thumb_func
 24123              	TIM_UpdateRequestConfig:
 24124              	.LFB39:
 479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24125              		.loc 1 492 0
 24126              		.cfi_startproc
 24127              		@ args = 0, pretend = 0, frame = 8
 24128              		@ frame_needed = 1, uses_anonymous_args = 0
 24129              		@ link register save eliminated.
 24130 047c 80B4     		push	{r7}
 24131              	.LCFI30:
 24132              		.cfi_def_cfa_offset 4
 24133 047e 83B0     		sub	sp, sp, #12
 24134              	.LCFI31:
 24135              		.cfi_def_cfa_offset 16
 24136 0480 00AF     		add	r7, sp, #0
 24137              		.cfi_offset 7, -4
 24138              	.LCFI32:
 24139              		.cfi_def_cfa_register 7
 24140 0482 7860     		str	r0, [r7, #4]
 24141 0484 0B46     		mov	r3, r1
 24142 0486 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 24143              		.loc 1 497 0
 24144 0488 7B88     		ldrh	r3, [r7, #2]
 24145 048a 002B     		cmp	r3, #0
 24146 048c 08D0     		beq	.L33
 498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 24147              		.loc 1 500 0
 24148 048e 7B68     		ldr	r3, [r7, #4]
 24149 0490 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24150 0492 9BB2     		uxth	r3, r3
 24151 0494 43F00403 		orr	r3, r3, #4
 24152 0498 9AB2     		uxth	r2, r3
 24153 049a 7B68     		ldr	r3, [r7, #4]
 24154 049c 1A80     		strh	r2, [r3, #0]	@ movhi
 24155 049e 07E0     		b	.L32
 24156              	.L33:
 501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 24157              		.loc 1 505 0
 24158 04a0 7B68     		ldr	r3, [r7, #4]
 24159 04a2 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24160 04a4 9BB2     		uxth	r3, r3
 24161 04a6 23F00403 		bic	r3, r3, #4
 24162 04aa 9AB2     		uxth	r2, r3
 24163 04ac 7B68     		ldr	r3, [r7, #4]
 24164 04ae 1A80     		strh	r2, [r3, #0]	@ movhi
 24165              	.L32:
 506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24166              		.loc 1 507 0
 24167 04b0 07F10C07 		add	r7, r7, #12
 24168 04b4 BD46     		mov	sp, r7
 24169 04b6 80BC     		pop	{r7}
 24170 04b8 7047     		bx	lr
 24171              		.cfi_endproc
 24172              	.LFE39:
 24174 04ba 00BF     		.align	2
 24175              		.global	TIM_ARRPreloadConfig
 24176              		.thumb
 24177              		.thumb_func
 24179              	TIM_ARRPreloadConfig:
 24180              	.LFB40:
 508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24181              		.loc 1 517 0
 24182              		.cfi_startproc
 24183              		@ args = 0, pretend = 0, frame = 8
 24184              		@ frame_needed = 1, uses_anonymous_args = 0
 24185              		@ link register save eliminated.
 24186 04bc 80B4     		push	{r7}
 24187              	.LCFI33:
 24188              		.cfi_def_cfa_offset 4
 24189 04be 83B0     		sub	sp, sp, #12
 24190              	.LCFI34:
 24191              		.cfi_def_cfa_offset 16
 24192 04c0 00AF     		add	r7, sp, #0
 24193              		.cfi_offset 7, -4
 24194              	.LCFI35:
 24195              		.cfi_def_cfa_register 7
 24196 04c2 7860     		str	r0, [r7, #4]
 24197 04c4 0B46     		mov	r3, r1
 24198 04c6 FB70     		strb	r3, [r7, #3]
 518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 24199              		.loc 1 522 0
 24200 04c8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24201 04ca 002B     		cmp	r3, #0
 24202 04cc 08D0     		beq	.L36
 523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 24203              		.loc 1 525 0
 24204 04ce 7B68     		ldr	r3, [r7, #4]
 24205 04d0 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24206 04d2 9BB2     		uxth	r3, r3
 24207 04d4 43F08003 		orr	r3, r3, #128
 24208 04d8 9AB2     		uxth	r2, r3
 24209 04da 7B68     		ldr	r3, [r7, #4]
 24210 04dc 1A80     		strh	r2, [r3, #0]	@ movhi
 24211 04de 07E0     		b	.L35
 24212              	.L36:
 526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 24213              		.loc 1 530 0
 24214 04e0 7B68     		ldr	r3, [r7, #4]
 24215 04e2 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24216 04e4 9BB2     		uxth	r3, r3
 24217 04e6 23F08003 		bic	r3, r3, #128
 24218 04ea 9AB2     		uxth	r2, r3
 24219 04ec 7B68     		ldr	r3, [r7, #4]
 24220 04ee 1A80     		strh	r2, [r3, #0]	@ movhi
 24221              	.L35:
 531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24222              		.loc 1 532 0
 24223 04f0 07F10C07 		add	r7, r7, #12
 24224 04f4 BD46     		mov	sp, r7
 24225 04f6 80BC     		pop	{r7}
 24226 04f8 7047     		bx	lr
 24227              		.cfi_endproc
 24228              	.LFE40:
 24230 04fa 00BF     		.align	2
 24231              		.global	TIM_SelectOnePulseMode
 24232              		.thumb
 24233              		.thumb_func
 24235              	TIM_SelectOnePulseMode:
 24236              	.LFB41:
 533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24237              		.loc 1 544 0
 24238              		.cfi_startproc
 24239              		@ args = 0, pretend = 0, frame = 8
 24240              		@ frame_needed = 1, uses_anonymous_args = 0
 24241              		@ link register save eliminated.
 24242 04fc 80B4     		push	{r7}
 24243              	.LCFI36:
 24244              		.cfi_def_cfa_offset 4
 24245 04fe 83B0     		sub	sp, sp, #12
 24246              	.LCFI37:
 24247              		.cfi_def_cfa_offset 16
 24248 0500 00AF     		add	r7, sp, #0
 24249              		.cfi_offset 7, -4
 24250              	.LCFI38:
 24251              		.cfi_def_cfa_register 7
 24252 0502 7860     		str	r0, [r7, #4]
 24253 0504 0B46     		mov	r3, r1
 24254 0506 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 24255              		.loc 1 550 0
 24256 0508 7B68     		ldr	r3, [r7, #4]
 24257 050a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24258 050c 9BB2     		uxth	r3, r3
 24259 050e 23F00803 		bic	r3, r3, #8
 24260 0512 9AB2     		uxth	r2, r3
 24261 0514 7B68     		ldr	r3, [r7, #4]
 24262 0516 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 24263              		.loc 1 553 0
 24264 0518 7B68     		ldr	r3, [r7, #4]
 24265 051a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24266 051c 9AB2     		uxth	r2, r3
 24267 051e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 24268 0520 42EA0303 		orr	r3, r2, r3
 24269 0524 9AB2     		uxth	r2, r3
 24270 0526 7B68     		ldr	r3, [r7, #4]
 24271 0528 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24272              		.loc 1 554 0
 24273 052a 07F10C07 		add	r7, r7, #12
 24274 052e BD46     		mov	sp, r7
 24275 0530 80BC     		pop	{r7}
 24276 0532 7047     		bx	lr
 24277              		.cfi_endproc
 24278              	.LFE41:
 24280              		.align	2
 24281              		.global	TIM_SetClockDivision
 24282              		.thumb
 24283              		.thumb_func
 24285              	TIM_SetClockDivision:
 24286              	.LFB42:
 555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24287              		.loc 1 567 0
 24288              		.cfi_startproc
 24289              		@ args = 0, pretend = 0, frame = 8
 24290              		@ frame_needed = 1, uses_anonymous_args = 0
 24291              		@ link register save eliminated.
 24292 0534 80B4     		push	{r7}
 24293              	.LCFI39:
 24294              		.cfi_def_cfa_offset 4
 24295 0536 83B0     		sub	sp, sp, #12
 24296              	.LCFI40:
 24297              		.cfi_def_cfa_offset 16
 24298 0538 00AF     		add	r7, sp, #0
 24299              		.cfi_offset 7, -4
 24300              	.LCFI41:
 24301              		.cfi_def_cfa_register 7
 24302 053a 7860     		str	r0, [r7, #4]
 24303 053c 0B46     		mov	r3, r1
 24304 053e 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 24305              		.loc 1 573 0
 24306 0540 7B68     		ldr	r3, [r7, #4]
 24307 0542 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24308 0544 9BB2     		uxth	r3, r3
 24309 0546 23F44073 		bic	r3, r3, #768
 24310 054a 9AB2     		uxth	r2, r3
 24311 054c 7B68     		ldr	r3, [r7, #4]
 24312 054e 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the CKD value */
 576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 24313              		.loc 1 576 0
 24314 0550 7B68     		ldr	r3, [r7, #4]
 24315 0552 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24316 0554 9AB2     		uxth	r2, r3
 24317 0556 7B88     		ldrh	r3, [r7, #2]	@ movhi
 24318 0558 42EA0303 		orr	r3, r2, r3
 24319 055c 9AB2     		uxth	r2, r3
 24320 055e 7B68     		ldr	r3, [r7, #4]
 24321 0560 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24322              		.loc 1 577 0
 24323 0562 07F10C07 		add	r7, r7, #12
 24324 0566 BD46     		mov	sp, r7
 24325 0568 80BC     		pop	{r7}
 24326 056a 7047     		bx	lr
 24327              		.cfi_endproc
 24328              	.LFE42:
 24330              		.align	2
 24331              		.global	TIM_Cmd
 24332              		.thumb
 24333              		.thumb_func
 24335              	TIM_Cmd:
 24336              	.LFB43:
 578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24337              		.loc 1 587 0
 24338              		.cfi_startproc
 24339              		@ args = 0, pretend = 0, frame = 8
 24340              		@ frame_needed = 1, uses_anonymous_args = 0
 24341              		@ link register save eliminated.
 24342 056c 80B4     		push	{r7}
 24343              	.LCFI42:
 24344              		.cfi_def_cfa_offset 4
 24345 056e 83B0     		sub	sp, sp, #12
 24346              	.LCFI43:
 24347              		.cfi_def_cfa_offset 16
 24348 0570 00AF     		add	r7, sp, #0
 24349              		.cfi_offset 7, -4
 24350              	.LCFI44:
 24351              		.cfi_def_cfa_register 7
 24352 0572 7860     		str	r0, [r7, #4]
 24353 0574 0B46     		mov	r3, r1
 24354 0576 FB70     		strb	r3, [r7, #3]
 588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 24355              		.loc 1 592 0
 24356 0578 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 24357 057a 002B     		cmp	r3, #0
 24358 057c 08D0     		beq	.L41
 593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 24359              		.loc 1 595 0
 24360 057e 7B68     		ldr	r3, [r7, #4]
 24361 0580 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24362 0582 9BB2     		uxth	r3, r3
 24363 0584 43F00103 		orr	r3, r3, #1
 24364 0588 9AB2     		uxth	r2, r3
 24365 058a 7B68     		ldr	r3, [r7, #4]
 24366 058c 1A80     		strh	r2, [r3, #0]	@ movhi
 24367 058e 07E0     		b	.L40
 24368              	.L41:
 596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 24369              		.loc 1 600 0
 24370 0590 7B68     		ldr	r3, [r7, #4]
 24371 0592 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24372 0594 9BB2     		uxth	r3, r3
 24373 0596 23F00103 		bic	r3, r3, #1
 24374 059a 9AB2     		uxth	r2, r3
 24375 059c 7B68     		ldr	r3, [r7, #4]
 24376 059e 1A80     		strh	r2, [r3, #0]	@ movhi
 24377              	.L40:
 601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24378              		.loc 1 602 0
 24379 05a0 07F10C07 		add	r7, r7, #12
 24380 05a4 BD46     		mov	sp, r7
 24381 05a6 80BC     		pop	{r7}
 24382 05a8 7047     		bx	lr
 24383              		.cfi_endproc
 24384              	.LFE43:
 24386 05aa 00BF     		.align	2
 24387              		.global	TIM_OC1Init
 24388              		.thumb
 24389              		.thumb_func
 24391              	TIM_OC1Init:
 24392              	.LFB44:
 603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
 605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
 610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
 611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                         Output Compare management functions
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
 614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
 616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
 618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration
 639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               
 648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
 654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24393              		.loc 1 666 0
 24394              		.cfi_startproc
 24395              		@ args = 0, pretend = 0, frame = 16
 24396              		@ frame_needed = 1, uses_anonymous_args = 0
 24397              		@ link register save eliminated.
 24398 05ac 80B4     		push	{r7}
 24399              	.LCFI45:
 24400              		.cfi_def_cfa_offset 4
 24401 05ae 85B0     		sub	sp, sp, #20
 24402              	.LCFI46:
 24403              		.cfi_def_cfa_offset 24
 24404 05b0 00AF     		add	r7, sp, #0
 24405              		.cfi_offset 7, -4
 24406              	.LCFI47:
 24407              		.cfi_def_cfa_register 7
 24408 05b2 7860     		str	r0, [r7, #4]
 24409 05b4 3960     		str	r1, [r7, #0]
 667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 24410              		.loc 1 667 0
 24411 05b6 4FF00003 		mov	r3, #0
 24412 05ba 7B81     		strh	r3, [r7, #10]	@ movhi
 24413 05bc 4FF00003 		mov	r3, #0
 24414 05c0 FB81     		strh	r3, [r7, #14]	@ movhi
 24415 05c2 4FF00003 		mov	r3, #0
 24416 05c6 BB81     		strh	r3, [r7, #12]	@ movhi
 668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 24417              		.loc 1 676 0
 24418 05c8 7B68     		ldr	r3, [r7, #4]
 24419 05ca 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24420 05cc 9BB2     		uxth	r3, r3
 24421 05ce 23F00103 		bic	r3, r3, #1
 24422 05d2 9AB2     		uxth	r2, r3
 24423 05d4 7B68     		ldr	r3, [r7, #4]
 24424 05d6 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 24425              		.loc 1 679 0
 24426 05d8 7B68     		ldr	r3, [r7, #4]
 24427 05da 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24428 05dc FB81     		strh	r3, [r7, #14]	@ movhi
 680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 24429              		.loc 1 681 0
 24430 05de 7B68     		ldr	r3, [r7, #4]
 24431 05e0 9B88     		ldrh	r3, [r3, #4]	@ movhi
 24432 05e2 BB81     		strh	r3, [r7, #12]	@ movhi
 682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 24433              		.loc 1 684 0
 24434 05e4 7B68     		ldr	r3, [r7, #4]
 24435 05e6 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 24436 05e8 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 24437              		.loc 1 687 0
 24438 05ea 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24439 05ec 23F07003 		bic	r3, r3, #112
 24440 05f0 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 24441              		.loc 1 688 0
 24442 05f2 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24443 05f4 23F00303 		bic	r3, r3, #3
 24444 05f8 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 24445              		.loc 1 690 0
 24446 05fa 3B68     		ldr	r3, [r7, #0]
 24447 05fc 1A88     		ldrh	r2, [r3, #0]
 24448 05fe 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24449 0600 42EA0303 		orr	r3, r2, r3
 24450 0604 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 24451              		.loc 1 693 0
 24452 0606 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24453 0608 23F00203 		bic	r3, r3, #2
 24454 060c FB81     		strh	r3, [r7, #14]	@ movhi
 694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 24455              		.loc 1 695 0
 24456 060e 3B68     		ldr	r3, [r7, #0]
 24457 0610 9A89     		ldrh	r2, [r3, #12]
 24458 0612 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24459 0614 42EA0303 		orr	r3, r2, r3
 24460 0618 FB81     		strh	r3, [r7, #14]	@ movhi
 696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 24461              		.loc 1 698 0
 24462 061a 3B68     		ldr	r3, [r7, #0]
 24463 061c 5A88     		ldrh	r2, [r3, #2]
 24464 061e FB89     		ldrh	r3, [r7, #14]	@ movhi
 24465 0620 42EA0303 		orr	r3, r2, r3
 24466 0624 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 24467              		.loc 1 700 0
 24468 0626 7A68     		ldr	r2, [r7, #4]
 24469 0628 4FF00003 		mov	r3, #0
 24470 062c C4F20103 		movt	r3, 16385
 24471 0630 9A42     		cmp	r2, r3
 24472 0632 06D0     		beq	.L44
 24473              		.loc 1 700 0 is_stmt 0 discriminator 1
 24474 0634 7A68     		ldr	r2, [r7, #4]
 24475 0636 4FF48063 		mov	r3, #1024
 24476 063a C4F20103 		movt	r3, 16385
 24477 063e 9A42     		cmp	r2, r3
 24478 0640 27D1     		bne	.L45
 24479              	.L44:
 701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 24480              		.loc 1 708 0 is_stmt 1
 24481 0642 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24482 0644 23F00803 		bic	r3, r3, #8
 24483 0648 FB81     		strh	r3, [r7, #14]	@ movhi
 709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 24484              		.loc 1 710 0
 24485 064a 3B68     		ldr	r3, [r7, #0]
 24486 064c DA89     		ldrh	r2, [r3, #14]
 24487 064e FB89     		ldrh	r3, [r7, #14]	@ movhi
 24488 0650 42EA0303 		orr	r3, r2, r3
 24489 0654 FB81     		strh	r3, [r7, #14]	@ movhi
 711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 24490              		.loc 1 712 0
 24491 0656 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24492 0658 23F00403 		bic	r3, r3, #4
 24493 065c FB81     		strh	r3, [r7, #14]	@ movhi
 713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 24494              		.loc 1 715 0
 24495 065e 3B68     		ldr	r3, [r7, #0]
 24496 0660 9A88     		ldrh	r2, [r3, #4]
 24497 0662 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24498 0664 42EA0303 		orr	r3, r2, r3
 24499 0668 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 24500              		.loc 1 717 0
 24501 066a BB89     		ldrh	r3, [r7, #12]	@ movhi
 24502 066c 23F48073 		bic	r3, r3, #256
 24503 0670 BB81     		strh	r3, [r7, #12]	@ movhi
 718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 24504              		.loc 1 718 0
 24505 0672 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24506 0674 23F40073 		bic	r3, r3, #512
 24507 0678 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 24508              		.loc 1 720 0
 24509 067a 3B68     		ldr	r3, [r7, #0]
 24510 067c 1A8A     		ldrh	r2, [r3, #16]
 24511 067e BB89     		ldrh	r3, [r7, #12]	@ movhi
 24512 0680 42EA0303 		orr	r3, r2, r3
 24513 0684 BB81     		strh	r3, [r7, #12]	@ movhi
 721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 24514              		.loc 1 722 0
 24515 0686 3B68     		ldr	r3, [r7, #0]
 24516 0688 5A8A     		ldrh	r2, [r3, #18]
 24517 068a BB89     		ldrh	r3, [r7, #12]	@ movhi
 24518 068c 42EA0303 		orr	r3, r2, r3
 24519 0690 BB81     		strh	r3, [r7, #12]	@ movhi
 24520              	.L45:
 723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 24521              		.loc 1 725 0
 24522 0692 7B68     		ldr	r3, [r7, #4]
 24523 0694 BA89     		ldrh	r2, [r7, #12]	@ movhi
 24524 0696 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 24525              		.loc 1 728 0
 24526 0698 7B68     		ldr	r3, [r7, #4]
 24527 069a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 24528 069c 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 24529              		.loc 1 731 0
 24530 069e 3B68     		ldr	r3, [r7, #0]
 24531 06a0 9A68     		ldr	r2, [r3, #8]
 24532 06a2 7B68     		ldr	r3, [r7, #4]
 24533 06a4 5A63     		str	r2, [r3, #52]
 732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 24534              		.loc 1 734 0
 24535 06a6 7B68     		ldr	r3, [r7, #4]
 24536 06a8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 24537 06aa 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24538              		.loc 1 735 0
 24539 06ac 07F11407 		add	r7, r7, #20
 24540 06b0 BD46     		mov	sp, r7
 24541 06b2 80BC     		pop	{r7}
 24542 06b4 7047     		bx	lr
 24543              		.cfi_endproc
 24544              	.LFE44:
 24546 06b6 00BF     		.align	2
 24547              		.global	TIM_OC2Init
 24548              		.thumb
 24549              		.thumb_func
 24551              	TIM_OC2Init:
 24552              	.LFB45:
 736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
 742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24553              		.loc 1 747 0
 24554              		.cfi_startproc
 24555              		@ args = 0, pretend = 0, frame = 16
 24556              		@ frame_needed = 1, uses_anonymous_args = 0
 24557              		@ link register save eliminated.
 24558 06b8 80B4     		push	{r7}
 24559              	.LCFI48:
 24560              		.cfi_def_cfa_offset 4
 24561 06ba 85B0     		sub	sp, sp, #20
 24562              	.LCFI49:
 24563              		.cfi_def_cfa_offset 24
 24564 06bc 00AF     		add	r7, sp, #0
 24565              		.cfi_offset 7, -4
 24566              	.LCFI50:
 24567              		.cfi_def_cfa_register 7
 24568 06be 7860     		str	r0, [r7, #4]
 24569 06c0 3960     		str	r1, [r7, #0]
 748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 24570              		.loc 1 748 0
 24571 06c2 4FF00003 		mov	r3, #0
 24572 06c6 7B81     		strh	r3, [r7, #10]	@ movhi
 24573 06c8 4FF00003 		mov	r3, #0
 24574 06cc FB81     		strh	r3, [r7, #14]	@ movhi
 24575 06ce 4FF00003 		mov	r3, #0
 24576 06d2 BB81     		strh	r3, [r7, #12]	@ movhi
 749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 24577              		.loc 1 757 0
 24578 06d4 7B68     		ldr	r3, [r7, #4]
 24579 06d6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24580 06d8 9BB2     		uxth	r3, r3
 24581 06da 23F01003 		bic	r3, r3, #16
 24582 06de 9AB2     		uxth	r2, r3
 24583 06e0 7B68     		ldr	r3, [r7, #4]
 24584 06e2 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 24585              		.loc 1 760 0
 24586 06e4 7B68     		ldr	r3, [r7, #4]
 24587 06e6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24588 06e8 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 24589              		.loc 1 762 0
 24590 06ea 7B68     		ldr	r3, [r7, #4]
 24591 06ec 9B88     		ldrh	r3, [r3, #4]	@ movhi
 24592 06ee BB81     		strh	r3, [r7, #12]	@ movhi
 763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 24593              		.loc 1 765 0
 24594 06f0 7B68     		ldr	r3, [r7, #4]
 24595 06f2 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 24596 06f4 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 24597              		.loc 1 768 0
 24598 06f6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24599 06f8 23F4E043 		bic	r3, r3, #28672
 24600 06fc 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 24601              		.loc 1 769 0
 24602 06fe 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24603 0700 23F44073 		bic	r3, r3, #768
 24604 0704 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 24605              		.loc 1 772 0
 24606 0706 3B68     		ldr	r3, [r7, #0]
 24607 0708 1B88     		ldrh	r3, [r3, #0]
 24608 070a 4FEA0323 		lsl	r3, r3, #8
 24609 070e 9AB2     		uxth	r2, r3
 24610 0710 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24611 0712 42EA0303 		orr	r3, r2, r3
 24612 0716 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 24613              		.loc 1 775 0
 24614 0718 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24615 071a 23F02003 		bic	r3, r3, #32
 24616 071e FB81     		strh	r3, [r7, #14]	@ movhi
 776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 24617              		.loc 1 777 0
 24618 0720 3B68     		ldr	r3, [r7, #0]
 24619 0722 9B89     		ldrh	r3, [r3, #12]
 24620 0724 4FEA0313 		lsl	r3, r3, #4
 24621 0728 9AB2     		uxth	r2, r3
 24622 072a FB89     		ldrh	r3, [r7, #14]	@ movhi
 24623 072c 42EA0303 		orr	r3, r2, r3
 24624 0730 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 24625              		.loc 1 780 0
 24626 0732 3B68     		ldr	r3, [r7, #0]
 24627 0734 5B88     		ldrh	r3, [r3, #2]
 24628 0736 4FEA0313 		lsl	r3, r3, #4
 24629 073a 9AB2     		uxth	r2, r3
 24630 073c FB89     		ldrh	r3, [r7, #14]	@ movhi
 24631 073e 42EA0303 		orr	r3, r2, r3
 24632 0742 FB81     		strh	r3, [r7, #14]	@ movhi
 781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 24633              		.loc 1 782 0
 24634 0744 7A68     		ldr	r2, [r7, #4]
 24635 0746 4FF00003 		mov	r3, #0
 24636 074a C4F20103 		movt	r3, 16385
 24637 074e 9A42     		cmp	r2, r3
 24638 0750 06D0     		beq	.L47
 24639              		.loc 1 782 0 is_stmt 0 discriminator 1
 24640 0752 7A68     		ldr	r2, [r7, #4]
 24641 0754 4FF48063 		mov	r3, #1024
 24642 0758 C4F20103 		movt	r3, 16385
 24643 075c 9A42     		cmp	r2, r3
 24644 075e 33D1     		bne	.L48
 24645              	.L47:
 783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 24646              		.loc 1 790 0 is_stmt 1
 24647 0760 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24648 0762 23F08003 		bic	r3, r3, #128
 24649 0766 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 24650              		.loc 1 792 0
 24651 0768 3B68     		ldr	r3, [r7, #0]
 24652 076a DB89     		ldrh	r3, [r3, #14]
 24653 076c 4FEA0313 		lsl	r3, r3, #4
 24654 0770 9AB2     		uxth	r2, r3
 24655 0772 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24656 0774 42EA0303 		orr	r3, r2, r3
 24657 0778 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 24658              		.loc 1 794 0
 24659 077a FB89     		ldrh	r3, [r7, #14]	@ movhi
 24660 077c 23F04003 		bic	r3, r3, #64
 24661 0780 FB81     		strh	r3, [r7, #14]	@ movhi
 795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 24662              		.loc 1 797 0
 24663 0782 3B68     		ldr	r3, [r7, #0]
 24664 0784 9B88     		ldrh	r3, [r3, #4]
 24665 0786 4FEA0313 		lsl	r3, r3, #4
 24666 078a 9AB2     		uxth	r2, r3
 24667 078c FB89     		ldrh	r3, [r7, #14]	@ movhi
 24668 078e 42EA0303 		orr	r3, r2, r3
 24669 0792 FB81     		strh	r3, [r7, #14]	@ movhi
 798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 24670              		.loc 1 799 0
 24671 0794 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24672 0796 23F48063 		bic	r3, r3, #1024
 24673 079a BB81     		strh	r3, [r7, #12]	@ movhi
 800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 24674              		.loc 1 800 0
 24675 079c BB89     		ldrh	r3, [r7, #12]	@ movhi
 24676 079e 23F40063 		bic	r3, r3, #2048
 24677 07a2 BB81     		strh	r3, [r7, #12]	@ movhi
 801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 24678              		.loc 1 802 0
 24679 07a4 3B68     		ldr	r3, [r7, #0]
 24680 07a6 1B8A     		ldrh	r3, [r3, #16]
 24681 07a8 4FEA8303 		lsl	r3, r3, #2
 24682 07ac 9AB2     		uxth	r2, r3
 24683 07ae BB89     		ldrh	r3, [r7, #12]	@ movhi
 24684 07b0 42EA0303 		orr	r3, r2, r3
 24685 07b4 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 24686              		.loc 1 804 0
 24687 07b6 3B68     		ldr	r3, [r7, #0]
 24688 07b8 5B8A     		ldrh	r3, [r3, #18]
 24689 07ba 4FEA8303 		lsl	r3, r3, #2
 24690 07be 9AB2     		uxth	r2, r3
 24691 07c0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24692 07c2 42EA0303 		orr	r3, r2, r3
 24693 07c6 BB81     		strh	r3, [r7, #12]	@ movhi
 24694              	.L48:
 805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 24695              		.loc 1 807 0
 24696 07c8 7B68     		ldr	r3, [r7, #4]
 24697 07ca BA89     		ldrh	r2, [r7, #12]	@ movhi
 24698 07cc 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 24699              		.loc 1 810 0
 24700 07ce 7B68     		ldr	r3, [r7, #4]
 24701 07d0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 24702 07d2 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 24703              		.loc 1 813 0
 24704 07d4 3B68     		ldr	r3, [r7, #0]
 24705 07d6 9A68     		ldr	r2, [r3, #8]
 24706 07d8 7B68     		ldr	r3, [r7, #4]
 24707 07da 9A63     		str	r2, [r3, #56]
 814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 24708              		.loc 1 816 0
 24709 07dc 7B68     		ldr	r3, [r7, #4]
 24710 07de FA89     		ldrh	r2, [r7, #14]	@ movhi
 24711 07e0 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24712              		.loc 1 817 0
 24713 07e2 07F11407 		add	r7, r7, #20
 24714 07e6 BD46     		mov	sp, r7
 24715 07e8 80BC     		pop	{r7}
 24716 07ea 7047     		bx	lr
 24717              		.cfi_endproc
 24718              	.LFE45:
 24720              		.align	2
 24721              		.global	TIM_OC3Init
 24722              		.thumb
 24723              		.thumb_func
 24725              	TIM_OC3Init:
 24726              	.LFB46:
 818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24727              		.loc 1 828 0
 24728              		.cfi_startproc
 24729              		@ args = 0, pretend = 0, frame = 16
 24730              		@ frame_needed = 1, uses_anonymous_args = 0
 24731              		@ link register save eliminated.
 24732 07ec 80B4     		push	{r7}
 24733              	.LCFI51:
 24734              		.cfi_def_cfa_offset 4
 24735 07ee 85B0     		sub	sp, sp, #20
 24736              	.LCFI52:
 24737              		.cfi_def_cfa_offset 24
 24738 07f0 00AF     		add	r7, sp, #0
 24739              		.cfi_offset 7, -4
 24740              	.LCFI53:
 24741              		.cfi_def_cfa_register 7
 24742 07f2 7860     		str	r0, [r7, #4]
 24743 07f4 3960     		str	r1, [r7, #0]
 829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 24744              		.loc 1 829 0
 24745 07f6 4FF00003 		mov	r3, #0
 24746 07fa 7B81     		strh	r3, [r7, #10]	@ movhi
 24747 07fc 4FF00003 		mov	r3, #0
 24748 0800 FB81     		strh	r3, [r7, #14]	@ movhi
 24749 0802 4FF00003 		mov	r3, #0
 24750 0806 BB81     		strh	r3, [r7, #12]	@ movhi
 830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 24751              		.loc 1 838 0
 24752 0808 7B68     		ldr	r3, [r7, #4]
 24753 080a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24754 080c 9BB2     		uxth	r3, r3
 24755 080e 23F48073 		bic	r3, r3, #256
 24756 0812 9AB2     		uxth	r2, r3
 24757 0814 7B68     		ldr	r3, [r7, #4]
 24758 0816 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 24759              		.loc 1 841 0
 24760 0818 7B68     		ldr	r3, [r7, #4]
 24761 081a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24762 081c FB81     		strh	r3, [r7, #14]	@ movhi
 842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 24763              		.loc 1 843 0
 24764 081e 7B68     		ldr	r3, [r7, #4]
 24765 0820 9B88     		ldrh	r3, [r3, #4]	@ movhi
 24766 0822 BB81     		strh	r3, [r7, #12]	@ movhi
 844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 24767              		.loc 1 846 0
 24768 0824 7B68     		ldr	r3, [r7, #4]
 24769 0826 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 24770 0828 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 24771              		.loc 1 849 0
 24772 082a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24773 082c 23F07003 		bic	r3, r3, #112
 24774 0830 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 24775              		.loc 1 850 0
 24776 0832 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24777 0834 23F00303 		bic	r3, r3, #3
 24778 0838 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 24779              		.loc 1 852 0
 24780 083a 3B68     		ldr	r3, [r7, #0]
 24781 083c 1A88     		ldrh	r2, [r3, #0]
 24782 083e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24783 0840 42EA0303 		orr	r3, r2, r3
 24784 0844 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 24785              		.loc 1 855 0
 24786 0846 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24787 0848 23F40073 		bic	r3, r3, #512
 24788 084c FB81     		strh	r3, [r7, #14]	@ movhi
 856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 24789              		.loc 1 857 0
 24790 084e 3B68     		ldr	r3, [r7, #0]
 24791 0850 9B89     		ldrh	r3, [r3, #12]
 24792 0852 4FEA0323 		lsl	r3, r3, #8
 24793 0856 9AB2     		uxth	r2, r3
 24794 0858 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24795 085a 42EA0303 		orr	r3, r2, r3
 24796 085e FB81     		strh	r3, [r7, #14]	@ movhi
 858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 24797              		.loc 1 860 0
 24798 0860 3B68     		ldr	r3, [r7, #0]
 24799 0862 5B88     		ldrh	r3, [r3, #2]
 24800 0864 4FEA0323 		lsl	r3, r3, #8
 24801 0868 9AB2     		uxth	r2, r3
 24802 086a FB89     		ldrh	r3, [r7, #14]	@ movhi
 24803 086c 42EA0303 		orr	r3, r2, r3
 24804 0870 FB81     		strh	r3, [r7, #14]	@ movhi
 861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 24805              		.loc 1 862 0
 24806 0872 7A68     		ldr	r2, [r7, #4]
 24807 0874 4FF00003 		mov	r3, #0
 24808 0878 C4F20103 		movt	r3, 16385
 24809 087c 9A42     		cmp	r2, r3
 24810 087e 06D0     		beq	.L50
 24811              		.loc 1 862 0 is_stmt 0 discriminator 1
 24812 0880 7A68     		ldr	r2, [r7, #4]
 24813 0882 4FF48063 		mov	r3, #1024
 24814 0886 C4F20103 		movt	r3, 16385
 24815 088a 9A42     		cmp	r2, r3
 24816 088c 33D1     		bne	.L51
 24817              	.L50:
 863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 24818              		.loc 1 870 0 is_stmt 1
 24819 088e FB89     		ldrh	r3, [r7, #14]	@ movhi
 24820 0890 23F40063 		bic	r3, r3, #2048
 24821 0894 FB81     		strh	r3, [r7, #14]	@ movhi
 871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 24822              		.loc 1 872 0
 24823 0896 3B68     		ldr	r3, [r7, #0]
 24824 0898 DB89     		ldrh	r3, [r3, #14]
 24825 089a 4FEA0323 		lsl	r3, r3, #8
 24826 089e 9AB2     		uxth	r2, r3
 24827 08a0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24828 08a2 42EA0303 		orr	r3, r2, r3
 24829 08a6 FB81     		strh	r3, [r7, #14]	@ movhi
 873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 24830              		.loc 1 874 0
 24831 08a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24832 08aa 23F48063 		bic	r3, r3, #1024
 24833 08ae FB81     		strh	r3, [r7, #14]	@ movhi
 875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 24834              		.loc 1 877 0
 24835 08b0 3B68     		ldr	r3, [r7, #0]
 24836 08b2 9B88     		ldrh	r3, [r3, #4]
 24837 08b4 4FEA0323 		lsl	r3, r3, #8
 24838 08b8 9AB2     		uxth	r2, r3
 24839 08ba FB89     		ldrh	r3, [r7, #14]	@ movhi
 24840 08bc 42EA0303 		orr	r3, r2, r3
 24841 08c0 FB81     		strh	r3, [r7, #14]	@ movhi
 878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 24842              		.loc 1 879 0
 24843 08c2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24844 08c4 23F48053 		bic	r3, r3, #4096
 24845 08c8 BB81     		strh	r3, [r7, #12]	@ movhi
 880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 24846              		.loc 1 880 0
 24847 08ca BB89     		ldrh	r3, [r7, #12]	@ movhi
 24848 08cc 23F40053 		bic	r3, r3, #8192
 24849 08d0 BB81     		strh	r3, [r7, #12]	@ movhi
 881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 24850              		.loc 1 882 0
 24851 08d2 3B68     		ldr	r3, [r7, #0]
 24852 08d4 1B8A     		ldrh	r3, [r3, #16]
 24853 08d6 4FEA0313 		lsl	r3, r3, #4
 24854 08da 9AB2     		uxth	r2, r3
 24855 08dc BB89     		ldrh	r3, [r7, #12]	@ movhi
 24856 08de 42EA0303 		orr	r3, r2, r3
 24857 08e2 BB81     		strh	r3, [r7, #12]	@ movhi
 883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 24858              		.loc 1 884 0
 24859 08e4 3B68     		ldr	r3, [r7, #0]
 24860 08e6 5B8A     		ldrh	r3, [r3, #18]
 24861 08e8 4FEA0313 		lsl	r3, r3, #4
 24862 08ec 9AB2     		uxth	r2, r3
 24863 08ee BB89     		ldrh	r3, [r7, #12]	@ movhi
 24864 08f0 42EA0303 		orr	r3, r2, r3
 24865 08f4 BB81     		strh	r3, [r7, #12]	@ movhi
 24866              	.L51:
 885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 24867              		.loc 1 887 0
 24868 08f6 7B68     		ldr	r3, [r7, #4]
 24869 08f8 BA89     		ldrh	r2, [r7, #12]	@ movhi
 24870 08fa 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 24871              		.loc 1 890 0
 24872 08fc 7B68     		ldr	r3, [r7, #4]
 24873 08fe 7A89     		ldrh	r2, [r7, #10]	@ movhi
 24874 0900 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 24875              		.loc 1 893 0
 24876 0902 3B68     		ldr	r3, [r7, #0]
 24877 0904 9A68     		ldr	r2, [r3, #8]
 24878 0906 7B68     		ldr	r3, [r7, #4]
 24879 0908 DA63     		str	r2, [r3, #60]
 894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 24880              		.loc 1 896 0
 24881 090a 7B68     		ldr	r3, [r7, #4]
 24882 090c FA89     		ldrh	r2, [r7, #14]	@ movhi
 24883 090e 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 24884              		.loc 1 897 0
 24885 0910 07F11407 		add	r7, r7, #20
 24886 0914 BD46     		mov	sp, r7
 24887 0916 80BC     		pop	{r7}
 24888 0918 7047     		bx	lr
 24889              		.cfi_endproc
 24890              	.LFE46:
 24892 091a 00BF     		.align	2
 24893              		.global	TIM_OC4Init
 24894              		.thumb
 24895              		.thumb_func
 24897              	TIM_OC4Init:
 24898              	.LFB47:
 898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 24899              		.loc 1 908 0
 24900              		.cfi_startproc
 24901              		@ args = 0, pretend = 0, frame = 16
 24902              		@ frame_needed = 1, uses_anonymous_args = 0
 24903              		@ link register save eliminated.
 24904 091c 80B4     		push	{r7}
 24905              	.LCFI54:
 24906              		.cfi_def_cfa_offset 4
 24907 091e 85B0     		sub	sp, sp, #20
 24908              	.LCFI55:
 24909              		.cfi_def_cfa_offset 24
 24910 0920 00AF     		add	r7, sp, #0
 24911              		.cfi_offset 7, -4
 24912              	.LCFI56:
 24913              		.cfi_def_cfa_register 7
 24914 0922 7860     		str	r0, [r7, #4]
 24915 0924 3960     		str	r1, [r7, #0]
 909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 24916              		.loc 1 909 0
 24917 0926 4FF00003 		mov	r3, #0
 24918 092a BB81     		strh	r3, [r7, #12]	@ movhi
 24919 092c 4FF00003 		mov	r3, #0
 24920 0930 7B81     		strh	r3, [r7, #10]	@ movhi
 24921 0932 4FF00003 		mov	r3, #0
 24922 0936 FB81     		strh	r3, [r7, #14]	@ movhi
 910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 24923              		.loc 1 918 0
 24924 0938 7B68     		ldr	r3, [r7, #4]
 24925 093a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24926 093c 9BB2     		uxth	r3, r3
 24927 093e 23F48053 		bic	r3, r3, #4096
 24928 0942 9AB2     		uxth	r2, r3
 24929 0944 7B68     		ldr	r3, [r7, #4]
 24930 0946 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 24931              		.loc 1 921 0
 24932 0948 7B68     		ldr	r3, [r7, #4]
 24933 094a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 24934 094c 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 24935              		.loc 1 923 0
 24936 094e 7B68     		ldr	r3, [r7, #4]
 24937 0950 9B88     		ldrh	r3, [r3, #4]	@ movhi
 24938 0952 FB81     		strh	r3, [r7, #14]	@ movhi
 924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 24939              		.loc 1 926 0
 24940 0954 7B68     		ldr	r3, [r7, #4]
 24941 0956 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 24942 0958 BB81     		strh	r3, [r7, #12]	@ movhi
 927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 24943              		.loc 1 929 0
 24944 095a BB89     		ldrh	r3, [r7, #12]	@ movhi
 24945 095c 23F4E043 		bic	r3, r3, #28672
 24946 0960 BB81     		strh	r3, [r7, #12]	@ movhi
 930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 24947              		.loc 1 930 0
 24948 0962 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24949 0964 23F44073 		bic	r3, r3, #768
 24950 0968 BB81     		strh	r3, [r7, #12]	@ movhi
 931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 24951              		.loc 1 933 0
 24952 096a 3B68     		ldr	r3, [r7, #0]
 24953 096c 1B88     		ldrh	r3, [r3, #0]
 24954 096e 4FEA0323 		lsl	r3, r3, #8
 24955 0972 9AB2     		uxth	r2, r3
 24956 0974 BB89     		ldrh	r3, [r7, #12]	@ movhi
 24957 0976 42EA0303 		orr	r3, r2, r3
 24958 097a BB81     		strh	r3, [r7, #12]	@ movhi
 934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 24959              		.loc 1 936 0
 24960 097c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24961 097e 23F40053 		bic	r3, r3, #8192
 24962 0982 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 24963              		.loc 1 938 0
 24964 0984 3B68     		ldr	r3, [r7, #0]
 24965 0986 9B89     		ldrh	r3, [r3, #12]
 24966 0988 4FEA0333 		lsl	r3, r3, #12
 24967 098c 9AB2     		uxth	r2, r3
 24968 098e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24969 0990 42EA0303 		orr	r3, r2, r3
 24970 0994 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 24971              		.loc 1 941 0
 24972 0996 3B68     		ldr	r3, [r7, #0]
 24973 0998 5B88     		ldrh	r3, [r3, #2]
 24974 099a 4FEA0333 		lsl	r3, r3, #12
 24975 099e 9AB2     		uxth	r2, r3
 24976 09a0 7B89     		ldrh	r3, [r7, #10]	@ movhi
 24977 09a2 42EA0303 		orr	r3, r2, r3
 24978 09a6 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 24979              		.loc 1 943 0
 24980 09a8 7A68     		ldr	r2, [r7, #4]
 24981 09aa 4FF00003 		mov	r3, #0
 24982 09ae C4F20103 		movt	r3, 16385
 24983 09b2 9A42     		cmp	r2, r3
 24984 09b4 06D0     		beq	.L53
 24985              		.loc 1 943 0 is_stmt 0 discriminator 1
 24986 09b6 7A68     		ldr	r2, [r7, #4]
 24987 09b8 4FF48063 		mov	r3, #1024
 24988 09bc C4F20103 		movt	r3, 16385
 24989 09c0 9A42     		cmp	r2, r3
 24990 09c2 0CD1     		bne	.L54
 24991              	.L53:
 944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 24992              		.loc 1 947 0 is_stmt 1
 24993 09c4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24994 09c6 23F48043 		bic	r3, r3, #16384
 24995 09ca FB81     		strh	r3, [r7, #14]	@ movhi
 948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 24996              		.loc 1 949 0
 24997 09cc 3B68     		ldr	r3, [r7, #0]
 24998 09ce 1B8A     		ldrh	r3, [r3, #16]
 24999 09d0 4FEA8313 		lsl	r3, r3, #6
 25000 09d4 9AB2     		uxth	r2, r3
 25001 09d6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25002 09d8 42EA0303 		orr	r3, r2, r3
 25003 09dc FB81     		strh	r3, [r7, #14]	@ movhi
 25004              	.L54:
 950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 25005              		.loc 1 952 0
 25006 09de 7B68     		ldr	r3, [r7, #4]
 25007 09e0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25008 09e2 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 25009              		.loc 1 955 0
 25010 09e4 7B68     		ldr	r3, [r7, #4]
 25011 09e6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 25012 09e8 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 25013              		.loc 1 958 0
 25014 09ea 3B68     		ldr	r3, [r7, #0]
 25015 09ec 9A68     		ldr	r2, [r3, #8]
 25016 09ee 7B68     		ldr	r3, [r7, #4]
 25017 09f0 1A64     		str	r2, [r3, #64]
 959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 25018              		.loc 1 961 0
 25019 09f2 7B68     		ldr	r3, [r7, #4]
 25020 09f4 7A89     		ldrh	r2, [r7, #10]	@ movhi
 25021 09f6 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25022              		.loc 1 962 0
 25023 09f8 07F11407 		add	r7, r7, #20
 25024 09fc BD46     		mov	sp, r7
 25025 09fe 80BC     		pop	{r7}
 25026 0a00 7047     		bx	lr
 25027              		.cfi_endproc
 25028              	.LFE47:
 25030 0a02 00BF     		.align	2
 25031              		.global	TIM_OCStructInit
 25032              		.thumb
 25033              		.thumb_func
 25035              	TIM_OCStructInit:
 25036              	.LFB48:
 963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         be initialized.
 968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25037              		.loc 1 971 0
 25038              		.cfi_startproc
 25039              		@ args = 0, pretend = 0, frame = 8
 25040              		@ frame_needed = 1, uses_anonymous_args = 0
 25041              		@ link register save eliminated.
 25042 0a04 80B4     		push	{r7}
 25043              	.LCFI57:
 25044              		.cfi_def_cfa_offset 4
 25045 0a06 83B0     		sub	sp, sp, #12
 25046              	.LCFI58:
 25047              		.cfi_def_cfa_offset 16
 25048 0a08 00AF     		add	r7, sp, #0
 25049              		.cfi_offset 7, -4
 25050              	.LCFI59:
 25051              		.cfi_def_cfa_register 7
 25052 0a0a 7860     		str	r0, [r7, #4]
 972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
 973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 25053              		.loc 1 973 0
 25054 0a0c 7B68     		ldr	r3, [r7, #4]
 25055 0a0e 4FF00002 		mov	r2, #0
 25056 0a12 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 25057              		.loc 1 974 0
 25058 0a14 7B68     		ldr	r3, [r7, #4]
 25059 0a16 4FF00002 		mov	r2, #0
 25060 0a1a 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 25061              		.loc 1 975 0
 25062 0a1c 7B68     		ldr	r3, [r7, #4]
 25063 0a1e 4FF00002 		mov	r2, #0
 25064 0a22 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 25065              		.loc 1 976 0
 25066 0a24 7B68     		ldr	r3, [r7, #4]
 25067 0a26 4FF00002 		mov	r2, #0
 25068 0a2a 9A60     		str	r2, [r3, #8]
 977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 25069              		.loc 1 977 0
 25070 0a2c 7B68     		ldr	r3, [r7, #4]
 25071 0a2e 4FF00002 		mov	r2, #0
 25072 0a32 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 25073              		.loc 1 978 0
 25074 0a34 7B68     		ldr	r3, [r7, #4]
 25075 0a36 4FF00002 		mov	r2, #0
 25076 0a3a DA81     		strh	r2, [r3, #14]	@ movhi
 979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 25077              		.loc 1 979 0
 25078 0a3c 7B68     		ldr	r3, [r7, #4]
 25079 0a3e 4FF00002 		mov	r2, #0
 25080 0a42 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 25081              		.loc 1 980 0
 25082 0a44 7B68     		ldr	r3, [r7, #4]
 25083 0a46 4FF00002 		mov	r2, #0
 25084 0a4a 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25085              		.loc 1 981 0
 25086 0a4c 07F10C07 		add	r7, r7, #12
 25087 0a50 BD46     		mov	sp, r7
 25088 0a52 80BC     		pop	{r7}
 25089 0a54 7047     		bx	lr
 25090              		.cfi_endproc
 25091              	.LFE48:
 25093 0a56 00BF     		.align	2
 25094              		.global	TIM_SelectOCxM
 25095              		.thumb
 25096              		.thumb_func
 25098              	TIM_SelectOCxM:
 25099              	.LFB49:
 982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25100              		.loc 1 1007 0
 25101              		.cfi_startproc
 25102              		@ args = 0, pretend = 0, frame = 16
 25103              		@ frame_needed = 1, uses_anonymous_args = 0
 25104              		@ link register save eliminated.
 25105 0a58 80B4     		push	{r7}
 25106              	.LCFI60:
 25107              		.cfi_def_cfa_offset 4
 25108 0a5a 85B0     		sub	sp, sp, #20
 25109              	.LCFI61:
 25110              		.cfi_def_cfa_offset 24
 25111 0a5c 00AF     		add	r7, sp, #0
 25112              		.cfi_offset 7, -4
 25113              	.LCFI62:
 25114              		.cfi_def_cfa_register 7
 25115 0a5e 7860     		str	r0, [r7, #4]
 25116 0a60 1346     		mov	r3, r2
 25117 0a62 0A46     		mov	r2, r1	@ movhi
 25118 0a64 7A80     		strh	r2, [r7, #2]	@ movhi
 25119 0a66 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint32_t tmp = 0;
 25120              		.loc 1 1008 0
 25121 0a68 4FF00003 		mov	r3, #0
 25122 0a6c FB60     		str	r3, [r7, #12]
1009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp1 = 0;
 25123              		.loc 1 1009 0
 25124 0a6e 4FF00003 		mov	r3, #0
 25125 0a72 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint32_t) TIMx;
 25126              		.loc 1 1016 0
 25127 0a74 7B68     		ldr	r3, [r7, #4]
 25128 0a76 FB60     		str	r3, [r7, #12]
1017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp += CCMR_OFFSET;
 25129              		.loc 1 1017 0
 25130 0a78 FB68     		ldr	r3, [r7, #12]
 25131 0a7a 03F11803 		add	r3, r3, #24
 25132 0a7e FB60     		str	r3, [r7, #12]
1018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 25133              		.loc 1 1019 0
 25134 0a80 7B88     		ldrh	r3, [r7, #2]
 25135 0a82 4FF00102 		mov	r2, #1
 25136 0a86 02FA03F3 		lsl	r3, r2, r3
 25137 0a8a 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 25138              		.loc 1 1022 0
 25139 0a8c 7B68     		ldr	r3, [r7, #4]
 25140 0a8e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25141 0a90 9AB2     		uxth	r2, r3
 25142 0a92 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25143 0a94 6FEA0303 		mvn	r3, r3
 25144 0a98 9BB2     		uxth	r3, r3
 25145 0a9a 02EA0303 		and	r3, r2, r3
 25146 0a9e 9AB2     		uxth	r2, r3
 25147 0aa0 7B68     		ldr	r3, [r7, #4]
 25148 0aa2 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 25149              		.loc 1 1024 0
 25150 0aa4 7B88     		ldrh	r3, [r7, #2]
 25151 0aa6 002B     		cmp	r3, #0
 25152 0aa8 02D0     		beq	.L57
 25153              		.loc 1 1024 0 is_stmt 0 discriminator 1
 25154 0aaa 7B88     		ldrh	r3, [r7, #2]
 25155 0aac 082B     		cmp	r3, #8
 25156 0aae 16D1     		bne	.L58
 25157              	.L57:
1025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmp += (TIM_Channel>>1);
 25158              		.loc 1 1026 0 is_stmt 1
 25159 0ab0 7B88     		ldrh	r3, [r7, #2]
 25160 0ab2 4FEA5303 		lsr	r3, r3, #1
 25161 0ab6 9BB2     		uxth	r3, r3
 25162 0ab8 FA68     		ldr	r2, [r7, #12]
 25163 0aba 1344     		add	r3, r2, r3
 25164 0abc FB60     		str	r3, [r7, #12]
1027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 25165              		.loc 1 1029 0
 25166 0abe FA68     		ldr	r2, [r7, #12]
 25167 0ac0 FB68     		ldr	r3, [r7, #12]
 25168 0ac2 1968     		ldr	r1, [r3, #0]
 25169 0ac4 4FF68F73 		movw	r3, #65423
 25170 0ac8 01EA0303 		and	r3, r1, r3
 25171 0acc 1360     		str	r3, [r2, #0]
1030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 25172              		.loc 1 1032 0
 25173 0ace FB68     		ldr	r3, [r7, #12]
 25174 0ad0 FA68     		ldr	r2, [r7, #12]
 25175 0ad2 1168     		ldr	r1, [r2, #0]
 25176 0ad4 3A88     		ldrh	r2, [r7, #0]
 25177 0ad6 41EA0202 		orr	r2, r1, r2
 25178 0ada 1A60     		str	r2, [r3, #0]
 25179 0adc 1BE0     		b	.L56
 25180              	.L58:
1033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 25181              		.loc 1 1036 0
 25182 0ade 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25183 0ae0 A3F10403 		sub	r3, r3, #4
 25184 0ae4 9BB2     		uxth	r3, r3
 25185 0ae6 4FEA5303 		lsr	r3, r3, #1
 25186 0aea 9BB2     		uxth	r3, r3
 25187 0aec FA68     		ldr	r2, [r7, #12]
 25188 0aee 1344     		add	r3, r2, r3
 25189 0af0 FB60     		str	r3, [r7, #12]
1037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 25190              		.loc 1 1039 0
 25191 0af2 FA68     		ldr	r2, [r7, #12]
 25192 0af4 FB68     		ldr	r3, [r7, #12]
 25193 0af6 1968     		ldr	r1, [r3, #0]
 25194 0af8 48F6FF73 		movw	r3, #36863
 25195 0afc 01EA0303 		and	r3, r1, r3
 25196 0b00 1360     		str	r3, [r2, #0]
1040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
1041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 25197              		.loc 1 1042 0
 25198 0b02 FB68     		ldr	r3, [r7, #12]
 25199 0b04 FA68     		ldr	r2, [r7, #12]
 25200 0b06 1168     		ldr	r1, [r2, #0]
 25201 0b08 3A88     		ldrh	r2, [r7, #0]	@ movhi
 25202 0b0a 4FEA0222 		lsl	r2, r2, #8
 25203 0b0e 92B2     		uxth	r2, r2
 25204 0b10 41EA0202 		orr	r2, r1, r2
 25205 0b14 1A60     		str	r2, [r3, #0]
 25206              	.L56:
1043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25207              		.loc 1 1044 0
 25208 0b16 07F11407 		add	r7, r7, #20
 25209 0b1a BD46     		mov	sp, r7
 25210 0b1c 80BC     		pop	{r7}
 25211 0b1e 7047     		bx	lr
 25212              		.cfi_endproc
 25213              	.LFE49:
 25215              		.align	2
 25216              		.global	TIM_SetCompare1
 25217              		.thumb
 25218              		.thumb_func
 25220              	TIM_SetCompare1:
 25221              	.LFB50:
1045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25222              		.loc 1 1053 0
 25223              		.cfi_startproc
 25224              		@ args = 0, pretend = 0, frame = 8
 25225              		@ frame_needed = 1, uses_anonymous_args = 0
 25226              		@ link register save eliminated.
 25227 0b20 80B4     		push	{r7}
 25228              	.LCFI63:
 25229              		.cfi_def_cfa_offset 4
 25230 0b22 83B0     		sub	sp, sp, #12
 25231              	.LCFI64:
 25232              		.cfi_def_cfa_offset 16
 25233 0b24 00AF     		add	r7, sp, #0
 25234              		.cfi_offset 7, -4
 25235              	.LCFI65:
 25236              		.cfi_def_cfa_register 7
 25237 0b26 7860     		str	r0, [r7, #4]
 25238 0b28 3960     		str	r1, [r7, #0]
1054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR1 = Compare1;
 25239              		.loc 1 1058 0
 25240 0b2a 7B68     		ldr	r3, [r7, #4]
 25241 0b2c 3A68     		ldr	r2, [r7, #0]
 25242 0b2e 5A63     		str	r2, [r3, #52]
1059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25243              		.loc 1 1059 0
 25244 0b30 07F10C07 		add	r7, r7, #12
 25245 0b34 BD46     		mov	sp, r7
 25246 0b36 80BC     		pop	{r7}
 25247 0b38 7047     		bx	lr
 25248              		.cfi_endproc
 25249              	.LFE50:
 25251 0b3a 00BF     		.align	2
 25252              		.global	TIM_SetCompare2
 25253              		.thumb
 25254              		.thumb_func
 25256              	TIM_SetCompare2:
 25257              	.LFB51:
1060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25258              		.loc 1 1069 0
 25259              		.cfi_startproc
 25260              		@ args = 0, pretend = 0, frame = 8
 25261              		@ frame_needed = 1, uses_anonymous_args = 0
 25262              		@ link register save eliminated.
 25263 0b3c 80B4     		push	{r7}
 25264              	.LCFI66:
 25265              		.cfi_def_cfa_offset 4
 25266 0b3e 83B0     		sub	sp, sp, #12
 25267              	.LCFI67:
 25268              		.cfi_def_cfa_offset 16
 25269 0b40 00AF     		add	r7, sp, #0
 25270              		.cfi_offset 7, -4
 25271              	.LCFI68:
 25272              		.cfi_def_cfa_register 7
 25273 0b42 7860     		str	r0, [r7, #4]
 25274 0b44 3960     		str	r1, [r7, #0]
1070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR2 = Compare2;
 25275              		.loc 1 1074 0
 25276 0b46 7B68     		ldr	r3, [r7, #4]
 25277 0b48 3A68     		ldr	r2, [r7, #0]
 25278 0b4a 9A63     		str	r2, [r3, #56]
1075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25279              		.loc 1 1075 0
 25280 0b4c 07F10C07 		add	r7, r7, #12
 25281 0b50 BD46     		mov	sp, r7
 25282 0b52 80BC     		pop	{r7}
 25283 0b54 7047     		bx	lr
 25284              		.cfi_endproc
 25285              	.LFE51:
 25287 0b56 00BF     		.align	2
 25288              		.global	TIM_SetCompare3
 25289              		.thumb
 25290              		.thumb_func
 25292              	TIM_SetCompare3:
 25293              	.LFB52:
1076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25294              		.loc 1 1084 0
 25295              		.cfi_startproc
 25296              		@ args = 0, pretend = 0, frame = 8
 25297              		@ frame_needed = 1, uses_anonymous_args = 0
 25298              		@ link register save eliminated.
 25299 0b58 80B4     		push	{r7}
 25300              	.LCFI69:
 25301              		.cfi_def_cfa_offset 4
 25302 0b5a 83B0     		sub	sp, sp, #12
 25303              	.LCFI70:
 25304              		.cfi_def_cfa_offset 16
 25305 0b5c 00AF     		add	r7, sp, #0
 25306              		.cfi_offset 7, -4
 25307              	.LCFI71:
 25308              		.cfi_def_cfa_register 7
 25309 0b5e 7860     		str	r0, [r7, #4]
 25310 0b60 3960     		str	r1, [r7, #0]
1085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR3 = Compare3;
 25311              		.loc 1 1089 0
 25312 0b62 7B68     		ldr	r3, [r7, #4]
 25313 0b64 3A68     		ldr	r2, [r7, #0]
 25314 0b66 DA63     		str	r2, [r3, #60]
1090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25315              		.loc 1 1090 0
 25316 0b68 07F10C07 		add	r7, r7, #12
 25317 0b6c BD46     		mov	sp, r7
 25318 0b6e 80BC     		pop	{r7}
 25319 0b70 7047     		bx	lr
 25320              		.cfi_endproc
 25321              	.LFE52:
 25323 0b72 00BF     		.align	2
 25324              		.global	TIM_SetCompare4
 25325              		.thumb
 25326              		.thumb_func
 25328              	TIM_SetCompare4:
 25329              	.LFB53:
1091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25330              		.loc 1 1099 0
 25331              		.cfi_startproc
 25332              		@ args = 0, pretend = 0, frame = 8
 25333              		@ frame_needed = 1, uses_anonymous_args = 0
 25334              		@ link register save eliminated.
 25335 0b74 80B4     		push	{r7}
 25336              	.LCFI72:
 25337              		.cfi_def_cfa_offset 4
 25338 0b76 83B0     		sub	sp, sp, #12
 25339              	.LCFI73:
 25340              		.cfi_def_cfa_offset 16
 25341 0b78 00AF     		add	r7, sp, #0
 25342              		.cfi_offset 7, -4
 25343              	.LCFI74:
 25344              		.cfi_def_cfa_register 7
 25345 0b7a 7860     		str	r0, [r7, #4]
 25346 0b7c 3960     		str	r1, [r7, #0]
1100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR4 = Compare4;
 25347              		.loc 1 1104 0
 25348 0b7e 7B68     		ldr	r3, [r7, #4]
 25349 0b80 3A68     		ldr	r2, [r7, #0]
 25350 0b82 1A64     		str	r2, [r3, #64]
1105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25351              		.loc 1 1105 0
 25352 0b84 07F10C07 		add	r7, r7, #12
 25353 0b88 BD46     		mov	sp, r7
 25354 0b8a 80BC     		pop	{r7}
 25355 0b8c 7047     		bx	lr
 25356              		.cfi_endproc
 25357              	.LFE53:
 25359 0b8e 00BF     		.align	2
 25360              		.global	TIM_ForcedOC1Config
 25361              		.thumb
 25362              		.thumb_func
 25364              	TIM_ForcedOC1Config:
 25365              	.LFB54:
1106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25366              		.loc 1 1117 0
 25367              		.cfi_startproc
 25368              		@ args = 0, pretend = 0, frame = 16
 25369              		@ frame_needed = 1, uses_anonymous_args = 0
 25370              		@ link register save eliminated.
 25371 0b90 80B4     		push	{r7}
 25372              	.LCFI75:
 25373              		.cfi_def_cfa_offset 4
 25374 0b92 85B0     		sub	sp, sp, #20
 25375              	.LCFI76:
 25376              		.cfi_def_cfa_offset 24
 25377 0b94 00AF     		add	r7, sp, #0
 25378              		.cfi_offset 7, -4
 25379              	.LCFI77:
 25380              		.cfi_def_cfa_register 7
 25381 0b96 7860     		str	r0, [r7, #4]
 25382 0b98 0B46     		mov	r3, r1
 25383 0b9a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25384              		.loc 1 1118 0
 25385 0b9c 4FF00003 		mov	r3, #0
 25386 0ba0 FB81     		strh	r3, [r7, #14]	@ movhi
1119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25387              		.loc 1 1123 0
 25388 0ba2 7B68     		ldr	r3, [r7, #4]
 25389 0ba4 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25390 0ba6 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 25391              		.loc 1 1126 0
 25392 0ba8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25393 0baa 23F07003 		bic	r3, r3, #112
 25394 0bae FB81     		strh	r3, [r7, #14]	@ movhi
1127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 25395              		.loc 1 1129 0
 25396 0bb0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25397 0bb2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25398 0bb4 42EA0303 		orr	r3, r2, r3
 25399 0bb8 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25400              		.loc 1 1132 0
 25401 0bba 7B68     		ldr	r3, [r7, #4]
 25402 0bbc FA89     		ldrh	r2, [r7, #14]	@ movhi
 25403 0bbe 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25404              		.loc 1 1133 0
 25405 0bc0 07F11407 		add	r7, r7, #20
 25406 0bc4 BD46     		mov	sp, r7
 25407 0bc6 80BC     		pop	{r7}
 25408 0bc8 7047     		bx	lr
 25409              		.cfi_endproc
 25410              	.LFE54:
 25412 0bca 00BF     		.align	2
 25413              		.global	TIM_ForcedOC2Config
 25414              		.thumb
 25415              		.thumb_func
 25417              	TIM_ForcedOC2Config:
 25418              	.LFB55:
1134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25419              		.loc 1 1146 0
 25420              		.cfi_startproc
 25421              		@ args = 0, pretend = 0, frame = 16
 25422              		@ frame_needed = 1, uses_anonymous_args = 0
 25423              		@ link register save eliminated.
 25424 0bcc 80B4     		push	{r7}
 25425              	.LCFI78:
 25426              		.cfi_def_cfa_offset 4
 25427 0bce 85B0     		sub	sp, sp, #20
 25428              	.LCFI79:
 25429              		.cfi_def_cfa_offset 24
 25430 0bd0 00AF     		add	r7, sp, #0
 25431              		.cfi_offset 7, -4
 25432              	.LCFI80:
 25433              		.cfi_def_cfa_register 7
 25434 0bd2 7860     		str	r0, [r7, #4]
 25435 0bd4 0B46     		mov	r3, r1
 25436 0bd6 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25437              		.loc 1 1147 0
 25438 0bd8 4FF00003 		mov	r3, #0
 25439 0bdc FB81     		strh	r3, [r7, #14]	@ movhi
1148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25440              		.loc 1 1152 0
 25441 0bde 7B68     		ldr	r3, [r7, #4]
 25442 0be0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25443 0be2 FB81     		strh	r3, [r7, #14]	@ movhi
1153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 25444              		.loc 1 1155 0
 25445 0be4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25446 0be6 23F4E043 		bic	r3, r3, #28672
 25447 0bea FB81     		strh	r3, [r7, #14]	@ movhi
1156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 25448              		.loc 1 1158 0
 25449 0bec 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25450 0bee 4FEA0323 		lsl	r3, r3, #8
 25451 0bf2 9AB2     		uxth	r2, r3
 25452 0bf4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25453 0bf6 42EA0303 		orr	r3, r2, r3
 25454 0bfa FB81     		strh	r3, [r7, #14]	@ movhi
1159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25455              		.loc 1 1161 0
 25456 0bfc 7B68     		ldr	r3, [r7, #4]
 25457 0bfe FA89     		ldrh	r2, [r7, #14]	@ movhi
 25458 0c00 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25459              		.loc 1 1162 0
 25460 0c02 07F11407 		add	r7, r7, #20
 25461 0c06 BD46     		mov	sp, r7
 25462 0c08 80BC     		pop	{r7}
 25463 0c0a 7047     		bx	lr
 25464              		.cfi_endproc
 25465              	.LFE55:
 25467              		.align	2
 25468              		.global	TIM_ForcedOC3Config
 25469              		.thumb
 25470              		.thumb_func
 25472              	TIM_ForcedOC3Config:
 25473              	.LFB56:
1163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25474              		.loc 1 1174 0
 25475              		.cfi_startproc
 25476              		@ args = 0, pretend = 0, frame = 16
 25477              		@ frame_needed = 1, uses_anonymous_args = 0
 25478              		@ link register save eliminated.
 25479 0c0c 80B4     		push	{r7}
 25480              	.LCFI81:
 25481              		.cfi_def_cfa_offset 4
 25482 0c0e 85B0     		sub	sp, sp, #20
 25483              	.LCFI82:
 25484              		.cfi_def_cfa_offset 24
 25485 0c10 00AF     		add	r7, sp, #0
 25486              		.cfi_offset 7, -4
 25487              	.LCFI83:
 25488              		.cfi_def_cfa_register 7
 25489 0c12 7860     		str	r0, [r7, #4]
 25490 0c14 0B46     		mov	r3, r1
 25491 0c16 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25492              		.loc 1 1175 0
 25493 0c18 4FF00003 		mov	r3, #0
 25494 0c1c FB81     		strh	r3, [r7, #14]	@ movhi
1176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25495              		.loc 1 1181 0
 25496 0c1e 7B68     		ldr	r3, [r7, #4]
 25497 0c20 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25498 0c22 FB81     		strh	r3, [r7, #14]	@ movhi
1182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 25499              		.loc 1 1184 0
 25500 0c24 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25501 0c26 23F07003 		bic	r3, r3, #112
 25502 0c2a FB81     		strh	r3, [r7, #14]	@ movhi
1185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 25503              		.loc 1 1187 0
 25504 0c2c FA89     		ldrh	r2, [r7, #14]	@ movhi
 25505 0c2e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25506 0c30 42EA0303 		orr	r3, r2, r3
 25507 0c34 FB81     		strh	r3, [r7, #14]	@ movhi
1188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25508              		.loc 1 1190 0
 25509 0c36 7B68     		ldr	r3, [r7, #4]
 25510 0c38 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25511 0c3a 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25512              		.loc 1 1191 0
 25513 0c3c 07F11407 		add	r7, r7, #20
 25514 0c40 BD46     		mov	sp, r7
 25515 0c42 80BC     		pop	{r7}
 25516 0c44 7047     		bx	lr
 25517              		.cfi_endproc
 25518              	.LFE56:
 25520 0c46 00BF     		.align	2
 25521              		.global	TIM_ForcedOC4Config
 25522              		.thumb
 25523              		.thumb_func
 25525              	TIM_ForcedOC4Config:
 25526              	.LFB57:
1192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25527              		.loc 1 1203 0
 25528              		.cfi_startproc
 25529              		@ args = 0, pretend = 0, frame = 16
 25530              		@ frame_needed = 1, uses_anonymous_args = 0
 25531              		@ link register save eliminated.
 25532 0c48 80B4     		push	{r7}
 25533              	.LCFI84:
 25534              		.cfi_def_cfa_offset 4
 25535 0c4a 85B0     		sub	sp, sp, #20
 25536              	.LCFI85:
 25537              		.cfi_def_cfa_offset 24
 25538 0c4c 00AF     		add	r7, sp, #0
 25539              		.cfi_offset 7, -4
 25540              	.LCFI86:
 25541              		.cfi_def_cfa_register 7
 25542 0c4e 7860     		str	r0, [r7, #4]
 25543 0c50 0B46     		mov	r3, r1
 25544 0c52 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25545              		.loc 1 1204 0
 25546 0c54 4FF00003 		mov	r3, #0
 25547 0c58 FB81     		strh	r3, [r7, #14]	@ movhi
1205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25548              		.loc 1 1209 0
 25549 0c5a 7B68     		ldr	r3, [r7, #4]
 25550 0c5c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25551 0c5e FB81     		strh	r3, [r7, #14]	@ movhi
1210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 25552              		.loc 1 1212 0
 25553 0c60 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25554 0c62 23F4E043 		bic	r3, r3, #28672
 25555 0c66 FB81     		strh	r3, [r7, #14]	@ movhi
1213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 25556              		.loc 1 1215 0
 25557 0c68 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25558 0c6a 4FEA0323 		lsl	r3, r3, #8
 25559 0c6e 9AB2     		uxth	r2, r3
 25560 0c70 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25561 0c72 42EA0303 		orr	r3, r2, r3
 25562 0c76 FB81     		strh	r3, [r7, #14]	@ movhi
1216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25563              		.loc 1 1218 0
 25564 0c78 7B68     		ldr	r3, [r7, #4]
 25565 0c7a FA89     		ldrh	r2, [r7, #14]	@ movhi
 25566 0c7c 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25567              		.loc 1 1219 0
 25568 0c7e 07F11407 		add	r7, r7, #20
 25569 0c82 BD46     		mov	sp, r7
 25570 0c84 80BC     		pop	{r7}
 25571 0c86 7047     		bx	lr
 25572              		.cfi_endproc
 25573              	.LFE57:
 25575              		.align	2
 25576              		.global	TIM_OC1PreloadConfig
 25577              		.thumb
 25578              		.thumb_func
 25580              	TIM_OC1PreloadConfig:
 25581              	.LFB58:
1220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25582              		.loc 1 1231 0
 25583              		.cfi_startproc
 25584              		@ args = 0, pretend = 0, frame = 16
 25585              		@ frame_needed = 1, uses_anonymous_args = 0
 25586              		@ link register save eliminated.
 25587 0c88 80B4     		push	{r7}
 25588              	.LCFI87:
 25589              		.cfi_def_cfa_offset 4
 25590 0c8a 85B0     		sub	sp, sp, #20
 25591              	.LCFI88:
 25592              		.cfi_def_cfa_offset 24
 25593 0c8c 00AF     		add	r7, sp, #0
 25594              		.cfi_offset 7, -4
 25595              	.LCFI89:
 25596              		.cfi_def_cfa_register 7
 25597 0c8e 7860     		str	r0, [r7, #4]
 25598 0c90 0B46     		mov	r3, r1
 25599 0c92 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25600              		.loc 1 1232 0
 25601 0c94 4FF00003 		mov	r3, #0
 25602 0c98 FB81     		strh	r3, [r7, #14]	@ movhi
1233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25603              		.loc 1 1238 0
 25604 0c9a 7B68     		ldr	r3, [r7, #4]
 25605 0c9c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25606 0c9e FB81     		strh	r3, [r7, #14]	@ movhi
1239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 25607              		.loc 1 1241 0
 25608 0ca0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25609 0ca2 23F00803 		bic	r3, r3, #8
 25610 0ca6 FB81     		strh	r3, [r7, #14]	@ movhi
1242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 25611              		.loc 1 1244 0
 25612 0ca8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25613 0caa 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25614 0cac 42EA0303 		orr	r3, r2, r3
 25615 0cb0 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25616              		.loc 1 1247 0
 25617 0cb2 7B68     		ldr	r3, [r7, #4]
 25618 0cb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25619 0cb6 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25620              		.loc 1 1248 0
 25621 0cb8 07F11407 		add	r7, r7, #20
 25622 0cbc BD46     		mov	sp, r7
 25623 0cbe 80BC     		pop	{r7}
 25624 0cc0 7047     		bx	lr
 25625              		.cfi_endproc
 25626              	.LFE58:
 25628 0cc2 00BF     		.align	2
 25629              		.global	TIM_OC2PreloadConfig
 25630              		.thumb
 25631              		.thumb_func
 25633              	TIM_OC2PreloadConfig:
 25634              	.LFB59:
1249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25635              		.loc 1 1261 0
 25636              		.cfi_startproc
 25637              		@ args = 0, pretend = 0, frame = 16
 25638              		@ frame_needed = 1, uses_anonymous_args = 0
 25639              		@ link register save eliminated.
 25640 0cc4 80B4     		push	{r7}
 25641              	.LCFI90:
 25642              		.cfi_def_cfa_offset 4
 25643 0cc6 85B0     		sub	sp, sp, #20
 25644              	.LCFI91:
 25645              		.cfi_def_cfa_offset 24
 25646 0cc8 00AF     		add	r7, sp, #0
 25647              		.cfi_offset 7, -4
 25648              	.LCFI92:
 25649              		.cfi_def_cfa_register 7
 25650 0cca 7860     		str	r0, [r7, #4]
 25651 0ccc 0B46     		mov	r3, r1
 25652 0cce 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25653              		.loc 1 1262 0
 25654 0cd0 4FF00003 		mov	r3, #0
 25655 0cd4 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25656              		.loc 1 1268 0
 25657 0cd6 7B68     		ldr	r3, [r7, #4]
 25658 0cd8 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25659 0cda FB81     		strh	r3, [r7, #14]	@ movhi
1269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 25660              		.loc 1 1271 0
 25661 0cdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 25662 0cde 23F40063 		bic	r3, r3, #2048
 25663 0ce2 FB81     		strh	r3, [r7, #14]	@ movhi
1272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 25664              		.loc 1 1274 0
 25665 0ce4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25666 0ce6 4FEA0323 		lsl	r3, r3, #8
 25667 0cea 9AB2     		uxth	r2, r3
 25668 0cec FB89     		ldrh	r3, [r7, #14]	@ movhi
 25669 0cee 42EA0303 		orr	r3, r2, r3
 25670 0cf2 FB81     		strh	r3, [r7, #14]	@ movhi
1275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25671              		.loc 1 1277 0
 25672 0cf4 7B68     		ldr	r3, [r7, #4]
 25673 0cf6 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25674 0cf8 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25675              		.loc 1 1278 0
 25676 0cfa 07F11407 		add	r7, r7, #20
 25677 0cfe BD46     		mov	sp, r7
 25678 0d00 80BC     		pop	{r7}
 25679 0d02 7047     		bx	lr
 25680              		.cfi_endproc
 25681              	.LFE59:
 25683              		.align	2
 25684              		.global	TIM_OC3PreloadConfig
 25685              		.thumb
 25686              		.thumb_func
 25688              	TIM_OC3PreloadConfig:
 25689              	.LFB60:
1279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25690              		.loc 1 1290 0
 25691              		.cfi_startproc
 25692              		@ args = 0, pretend = 0, frame = 16
 25693              		@ frame_needed = 1, uses_anonymous_args = 0
 25694              		@ link register save eliminated.
 25695 0d04 80B4     		push	{r7}
 25696              	.LCFI93:
 25697              		.cfi_def_cfa_offset 4
 25698 0d06 85B0     		sub	sp, sp, #20
 25699              	.LCFI94:
 25700              		.cfi_def_cfa_offset 24
 25701 0d08 00AF     		add	r7, sp, #0
 25702              		.cfi_offset 7, -4
 25703              	.LCFI95:
 25704              		.cfi_def_cfa_register 7
 25705 0d0a 7860     		str	r0, [r7, #4]
 25706 0d0c 0B46     		mov	r3, r1
 25707 0d0e 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25708              		.loc 1 1291 0
 25709 0d10 4FF00003 		mov	r3, #0
 25710 0d14 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25711              		.loc 1 1297 0
 25712 0d16 7B68     		ldr	r3, [r7, #4]
 25713 0d18 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25714 0d1a FB81     		strh	r3, [r7, #14]	@ movhi
1298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 25715              		.loc 1 1300 0
 25716 0d1c FB89     		ldrh	r3, [r7, #14]	@ movhi
 25717 0d1e 23F00803 		bic	r3, r3, #8
 25718 0d22 FB81     		strh	r3, [r7, #14]	@ movhi
1301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 25719              		.loc 1 1303 0
 25720 0d24 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25721 0d26 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25722 0d28 42EA0303 		orr	r3, r2, r3
 25723 0d2c FB81     		strh	r3, [r7, #14]	@ movhi
1304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25724              		.loc 1 1306 0
 25725 0d2e 7B68     		ldr	r3, [r7, #4]
 25726 0d30 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25727 0d32 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25728              		.loc 1 1307 0
 25729 0d34 07F11407 		add	r7, r7, #20
 25730 0d38 BD46     		mov	sp, r7
 25731 0d3a 80BC     		pop	{r7}
 25732 0d3c 7047     		bx	lr
 25733              		.cfi_endproc
 25734              	.LFE60:
 25736 0d3e 00BF     		.align	2
 25737              		.global	TIM_OC4PreloadConfig
 25738              		.thumb
 25739              		.thumb_func
 25741              	TIM_OC4PreloadConfig:
 25742              	.LFB61:
1308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25743              		.loc 1 1319 0
 25744              		.cfi_startproc
 25745              		@ args = 0, pretend = 0, frame = 16
 25746              		@ frame_needed = 1, uses_anonymous_args = 0
 25747              		@ link register save eliminated.
 25748 0d40 80B4     		push	{r7}
 25749              	.LCFI96:
 25750              		.cfi_def_cfa_offset 4
 25751 0d42 85B0     		sub	sp, sp, #20
 25752              	.LCFI97:
 25753              		.cfi_def_cfa_offset 24
 25754 0d44 00AF     		add	r7, sp, #0
 25755              		.cfi_offset 7, -4
 25756              	.LCFI98:
 25757              		.cfi_def_cfa_register 7
 25758 0d46 7860     		str	r0, [r7, #4]
 25759 0d48 0B46     		mov	r3, r1
 25760 0d4a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25761              		.loc 1 1320 0
 25762 0d4c 4FF00003 		mov	r3, #0
 25763 0d50 FB81     		strh	r3, [r7, #14]	@ movhi
1321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25764              		.loc 1 1326 0
 25765 0d52 7B68     		ldr	r3, [r7, #4]
 25766 0d54 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25767 0d56 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 25768              		.loc 1 1329 0
 25769 0d58 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25770 0d5a 23F40063 		bic	r3, r3, #2048
 25771 0d5e FB81     		strh	r3, [r7, #14]	@ movhi
1330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 25772              		.loc 1 1332 0
 25773 0d60 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25774 0d62 4FEA0323 		lsl	r3, r3, #8
 25775 0d66 9AB2     		uxth	r2, r3
 25776 0d68 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25777 0d6a 42EA0303 		orr	r3, r2, r3
 25778 0d6e FB81     		strh	r3, [r7, #14]	@ movhi
1333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25779              		.loc 1 1335 0
 25780 0d70 7B68     		ldr	r3, [r7, #4]
 25781 0d72 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25782 0d74 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25783              		.loc 1 1336 0
 25784 0d76 07F11407 		add	r7, r7, #20
 25785 0d7a BD46     		mov	sp, r7
 25786 0d7c 80BC     		pop	{r7}
 25787 0d7e 7047     		bx	lr
 25788              		.cfi_endproc
 25789              	.LFE61:
 25791              		.align	2
 25792              		.global	TIM_OC1FastConfig
 25793              		.thumb
 25794              		.thumb_func
 25796              	TIM_OC1FastConfig:
 25797              	.LFB62:
1337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25798              		.loc 1 1348 0
 25799              		.cfi_startproc
 25800              		@ args = 0, pretend = 0, frame = 16
 25801              		@ frame_needed = 1, uses_anonymous_args = 0
 25802              		@ link register save eliminated.
 25803 0d80 80B4     		push	{r7}
 25804              	.LCFI99:
 25805              		.cfi_def_cfa_offset 4
 25806 0d82 85B0     		sub	sp, sp, #20
 25807              	.LCFI100:
 25808              		.cfi_def_cfa_offset 24
 25809 0d84 00AF     		add	r7, sp, #0
 25810              		.cfi_offset 7, -4
 25811              	.LCFI101:
 25812              		.cfi_def_cfa_register 7
 25813 0d86 7860     		str	r0, [r7, #4]
 25814 0d88 0B46     		mov	r3, r1
 25815 0d8a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25816              		.loc 1 1349 0
 25817 0d8c 4FF00003 		mov	r3, #0
 25818 0d90 FB81     		strh	r3, [r7, #14]	@ movhi
1350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25819              		.loc 1 1356 0
 25820 0d92 7B68     		ldr	r3, [r7, #4]
 25821 0d94 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25822 0d96 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 25823              		.loc 1 1359 0
 25824 0d98 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25825 0d9a 23F00403 		bic	r3, r3, #4
 25826 0d9e FB81     		strh	r3, [r7, #14]	@ movhi
1360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 25827              		.loc 1 1362 0
 25828 0da0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25829 0da2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25830 0da4 42EA0303 		orr	r3, r2, r3
 25831 0da8 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25832              		.loc 1 1365 0
 25833 0daa 7B68     		ldr	r3, [r7, #4]
 25834 0dac FA89     		ldrh	r2, [r7, #14]	@ movhi
 25835 0dae 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25836              		.loc 1 1366 0
 25837 0db0 07F11407 		add	r7, r7, #20
 25838 0db4 BD46     		mov	sp, r7
 25839 0db6 80BC     		pop	{r7}
 25840 0db8 7047     		bx	lr
 25841              		.cfi_endproc
 25842              	.LFE62:
 25844 0dba 00BF     		.align	2
 25845              		.global	TIM_OC2FastConfig
 25846              		.thumb
 25847              		.thumb_func
 25849              	TIM_OC2FastConfig:
 25850              	.LFB63:
1367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25851              		.loc 1 1379 0
 25852              		.cfi_startproc
 25853              		@ args = 0, pretend = 0, frame = 16
 25854              		@ frame_needed = 1, uses_anonymous_args = 0
 25855              		@ link register save eliminated.
 25856 0dbc 80B4     		push	{r7}
 25857              	.LCFI102:
 25858              		.cfi_def_cfa_offset 4
 25859 0dbe 85B0     		sub	sp, sp, #20
 25860              	.LCFI103:
 25861              		.cfi_def_cfa_offset 24
 25862 0dc0 00AF     		add	r7, sp, #0
 25863              		.cfi_offset 7, -4
 25864              	.LCFI104:
 25865              		.cfi_def_cfa_register 7
 25866 0dc2 7860     		str	r0, [r7, #4]
 25867 0dc4 0B46     		mov	r3, r1
 25868 0dc6 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 25869              		.loc 1 1380 0
 25870 0dc8 4FF00003 		mov	r3, #0
 25871 0dcc FB81     		strh	r3, [r7, #14]	@ movhi
1381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 25872              		.loc 1 1387 0
 25873 0dce 7B68     		ldr	r3, [r7, #4]
 25874 0dd0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25875 0dd2 FB81     		strh	r3, [r7, #14]	@ movhi
1388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 25876              		.loc 1 1390 0
 25877 0dd4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25878 0dd6 23F48063 		bic	r3, r3, #1024
 25879 0dda FB81     		strh	r3, [r7, #14]	@ movhi
1391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 25880              		.loc 1 1393 0
 25881 0ddc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25882 0dde 4FEA0323 		lsl	r3, r3, #8
 25883 0de2 9AB2     		uxth	r2, r3
 25884 0de4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25885 0de6 42EA0303 		orr	r3, r2, r3
 25886 0dea FB81     		strh	r3, [r7, #14]	@ movhi
1394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 25887              		.loc 1 1396 0
 25888 0dec 7B68     		ldr	r3, [r7, #4]
 25889 0dee FA89     		ldrh	r2, [r7, #14]	@ movhi
 25890 0df0 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25891              		.loc 1 1397 0
 25892 0df2 07F11407 		add	r7, r7, #20
 25893 0df6 BD46     		mov	sp, r7
 25894 0df8 80BC     		pop	{r7}
 25895 0dfa 7047     		bx	lr
 25896              		.cfi_endproc
 25897              	.LFE63:
 25899              		.align	2
 25900              		.global	TIM_OC3FastConfig
 25901              		.thumb
 25902              		.thumb_func
 25904              	TIM_OC3FastConfig:
 25905              	.LFB64:
1398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25906              		.loc 1 1409 0
 25907              		.cfi_startproc
 25908              		@ args = 0, pretend = 0, frame = 16
 25909              		@ frame_needed = 1, uses_anonymous_args = 0
 25910              		@ link register save eliminated.
 25911 0dfc 80B4     		push	{r7}
 25912              	.LCFI105:
 25913              		.cfi_def_cfa_offset 4
 25914 0dfe 85B0     		sub	sp, sp, #20
 25915              	.LCFI106:
 25916              		.cfi_def_cfa_offset 24
 25917 0e00 00AF     		add	r7, sp, #0
 25918              		.cfi_offset 7, -4
 25919              	.LCFI107:
 25920              		.cfi_def_cfa_register 7
 25921 0e02 7860     		str	r0, [r7, #4]
 25922 0e04 0B46     		mov	r3, r1
 25923 0e06 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25924              		.loc 1 1410 0
 25925 0e08 4FF00003 		mov	r3, #0
 25926 0e0c FB81     		strh	r3, [r7, #14]	@ movhi
1411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25927              		.loc 1 1417 0
 25928 0e0e 7B68     		ldr	r3, [r7, #4]
 25929 0e10 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25930 0e12 FB81     		strh	r3, [r7, #14]	@ movhi
1418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 25931              		.loc 1 1420 0
 25932 0e14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25933 0e16 23F00403 		bic	r3, r3, #4
 25934 0e1a FB81     		strh	r3, [r7, #14]	@ movhi
1421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 25935              		.loc 1 1423 0
 25936 0e1c FA89     		ldrh	r2, [r7, #14]	@ movhi
 25937 0e1e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25938 0e20 42EA0303 		orr	r3, r2, r3
 25939 0e24 FB81     		strh	r3, [r7, #14]	@ movhi
1424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25940              		.loc 1 1426 0
 25941 0e26 7B68     		ldr	r3, [r7, #4]
 25942 0e28 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25943 0e2a 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25944              		.loc 1 1427 0
 25945 0e2c 07F11407 		add	r7, r7, #20
 25946 0e30 BD46     		mov	sp, r7
 25947 0e32 80BC     		pop	{r7}
 25948 0e34 7047     		bx	lr
 25949              		.cfi_endproc
 25950              	.LFE64:
 25952 0e36 00BF     		.align	2
 25953              		.global	TIM_OC4FastConfig
 25954              		.thumb
 25955              		.thumb_func
 25957              	TIM_OC4FastConfig:
 25958              	.LFB65:
1428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 25959              		.loc 1 1439 0
 25960              		.cfi_startproc
 25961              		@ args = 0, pretend = 0, frame = 16
 25962              		@ frame_needed = 1, uses_anonymous_args = 0
 25963              		@ link register save eliminated.
 25964 0e38 80B4     		push	{r7}
 25965              	.LCFI108:
 25966              		.cfi_def_cfa_offset 4
 25967 0e3a 85B0     		sub	sp, sp, #20
 25968              	.LCFI109:
 25969              		.cfi_def_cfa_offset 24
 25970 0e3c 00AF     		add	r7, sp, #0
 25971              		.cfi_offset 7, -4
 25972              	.LCFI110:
 25973              		.cfi_def_cfa_register 7
 25974 0e3e 7860     		str	r0, [r7, #4]
 25975 0e40 0B46     		mov	r3, r1
 25976 0e42 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 25977              		.loc 1 1440 0
 25978 0e44 4FF00003 		mov	r3, #0
 25979 0e48 FB81     		strh	r3, [r7, #14]	@ movhi
1441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 25980              		.loc 1 1447 0
 25981 0e4a 7B68     		ldr	r3, [r7, #4]
 25982 0e4c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 25983 0e4e FB81     		strh	r3, [r7, #14]	@ movhi
1448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 25984              		.loc 1 1450 0
 25985 0e50 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25986 0e52 23F48063 		bic	r3, r3, #1024
 25987 0e56 FB81     		strh	r3, [r7, #14]	@ movhi
1451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 25988              		.loc 1 1453 0
 25989 0e58 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25990 0e5a 4FEA0323 		lsl	r3, r3, #8
 25991 0e5e 9AB2     		uxth	r2, r3
 25992 0e60 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25993 0e62 42EA0303 		orr	r3, r2, r3
 25994 0e66 FB81     		strh	r3, [r7, #14]	@ movhi
1454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 25995              		.loc 1 1456 0
 25996 0e68 7B68     		ldr	r3, [r7, #4]
 25997 0e6a FA89     		ldrh	r2, [r7, #14]	@ movhi
 25998 0e6c 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 25999              		.loc 1 1457 0
 26000 0e6e 07F11407 		add	r7, r7, #20
 26001 0e72 BD46     		mov	sp, r7
 26002 0e74 80BC     		pop	{r7}
 26003 0e76 7047     		bx	lr
 26004              		.cfi_endproc
 26005              	.LFE65:
 26007              		.align	2
 26008              		.global	TIM_ClearOC1Ref
 26009              		.thumb
 26010              		.thumb_func
 26012              	TIM_ClearOC1Ref:
 26013              	.LFB66:
1458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26014              		.loc 1 1469 0
 26015              		.cfi_startproc
 26016              		@ args = 0, pretend = 0, frame = 16
 26017              		@ frame_needed = 1, uses_anonymous_args = 0
 26018              		@ link register save eliminated.
 26019 0e78 80B4     		push	{r7}
 26020              	.LCFI111:
 26021              		.cfi_def_cfa_offset 4
 26022 0e7a 85B0     		sub	sp, sp, #20
 26023              	.LCFI112:
 26024              		.cfi_def_cfa_offset 24
 26025 0e7c 00AF     		add	r7, sp, #0
 26026              		.cfi_offset 7, -4
 26027              	.LCFI113:
 26028              		.cfi_def_cfa_register 7
 26029 0e7e 7860     		str	r0, [r7, #4]
 26030 0e80 0B46     		mov	r3, r1
 26031 0e82 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26032              		.loc 1 1470 0
 26033 0e84 4FF00003 		mov	r3, #0
 26034 0e88 FB81     		strh	r3, [r7, #14]	@ movhi
1471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26035              		.loc 1 1476 0
 26036 0e8a 7B68     		ldr	r3, [r7, #4]
 26037 0e8c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26038 0e8e FB81     		strh	r3, [r7, #14]	@ movhi
1477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 26039              		.loc 1 1479 0
 26040 0e90 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26041 0e92 23F08003 		bic	r3, r3, #128
 26042 0e96 FB81     		strh	r3, [r7, #14]	@ movhi
1480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 26043              		.loc 1 1482 0
 26044 0e98 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26045 0e9a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26046 0e9c 42EA0303 		orr	r3, r2, r3
 26047 0ea0 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26048              		.loc 1 1485 0
 26049 0ea2 7B68     		ldr	r3, [r7, #4]
 26050 0ea4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26051 0ea6 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26052              		.loc 1 1486 0
 26053 0ea8 07F11407 		add	r7, r7, #20
 26054 0eac BD46     		mov	sp, r7
 26055 0eae 80BC     		pop	{r7}
 26056 0eb0 7047     		bx	lr
 26057              		.cfi_endproc
 26058              	.LFE66:
 26060 0eb2 00BF     		.align	2
 26061              		.global	TIM_ClearOC2Ref
 26062              		.thumb
 26063              		.thumb_func
 26065              	TIM_ClearOC2Ref:
 26066              	.LFB67:
1487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26067              		.loc 1 1499 0
 26068              		.cfi_startproc
 26069              		@ args = 0, pretend = 0, frame = 16
 26070              		@ frame_needed = 1, uses_anonymous_args = 0
 26071              		@ link register save eliminated.
 26072 0eb4 80B4     		push	{r7}
 26073              	.LCFI114:
 26074              		.cfi_def_cfa_offset 4
 26075 0eb6 85B0     		sub	sp, sp, #20
 26076              	.LCFI115:
 26077              		.cfi_def_cfa_offset 24
 26078 0eb8 00AF     		add	r7, sp, #0
 26079              		.cfi_offset 7, -4
 26080              	.LCFI116:
 26081              		.cfi_def_cfa_register 7
 26082 0eba 7860     		str	r0, [r7, #4]
 26083 0ebc 0B46     		mov	r3, r1
 26084 0ebe 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26085              		.loc 1 1500 0
 26086 0ec0 4FF00003 		mov	r3, #0
 26087 0ec4 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26088              		.loc 1 1506 0
 26089 0ec6 7B68     		ldr	r3, [r7, #4]
 26090 0ec8 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26091 0eca FB81     		strh	r3, [r7, #14]	@ movhi
1507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 26092              		.loc 1 1509 0
 26093 0ecc FB89     		ldrh	r3, [r7, #14]	@ movhi
 26094 0ece 4FEA4343 		lsl	r3, r3, #17
 26095 0ed2 4FEA5343 		lsr	r3, r3, #17
 26096 0ed6 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 26097              		.loc 1 1512 0
 26098 0ed8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26099 0eda 4FEA0323 		lsl	r3, r3, #8
 26100 0ede 9AB2     		uxth	r2, r3
 26101 0ee0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26102 0ee2 42EA0303 		orr	r3, r2, r3
 26103 0ee6 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26104              		.loc 1 1515 0
 26105 0ee8 7B68     		ldr	r3, [r7, #4]
 26106 0eea FA89     		ldrh	r2, [r7, #14]	@ movhi
 26107 0eec 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26108              		.loc 1 1516 0
 26109 0eee 07F11407 		add	r7, r7, #20
 26110 0ef2 BD46     		mov	sp, r7
 26111 0ef4 80BC     		pop	{r7}
 26112 0ef6 7047     		bx	lr
 26113              		.cfi_endproc
 26114              	.LFE67:
 26116              		.align	2
 26117              		.global	TIM_ClearOC3Ref
 26118              		.thumb
 26119              		.thumb_func
 26121              	TIM_ClearOC3Ref:
 26122              	.LFB68:
1517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26123              		.loc 1 1528 0
 26124              		.cfi_startproc
 26125              		@ args = 0, pretend = 0, frame = 16
 26126              		@ frame_needed = 1, uses_anonymous_args = 0
 26127              		@ link register save eliminated.
 26128 0ef8 80B4     		push	{r7}
 26129              	.LCFI117:
 26130              		.cfi_def_cfa_offset 4
 26131 0efa 85B0     		sub	sp, sp, #20
 26132              	.LCFI118:
 26133              		.cfi_def_cfa_offset 24
 26134 0efc 00AF     		add	r7, sp, #0
 26135              		.cfi_offset 7, -4
 26136              	.LCFI119:
 26137              		.cfi_def_cfa_register 7
 26138 0efe 7860     		str	r0, [r7, #4]
 26139 0f00 0B46     		mov	r3, r1
 26140 0f02 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 26141              		.loc 1 1529 0
 26142 0f04 4FF00003 		mov	r3, #0
 26143 0f08 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 26144              		.loc 1 1535 0
 26145 0f0a 7B68     		ldr	r3, [r7, #4]
 26146 0f0c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26147 0f0e FB81     		strh	r3, [r7, #14]	@ movhi
1536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 26148              		.loc 1 1538 0
 26149 0f10 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26150 0f12 23F08003 		bic	r3, r3, #128
 26151 0f16 FB81     		strh	r3, [r7, #14]	@ movhi
1539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 26152              		.loc 1 1541 0
 26153 0f18 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26154 0f1a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26155 0f1c 42EA0303 		orr	r3, r2, r3
 26156 0f20 FB81     		strh	r3, [r7, #14]	@ movhi
1542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 26157              		.loc 1 1544 0
 26158 0f22 7B68     		ldr	r3, [r7, #4]
 26159 0f24 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26160 0f26 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26161              		.loc 1 1545 0
 26162 0f28 07F11407 		add	r7, r7, #20
 26163 0f2c BD46     		mov	sp, r7
 26164 0f2e 80BC     		pop	{r7}
 26165 0f30 7047     		bx	lr
 26166              		.cfi_endproc
 26167              	.LFE68:
 26169 0f32 00BF     		.align	2
 26170              		.global	TIM_ClearOC4Ref
 26171              		.thumb
 26172              		.thumb_func
 26174              	TIM_ClearOC4Ref:
 26175              	.LFB69:
1546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26176              		.loc 1 1557 0
 26177              		.cfi_startproc
 26178              		@ args = 0, pretend = 0, frame = 16
 26179              		@ frame_needed = 1, uses_anonymous_args = 0
 26180              		@ link register save eliminated.
 26181 0f34 80B4     		push	{r7}
 26182              	.LCFI120:
 26183              		.cfi_def_cfa_offset 4
 26184 0f36 85B0     		sub	sp, sp, #20
 26185              	.LCFI121:
 26186              		.cfi_def_cfa_offset 24
 26187 0f38 00AF     		add	r7, sp, #0
 26188              		.cfi_offset 7, -4
 26189              	.LCFI122:
 26190              		.cfi_def_cfa_register 7
 26191 0f3a 7860     		str	r0, [r7, #4]
 26192 0f3c 0B46     		mov	r3, r1
 26193 0f3e 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 26194              		.loc 1 1558 0
 26195 0f40 4FF00003 		mov	r3, #0
 26196 0f44 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 26197              		.loc 1 1564 0
 26198 0f46 7B68     		ldr	r3, [r7, #4]
 26199 0f48 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26200 0f4a FB81     		strh	r3, [r7, #14]	@ movhi
1565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 26201              		.loc 1 1567 0
 26202 0f4c FB89     		ldrh	r3, [r7, #14]	@ movhi
 26203 0f4e 4FEA4343 		lsl	r3, r3, #17
 26204 0f52 4FEA5343 		lsr	r3, r3, #17
 26205 0f56 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 26206              		.loc 1 1570 0
 26207 0f58 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26208 0f5a 4FEA0323 		lsl	r3, r3, #8
 26209 0f5e 9AB2     		uxth	r2, r3
 26210 0f60 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26211 0f62 42EA0303 		orr	r3, r2, r3
 26212 0f66 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 26213              		.loc 1 1573 0
 26214 0f68 7B68     		ldr	r3, [r7, #4]
 26215 0f6a FA89     		ldrh	r2, [r7, #14]	@ movhi
 26216 0f6c 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26217              		.loc 1 1574 0
 26218 0f6e 07F11407 		add	r7, r7, #20
 26219 0f72 BD46     		mov	sp, r7
 26220 0f74 80BC     		pop	{r7}
 26221 0f76 7047     		bx	lr
 26222              		.cfi_endproc
 26223              	.LFE69:
 26225              		.align	2
 26226              		.global	TIM_OC1PolarityConfig
 26227              		.thumb
 26228              		.thumb_func
 26230              	TIM_OC1PolarityConfig:
 26231              	.LFB70:
1575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26232              		.loc 1 1586 0
 26233              		.cfi_startproc
 26234              		@ args = 0, pretend = 0, frame = 16
 26235              		@ frame_needed = 1, uses_anonymous_args = 0
 26236              		@ link register save eliminated.
 26237 0f78 80B4     		push	{r7}
 26238              	.LCFI123:
 26239              		.cfi_def_cfa_offset 4
 26240 0f7a 85B0     		sub	sp, sp, #20
 26241              	.LCFI124:
 26242              		.cfi_def_cfa_offset 24
 26243 0f7c 00AF     		add	r7, sp, #0
 26244              		.cfi_offset 7, -4
 26245              	.LCFI125:
 26246              		.cfi_def_cfa_register 7
 26247 0f7e 7860     		str	r0, [r7, #4]
 26248 0f80 0B46     		mov	r3, r1
 26249 0f82 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26250              		.loc 1 1587 0
 26251 0f84 4FF00003 		mov	r3, #0
 26252 0f88 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26253              		.loc 1 1593 0
 26254 0f8a 7B68     		ldr	r3, [r7, #4]
 26255 0f8c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26256 0f8e FB81     		strh	r3, [r7, #14]	@ movhi
1594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 26257              		.loc 1 1596 0
 26258 0f90 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26259 0f92 23F00203 		bic	r3, r3, #2
 26260 0f96 FB81     		strh	r3, [r7, #14]	@ movhi
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 26261              		.loc 1 1597 0
 26262 0f98 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26263 0f9a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26264 0f9c 42EA0303 		orr	r3, r2, r3
 26265 0fa0 FB81     		strh	r3, [r7, #14]	@ movhi
1598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26266              		.loc 1 1600 0
 26267 0fa2 7B68     		ldr	r3, [r7, #4]
 26268 0fa4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26269 0fa6 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26270              		.loc 1 1601 0
 26271 0fa8 07F11407 		add	r7, r7, #20
 26272 0fac BD46     		mov	sp, r7
 26273 0fae 80BC     		pop	{r7}
 26274 0fb0 7047     		bx	lr
 26275              		.cfi_endproc
 26276              	.LFE70:
 26278 0fb2 00BF     		.align	2
 26279              		.global	TIM_OC1NPolarityConfig
 26280              		.thumb
 26281              		.thumb_func
 26283              	TIM_OC1NPolarityConfig:
 26284              	.LFB71:
1602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26285              		.loc 1 1613 0
 26286              		.cfi_startproc
 26287              		@ args = 0, pretend = 0, frame = 16
 26288              		@ frame_needed = 1, uses_anonymous_args = 0
 26289              		@ link register save eliminated.
 26290 0fb4 80B4     		push	{r7}
 26291              	.LCFI126:
 26292              		.cfi_def_cfa_offset 4
 26293 0fb6 85B0     		sub	sp, sp, #20
 26294              	.LCFI127:
 26295              		.cfi_def_cfa_offset 24
 26296 0fb8 00AF     		add	r7, sp, #0
 26297              		.cfi_offset 7, -4
 26298              	.LCFI128:
 26299              		.cfi_def_cfa_register 7
 26300 0fba 7860     		str	r0, [r7, #4]
 26301 0fbc 0B46     		mov	r3, r1
 26302 0fbe 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26303              		.loc 1 1614 0
 26304 0fc0 4FF00003 		mov	r3, #0
 26305 0fc4 FB81     		strh	r3, [r7, #14]	@ movhi
1615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26306              		.loc 1 1619 0
 26307 0fc6 7B68     		ldr	r3, [r7, #4]
 26308 0fc8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26309 0fca FB81     		strh	r3, [r7, #14]	@ movhi
1620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 26310              		.loc 1 1622 0
 26311 0fcc FB89     		ldrh	r3, [r7, #14]	@ movhi
 26312 0fce 23F00803 		bic	r3, r3, #8
 26313 0fd2 FB81     		strh	r3, [r7, #14]	@ movhi
1623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 26314              		.loc 1 1623 0
 26315 0fd4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26316 0fd6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26317 0fd8 42EA0303 		orr	r3, r2, r3
 26318 0fdc FB81     		strh	r3, [r7, #14]	@ movhi
1624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26319              		.loc 1 1626 0
 26320 0fde 7B68     		ldr	r3, [r7, #4]
 26321 0fe0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26322 0fe2 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26323              		.loc 1 1627 0
 26324 0fe4 07F11407 		add	r7, r7, #20
 26325 0fe8 BD46     		mov	sp, r7
 26326 0fea 80BC     		pop	{r7}
 26327 0fec 7047     		bx	lr
 26328              		.cfi_endproc
 26329              	.LFE71:
 26331 0fee 00BF     		.align	2
 26332              		.global	TIM_OC2PolarityConfig
 26333              		.thumb
 26334              		.thumb_func
 26336              	TIM_OC2PolarityConfig:
 26337              	.LFB72:
1628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26338              		.loc 1 1640 0
 26339              		.cfi_startproc
 26340              		@ args = 0, pretend = 0, frame = 16
 26341              		@ frame_needed = 1, uses_anonymous_args = 0
 26342              		@ link register save eliminated.
 26343 0ff0 80B4     		push	{r7}
 26344              	.LCFI129:
 26345              		.cfi_def_cfa_offset 4
 26346 0ff2 85B0     		sub	sp, sp, #20
 26347              	.LCFI130:
 26348              		.cfi_def_cfa_offset 24
 26349 0ff4 00AF     		add	r7, sp, #0
 26350              		.cfi_offset 7, -4
 26351              	.LCFI131:
 26352              		.cfi_def_cfa_register 7
 26353 0ff6 7860     		str	r0, [r7, #4]
 26354 0ff8 0B46     		mov	r3, r1
 26355 0ffa 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26356              		.loc 1 1641 0
 26357 0ffc 4FF00003 		mov	r3, #0
 26358 1000 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26359              		.loc 1 1647 0
 26360 1002 7B68     		ldr	r3, [r7, #4]
 26361 1004 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26362 1006 FB81     		strh	r3, [r7, #14]	@ movhi
1648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 26363              		.loc 1 1650 0
 26364 1008 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26365 100a 23F02003 		bic	r3, r3, #32
 26366 100e FB81     		strh	r3, [r7, #14]	@ movhi
1651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 26367              		.loc 1 1651 0
 26368 1010 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26369 1012 4FEA0313 		lsl	r3, r3, #4
 26370 1016 9AB2     		uxth	r2, r3
 26371 1018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26372 101a 42EA0303 		orr	r3, r2, r3
 26373 101e FB81     		strh	r3, [r7, #14]	@ movhi
1652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26374              		.loc 1 1654 0
 26375 1020 7B68     		ldr	r3, [r7, #4]
 26376 1022 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26377 1024 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26378              		.loc 1 1655 0
 26379 1026 07F11407 		add	r7, r7, #20
 26380 102a BD46     		mov	sp, r7
 26381 102c 80BC     		pop	{r7}
 26382 102e 7047     		bx	lr
 26383              		.cfi_endproc
 26384              	.LFE72:
 26386              		.align	2
 26387              		.global	TIM_OC2NPolarityConfig
 26388              		.thumb
 26389              		.thumb_func
 26391              	TIM_OC2NPolarityConfig:
 26392              	.LFB73:
1656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26393              		.loc 1 1667 0
 26394              		.cfi_startproc
 26395              		@ args = 0, pretend = 0, frame = 16
 26396              		@ frame_needed = 1, uses_anonymous_args = 0
 26397              		@ link register save eliminated.
 26398 1030 80B4     		push	{r7}
 26399              	.LCFI132:
 26400              		.cfi_def_cfa_offset 4
 26401 1032 85B0     		sub	sp, sp, #20
 26402              	.LCFI133:
 26403              		.cfi_def_cfa_offset 24
 26404 1034 00AF     		add	r7, sp, #0
 26405              		.cfi_offset 7, -4
 26406              	.LCFI134:
 26407              		.cfi_def_cfa_register 7
 26408 1036 7860     		str	r0, [r7, #4]
 26409 1038 0B46     		mov	r3, r1
 26410 103a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26411              		.loc 1 1668 0
 26412 103c 4FF00003 		mov	r3, #0
 26413 1040 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26414              		.loc 1 1674 0
 26415 1042 7B68     		ldr	r3, [r7, #4]
 26416 1044 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26417 1046 FB81     		strh	r3, [r7, #14]	@ movhi
1675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 26418              		.loc 1 1677 0
 26419 1048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26420 104a 23F08003 		bic	r3, r3, #128
 26421 104e FB81     		strh	r3, [r7, #14]	@ movhi
1678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 26422              		.loc 1 1678 0
 26423 1050 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26424 1052 4FEA0313 		lsl	r3, r3, #4
 26425 1056 9AB2     		uxth	r2, r3
 26426 1058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26427 105a 42EA0303 		orr	r3, r2, r3
 26428 105e FB81     		strh	r3, [r7, #14]	@ movhi
1679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26429              		.loc 1 1681 0
 26430 1060 7B68     		ldr	r3, [r7, #4]
 26431 1062 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26432 1064 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26433              		.loc 1 1682 0
 26434 1066 07F11407 		add	r7, r7, #20
 26435 106a BD46     		mov	sp, r7
 26436 106c 80BC     		pop	{r7}
 26437 106e 7047     		bx	lr
 26438              		.cfi_endproc
 26439              	.LFE73:
 26441              		.align	2
 26442              		.global	TIM_OC3PolarityConfig
 26443              		.thumb
 26444              		.thumb_func
 26446              	TIM_OC3PolarityConfig:
 26447              	.LFB74:
1683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26448              		.loc 1 1694 0
 26449              		.cfi_startproc
 26450              		@ args = 0, pretend = 0, frame = 16
 26451              		@ frame_needed = 1, uses_anonymous_args = 0
 26452              		@ link register save eliminated.
 26453 1070 80B4     		push	{r7}
 26454              	.LCFI135:
 26455              		.cfi_def_cfa_offset 4
 26456 1072 85B0     		sub	sp, sp, #20
 26457              	.LCFI136:
 26458              		.cfi_def_cfa_offset 24
 26459 1074 00AF     		add	r7, sp, #0
 26460              		.cfi_offset 7, -4
 26461              	.LCFI137:
 26462              		.cfi_def_cfa_register 7
 26463 1076 7860     		str	r0, [r7, #4]
 26464 1078 0B46     		mov	r3, r1
 26465 107a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26466              		.loc 1 1695 0
 26467 107c 4FF00003 		mov	r3, #0
 26468 1080 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26469              		.loc 1 1701 0
 26470 1082 7B68     		ldr	r3, [r7, #4]
 26471 1084 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26472 1086 FB81     		strh	r3, [r7, #14]	@ movhi
1702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 26473              		.loc 1 1704 0
 26474 1088 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26475 108a 23F40073 		bic	r3, r3, #512
 26476 108e FB81     		strh	r3, [r7, #14]	@ movhi
1705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 26477              		.loc 1 1705 0
 26478 1090 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26479 1092 4FEA0323 		lsl	r3, r3, #8
 26480 1096 9AB2     		uxth	r2, r3
 26481 1098 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26482 109a 42EA0303 		orr	r3, r2, r3
 26483 109e FB81     		strh	r3, [r7, #14]	@ movhi
1706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26484              		.loc 1 1708 0
 26485 10a0 7B68     		ldr	r3, [r7, #4]
 26486 10a2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26487 10a4 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26488              		.loc 1 1709 0
 26489 10a6 07F11407 		add	r7, r7, #20
 26490 10aa BD46     		mov	sp, r7
 26491 10ac 80BC     		pop	{r7}
 26492 10ae 7047     		bx	lr
 26493              		.cfi_endproc
 26494              	.LFE74:
 26496              		.align	2
 26497              		.global	TIM_OC3NPolarityConfig
 26498              		.thumb
 26499              		.thumb_func
 26501              	TIM_OC3NPolarityConfig:
 26502              	.LFB75:
1710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26503              		.loc 1 1721 0
 26504              		.cfi_startproc
 26505              		@ args = 0, pretend = 0, frame = 16
 26506              		@ frame_needed = 1, uses_anonymous_args = 0
 26507              		@ link register save eliminated.
 26508 10b0 80B4     		push	{r7}
 26509              	.LCFI138:
 26510              		.cfi_def_cfa_offset 4
 26511 10b2 85B0     		sub	sp, sp, #20
 26512              	.LCFI139:
 26513              		.cfi_def_cfa_offset 24
 26514 10b4 00AF     		add	r7, sp, #0
 26515              		.cfi_offset 7, -4
 26516              	.LCFI140:
 26517              		.cfi_def_cfa_register 7
 26518 10b6 7860     		str	r0, [r7, #4]
 26519 10b8 0B46     		mov	r3, r1
 26520 10ba 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26521              		.loc 1 1722 0
 26522 10bc 4FF00003 		mov	r3, #0
 26523 10c0 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
1724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
1728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26524              		.loc 1 1728 0
 26525 10c2 7B68     		ldr	r3, [r7, #4]
 26526 10c4 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26527 10c6 FB81     		strh	r3, [r7, #14]	@ movhi
1729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 26528              		.loc 1 1731 0
 26529 10c8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26530 10ca 23F40063 		bic	r3, r3, #2048
 26531 10ce FB81     		strh	r3, [r7, #14]	@ movhi
1732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 26532              		.loc 1 1732 0
 26533 10d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26534 10d2 4FEA0323 		lsl	r3, r3, #8
 26535 10d6 9AB2     		uxth	r2, r3
 26536 10d8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26537 10da 42EA0303 		orr	r3, r2, r3
 26538 10de FB81     		strh	r3, [r7, #14]	@ movhi
1733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26539              		.loc 1 1735 0
 26540 10e0 7B68     		ldr	r3, [r7, #4]
 26541 10e2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26542 10e4 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26543              		.loc 1 1736 0
 26544 10e6 07F11407 		add	r7, r7, #20
 26545 10ea BD46     		mov	sp, r7
 26546 10ec 80BC     		pop	{r7}
 26547 10ee 7047     		bx	lr
 26548              		.cfi_endproc
 26549              	.LFE75:
 26551              		.align	2
 26552              		.global	TIM_OC4PolarityConfig
 26553              		.thumb
 26554              		.thumb_func
 26556              	TIM_OC4PolarityConfig:
 26557              	.LFB76:
1737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26558              		.loc 1 1748 0
 26559              		.cfi_startproc
 26560              		@ args = 0, pretend = 0, frame = 16
 26561              		@ frame_needed = 1, uses_anonymous_args = 0
 26562              		@ link register save eliminated.
 26563 10f0 80B4     		push	{r7}
 26564              	.LCFI141:
 26565              		.cfi_def_cfa_offset 4
 26566 10f2 85B0     		sub	sp, sp, #20
 26567              	.LCFI142:
 26568              		.cfi_def_cfa_offset 24
 26569 10f4 00AF     		add	r7, sp, #0
 26570              		.cfi_offset 7, -4
 26571              	.LCFI143:
 26572              		.cfi_def_cfa_register 7
 26573 10f6 7860     		str	r0, [r7, #4]
 26574 10f8 0B46     		mov	r3, r1
 26575 10fa 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 26576              		.loc 1 1749 0
 26577 10fc 4FF00003 		mov	r3, #0
 26578 1100 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 26579              		.loc 1 1755 0
 26580 1102 7B68     		ldr	r3, [r7, #4]
 26581 1104 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26582 1106 FB81     		strh	r3, [r7, #14]	@ movhi
1756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 26583              		.loc 1 1758 0
 26584 1108 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26585 110a 23F40053 		bic	r3, r3, #8192
 26586 110e FB81     		strh	r3, [r7, #14]	@ movhi
1759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 26587              		.loc 1 1759 0
 26588 1110 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26589 1112 4FEA0333 		lsl	r3, r3, #12
 26590 1116 9AB2     		uxth	r2, r3
 26591 1118 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26592 111a 42EA0303 		orr	r3, r2, r3
 26593 111e FB81     		strh	r3, [r7, #14]	@ movhi
1760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 26594              		.loc 1 1762 0
 26595 1120 7B68     		ldr	r3, [r7, #4]
 26596 1122 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26597 1124 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26598              		.loc 1 1763 0
 26599 1126 07F11407 		add	r7, r7, #20
 26600 112a BD46     		mov	sp, r7
 26601 112c 80BC     		pop	{r7}
 26602 112e 7047     		bx	lr
 26603              		.cfi_endproc
 26604              	.LFE76:
 26606              		.align	2
 26607              		.global	TIM_CCxCmd
 26608              		.thumb
 26609              		.thumb_func
 26611              	TIM_CCxCmd:
 26612              	.LFB77:
1764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26613              		.loc 1 1779 0
 26614              		.cfi_startproc
 26615              		@ args = 0, pretend = 0, frame = 16
 26616              		@ frame_needed = 1, uses_anonymous_args = 0
 26617              		@ link register save eliminated.
 26618 1130 80B4     		push	{r7}
 26619              	.LCFI144:
 26620              		.cfi_def_cfa_offset 4
 26621 1132 85B0     		sub	sp, sp, #20
 26622              	.LCFI145:
 26623              		.cfi_def_cfa_offset 24
 26624 1134 00AF     		add	r7, sp, #0
 26625              		.cfi_offset 7, -4
 26626              	.LCFI146:
 26627              		.cfi_def_cfa_register 7
 26628 1136 7860     		str	r0, [r7, #4]
 26629 1138 1346     		mov	r3, r2
 26630 113a 0A46     		mov	r2, r1	@ movhi
 26631 113c 7A80     		strh	r2, [r7, #2]	@ movhi
 26632 113e 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp = 0;
 26633              		.loc 1 1780 0
 26634 1140 4FF00003 		mov	r3, #0
 26635 1144 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 26636              		.loc 1 1787 0
 26637 1146 7B88     		ldrh	r3, [r7, #2]
 26638 1148 4FF00102 		mov	r2, #1
 26639 114c 02FA03F3 		lsl	r3, r2, r3
 26640 1150 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 26641              		.loc 1 1790 0
 26642 1152 7B68     		ldr	r3, [r7, #4]
 26643 1154 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26644 1156 9AB2     		uxth	r2, r3
 26645 1158 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26646 115a 6FEA0303 		mvn	r3, r3
 26647 115e 9BB2     		uxth	r3, r3
 26648 1160 02EA0303 		and	r3, r2, r3
 26649 1164 9AB2     		uxth	r2, r3
 26650 1166 7B68     		ldr	r3, [r7, #4]
 26651 1168 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 26652              		.loc 1 1793 0
 26653 116a 7B68     		ldr	r3, [r7, #4]
 26654 116c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26655 116e 9AB2     		uxth	r2, r3
 26656 1170 3988     		ldrh	r1, [r7, #0]
 26657 1172 7B88     		ldrh	r3, [r7, #2]
 26658 1174 01FA03F3 		lsl	r3, r1, r3
 26659 1178 9BB2     		uxth	r3, r3
 26660 117a 42EA0303 		orr	r3, r2, r3
 26661 117e 9AB2     		uxth	r2, r3
 26662 1180 7B68     		ldr	r3, [r7, #4]
 26663 1182 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26664              		.loc 1 1794 0
 26665 1184 07F11407 		add	r7, r7, #20
 26666 1188 BD46     		mov	sp, r7
 26667 118a 80BC     		pop	{r7}
 26668 118c 7047     		bx	lr
 26669              		.cfi_endproc
 26670              	.LFE77:
 26672 118e 00BF     		.align	2
 26673              		.global	TIM_CCxNCmd
 26674              		.thumb
 26675              		.thumb_func
 26677              	TIM_CCxNCmd:
 26678              	.LFB78:
1795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26679              		.loc 1 1809 0
 26680              		.cfi_startproc
 26681              		@ args = 0, pretend = 0, frame = 16
 26682              		@ frame_needed = 1, uses_anonymous_args = 0
 26683              		@ link register save eliminated.
 26684 1190 80B4     		push	{r7}
 26685              	.LCFI147:
 26686              		.cfi_def_cfa_offset 4
 26687 1192 85B0     		sub	sp, sp, #20
 26688              	.LCFI148:
 26689              		.cfi_def_cfa_offset 24
 26690 1194 00AF     		add	r7, sp, #0
 26691              		.cfi_offset 7, -4
 26692              	.LCFI149:
 26693              		.cfi_def_cfa_register 7
 26694 1196 7860     		str	r0, [r7, #4]
 26695 1198 1346     		mov	r3, r2
 26696 119a 0A46     		mov	r2, r1	@ movhi
 26697 119c 7A80     		strh	r2, [r7, #2]	@ movhi
 26698 119e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp = 0;
 26699              		.loc 1 1810 0
 26700 11a0 4FF00003 		mov	r3, #0
 26701 11a4 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 26702              		.loc 1 1817 0
 26703 11a6 7B88     		ldrh	r3, [r7, #2]
 26704 11a8 4FF00402 		mov	r2, #4
 26705 11ac 02FA03F3 		lsl	r3, r2, r3
 26706 11b0 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 26707              		.loc 1 1820 0
 26708 11b2 7B68     		ldr	r3, [r7, #4]
 26709 11b4 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26710 11b6 9AB2     		uxth	r2, r3
 26711 11b8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26712 11ba 6FEA0303 		mvn	r3, r3
 26713 11be 9BB2     		uxth	r3, r3
 26714 11c0 02EA0303 		and	r3, r2, r3
 26715 11c4 9AB2     		uxth	r2, r3
 26716 11c6 7B68     		ldr	r3, [r7, #4]
 26717 11c8 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 26718              		.loc 1 1823 0
 26719 11ca 7B68     		ldr	r3, [r7, #4]
 26720 11cc 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26721 11ce 9AB2     		uxth	r2, r3
 26722 11d0 3988     		ldrh	r1, [r7, #0]
 26723 11d2 7B88     		ldrh	r3, [r7, #2]
 26724 11d4 01FA03F3 		lsl	r3, r1, r3
 26725 11d8 9BB2     		uxth	r3, r3
 26726 11da 42EA0303 		orr	r3, r2, r3
 26727 11de 9AB2     		uxth	r2, r3
 26728 11e0 7B68     		ldr	r3, [r7, #4]
 26729 11e2 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26730              		.loc 1 1824 0
 26731 11e4 07F11407 		add	r7, r7, #20
 26732 11e8 BD46     		mov	sp, r7
 26733 11ea 80BC     		pop	{r7}
 26734 11ec 7047     		bx	lr
 26735              		.cfi_endproc
 26736              	.LFE78:
 26738 11ee 00BF     		.align	2
 26739              		.global	TIM_ICInit
 26740              		.thumb
 26741              		.thumb_func
 26743              	TIM_ICInit:
 26744              	.LFB79:
1825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
1827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
1832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
1833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
1834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                       Input Capture management functions
1835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
1836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
1838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
1840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           or,
1863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
1879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
1880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26745              		.loc 1 1891 0
 26746              		.cfi_startproc
 26747              		@ args = 0, pretend = 0, frame = 8
 26748              		@ frame_needed = 1, uses_anonymous_args = 0
 26749 11f0 80B5     		push	{r7, lr}
 26750              	.LCFI150:
 26751              		.cfi_def_cfa_offset 8
 26752 11f2 82B0     		sub	sp, sp, #8
 26753              	.LCFI151:
 26754              		.cfi_def_cfa_offset 16
 26755 11f4 00AF     		add	r7, sp, #0
 26756              		.cfi_offset 14, -4
 26757              		.cfi_offset 7, -8
 26758              	.LCFI152:
 26759              		.cfi_def_cfa_register 7
 26760 11f6 7860     		str	r0, [r7, #4]
 26761 11f8 3960     		str	r1, [r7, #0]
1892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 26762              		.loc 1 1899 0
 26763 11fa 3B68     		ldr	r3, [r7, #0]
 26764 11fc 1B88     		ldrh	r3, [r3, #0]
 26765 11fe 002B     		cmp	r3, #0
 26766 1200 0FD1     		bne	.L90
1900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26767              		.loc 1 1902 0
 26768 1202 3B68     		ldr	r3, [r7, #0]
 26769 1204 5988     		ldrh	r1, [r3, #2]
1903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 26770              		.loc 1 1903 0
 26771 1206 3B68     		ldr	r3, [r7, #0]
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26772              		.loc 1 1902 0
 26773 1208 9A88     		ldrh	r2, [r3, #4]
1904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 26774              		.loc 1 1904 0
 26775 120a 3B68     		ldr	r3, [r7, #0]
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26776              		.loc 1 1902 0
 26777 120c 1B89     		ldrh	r3, [r3, #8]
 26778 120e 7868     		ldr	r0, [r7, #4]
 26779 1210 00F0DEFC 		bl	TI1_Config
1905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 26780              		.loc 1 1906 0
 26781 1214 3B68     		ldr	r3, [r7, #0]
 26782 1216 DB88     		ldrh	r3, [r3, #6]
 26783 1218 7868     		ldr	r0, [r7, #4]
 26784 121a 1946     		mov	r1, r3
 26785 121c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 26786 1220 36E0     		b	.L89
 26787              	.L90:
1907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 26788              		.loc 1 1908 0
 26789 1222 3B68     		ldr	r3, [r7, #0]
 26790 1224 1B88     		ldrh	r3, [r3, #0]
 26791 1226 042B     		cmp	r3, #4
 26792 1228 0FD1     		bne	.L92
1909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26793              		.loc 1 1911 0
 26794 122a 3B68     		ldr	r3, [r7, #0]
 26795 122c 5988     		ldrh	r1, [r3, #2]
1912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 26796              		.loc 1 1912 0
 26797 122e 3B68     		ldr	r3, [r7, #0]
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26798              		.loc 1 1911 0
 26799 1230 9A88     		ldrh	r2, [r3, #4]
1913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 26800              		.loc 1 1913 0
 26801 1232 3B68     		ldr	r3, [r7, #0]
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26802              		.loc 1 1911 0
 26803 1234 1B89     		ldrh	r3, [r3, #8]
 26804 1236 7868     		ldr	r0, [r7, #4]
 26805 1238 00F00CFD 		bl	TI2_Config
1914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 26806              		.loc 1 1915 0
 26807 123c 3B68     		ldr	r3, [r7, #0]
 26808 123e DB88     		ldrh	r3, [r3, #6]
 26809 1240 7868     		ldr	r0, [r7, #4]
 26810 1242 1946     		mov	r1, r3
 26811 1244 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 26812 1248 22E0     		b	.L89
 26813              	.L92:
1916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 26814              		.loc 1 1917 0
 26815 124a 3B68     		ldr	r3, [r7, #0]
 26816 124c 1B88     		ldrh	r3, [r3, #0]
 26817 124e 082B     		cmp	r3, #8
 26818 1250 0FD1     		bne	.L93
1918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI3 Configuration */
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 26819              		.loc 1 1920 0
 26820 1252 3B68     		ldr	r3, [r7, #0]
 26821 1254 5988     		ldrh	r1, [r3, #2]
1921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 26822              		.loc 1 1921 0
 26823 1256 3B68     		ldr	r3, [r7, #0]
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 26824              		.loc 1 1920 0
 26825 1258 9A88     		ldrh	r2, [r3, #4]
1922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 26826              		.loc 1 1922 0
 26827 125a 3B68     		ldr	r3, [r7, #0]
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 26828              		.loc 1 1920 0
 26829 125c 1B89     		ldrh	r3, [r3, #8]
 26830 125e 7868     		ldr	r0, [r7, #4]
 26831 1260 00F04AFD 		bl	TI3_Config
1923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 26832              		.loc 1 1924 0
 26833 1264 3B68     		ldr	r3, [r7, #0]
 26834 1266 DB88     		ldrh	r3, [r3, #6]
 26835 1268 7868     		ldr	r0, [r7, #4]
 26836 126a 1946     		mov	r1, r3
 26837 126c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 26838 1270 0EE0     		b	.L89
 26839              	.L93:
1925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI4 Configuration */
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26840              		.loc 1 1929 0
 26841 1272 3B68     		ldr	r3, [r7, #0]
 26842 1274 5988     		ldrh	r1, [r3, #2]
1930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 26843              		.loc 1 1930 0
 26844 1276 3B68     		ldr	r3, [r7, #0]
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26845              		.loc 1 1929 0
 26846 1278 9A88     		ldrh	r2, [r3, #4]
1931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 26847              		.loc 1 1931 0
 26848 127a 3B68     		ldr	r3, [r7, #0]
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 26849              		.loc 1 1929 0
 26850 127c 1B89     		ldrh	r3, [r3, #8]
 26851 127e 7868     		ldr	r0, [r7, #4]
 26852 1280 00F084FD 		bl	TI4_Config
1932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 26853              		.loc 1 1933 0
 26854 1284 3B68     		ldr	r3, [r7, #0]
 26855 1286 DB88     		ldrh	r3, [r3, #6]
 26856 1288 7868     		ldr	r0, [r7, #4]
 26857 128a 1946     		mov	r1, r3
 26858 128c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 26859              	.L89:
1934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26860              		.loc 1 1935 0
 26861 1290 07F10807 		add	r7, r7, #8
 26862 1294 BD46     		mov	sp, r7
 26863 1296 80BD     		pop	{r7, pc}
 26864              		.cfi_endproc
 26865              	.LFE79:
 26867              		.align	2
 26868              		.global	TIM_ICStructInit
 26869              		.thumb
 26870              		.thumb_func
 26872              	TIM_ICStructInit:
 26873              	.LFB80:
1936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         be initialized.
1941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26874              		.loc 1 1944 0
 26875              		.cfi_startproc
 26876              		@ args = 0, pretend = 0, frame = 8
 26877              		@ frame_needed = 1, uses_anonymous_args = 0
 26878              		@ link register save eliminated.
 26879 1298 80B4     		push	{r7}
 26880              	.LCFI153:
 26881              		.cfi_def_cfa_offset 4
 26882 129a 83B0     		sub	sp, sp, #12
 26883              	.LCFI154:
 26884              		.cfi_def_cfa_offset 16
 26885 129c 00AF     		add	r7, sp, #0
 26886              		.cfi_offset 7, -4
 26887              	.LCFI155:
 26888              		.cfi_def_cfa_register 7
 26889 129e 7860     		str	r0, [r7, #4]
1945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
1946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 26890              		.loc 1 1946 0
 26891 12a0 7B68     		ldr	r3, [r7, #4]
 26892 12a2 4FF00002 		mov	r2, #0
 26893 12a6 1A80     		strh	r2, [r3, #0]	@ movhi
1947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 26894              		.loc 1 1947 0
 26895 12a8 7B68     		ldr	r3, [r7, #4]
 26896 12aa 4FF00002 		mov	r2, #0
 26897 12ae 5A80     		strh	r2, [r3, #2]	@ movhi
1948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 26898              		.loc 1 1948 0
 26899 12b0 7B68     		ldr	r3, [r7, #4]
 26900 12b2 4FF00102 		mov	r2, #1
 26901 12b6 9A80     		strh	r2, [r3, #4]	@ movhi
1949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 26902              		.loc 1 1949 0
 26903 12b8 7B68     		ldr	r3, [r7, #4]
 26904 12ba 4FF00002 		mov	r2, #0
 26905 12be DA80     		strh	r2, [r3, #6]	@ movhi
1950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 26906              		.loc 1 1950 0
 26907 12c0 7B68     		ldr	r3, [r7, #4]
 26908 12c2 4FF00002 		mov	r2, #0
 26909 12c6 1A81     		strh	r2, [r3, #8]	@ movhi
1951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 26910              		.loc 1 1951 0
 26911 12c8 07F10C07 		add	r7, r7, #12
 26912 12cc BD46     		mov	sp, r7
 26913 12ce 80BC     		pop	{r7}
 26914 12d0 7047     		bx	lr
 26915              		.cfi_endproc
 26916              	.LFE80:
 26918 12d2 00BF     		.align	2
 26919              		.global	TIM_PWMIConfig
 26920              		.thumb
 26921              		.thumb_func
 26923              	TIM_PWMIConfig:
 26924              	.LFB81:
1952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 26925              		.loc 1 1963 0
 26926              		.cfi_startproc
 26927              		@ args = 0, pretend = 0, frame = 16
 26928              		@ frame_needed = 1, uses_anonymous_args = 0
 26929 12d4 80B5     		push	{r7, lr}
 26930              	.LCFI156:
 26931              		.cfi_def_cfa_offset 8
 26932 12d6 84B0     		sub	sp, sp, #16
 26933              	.LCFI157:
 26934              		.cfi_def_cfa_offset 24
 26935 12d8 00AF     		add	r7, sp, #0
 26936              		.cfi_offset 14, -4
 26937              		.cfi_offset 7, -8
 26938              	.LCFI158:
 26939              		.cfi_def_cfa_register 7
 26940 12da 7860     		str	r0, [r7, #4]
 26941 12dc 3960     		str	r1, [r7, #0]
1964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 26942              		.loc 1 1964 0
 26943 12de 4FF00003 		mov	r3, #0
 26944 12e2 FB81     		strh	r3, [r7, #14]	@ movhi
1965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 26945              		.loc 1 1965 0
 26946 12e4 4FF00103 		mov	r3, #1
 26947 12e8 BB81     		strh	r3, [r7, #12]	@ movhi
1966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 26948              		.loc 1 1971 0
 26949 12ea 3B68     		ldr	r3, [r7, #0]
 26950 12ec 5B88     		ldrh	r3, [r3, #2]
 26951 12ee 002B     		cmp	r3, #0
 26952 12f0 03D1     		bne	.L96
1972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 26953              		.loc 1 1973 0
 26954 12f2 4FF00203 		mov	r3, #2
 26955 12f6 FB81     		strh	r3, [r7, #14]	@ movhi
 26956 12f8 02E0     		b	.L97
 26957              	.L96:
1974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 26958              		.loc 1 1977 0
 26959 12fa 4FF00003 		mov	r3, #0
 26960 12fe FB81     		strh	r3, [r7, #14]	@ movhi
 26961              	.L97:
1978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Opposite Input */
1980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 26962              		.loc 1 1980 0
 26963 1300 3B68     		ldr	r3, [r7, #0]
 26964 1302 9B88     		ldrh	r3, [r3, #4]
 26965 1304 012B     		cmp	r3, #1
 26966 1306 03D1     		bne	.L98
1981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 26967              		.loc 1 1982 0
 26968 1308 4FF00203 		mov	r3, #2
 26969 130c BB81     		strh	r3, [r7, #12]	@ movhi
 26970 130e 02E0     		b	.L99
 26971              	.L98:
1983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 26972              		.loc 1 1986 0
 26973 1310 4FF00103 		mov	r3, #1
 26974 1314 BB81     		strh	r3, [r7, #12]	@ movhi
 26975              	.L99:
1987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 26976              		.loc 1 1988 0
 26977 1316 3B68     		ldr	r3, [r7, #0]
 26978 1318 1B88     		ldrh	r3, [r3, #0]
 26979 131a 002B     		cmp	r3, #0
 26980 131c 1CD1     		bne	.L100
1989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
1991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 26981              		.loc 1 1991 0
 26982 131e 3B68     		ldr	r3, [r7, #0]
 26983 1320 5988     		ldrh	r1, [r3, #2]
 26984 1322 3B68     		ldr	r3, [r7, #0]
 26985 1324 9A88     		ldrh	r2, [r3, #4]
1992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 26986              		.loc 1 1992 0
 26987 1326 3B68     		ldr	r3, [r7, #0]
1991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 26988              		.loc 1 1991 0
 26989 1328 1B89     		ldrh	r3, [r3, #8]
 26990 132a 7868     		ldr	r0, [r7, #4]
 26991 132c 00F050FC 		bl	TI1_Config
1993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 26992              		.loc 1 1994 0
 26993 1330 3B68     		ldr	r3, [r7, #0]
 26994 1332 DB88     		ldrh	r3, [r3, #6]
 26995 1334 7868     		ldr	r0, [r7, #4]
 26996 1336 1946     		mov	r1, r3
 26997 1338 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
1996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 26998              		.loc 1 1996 0
 26999 133c 3B68     		ldr	r3, [r7, #0]
 27000 133e 1B89     		ldrh	r3, [r3, #8]
 27001 1340 F989     		ldrh	r1, [r7, #14]
 27002 1342 BA89     		ldrh	r2, [r7, #12]
 27003 1344 7868     		ldr	r0, [r7, #4]
 27004 1346 00F085FC 		bl	TI2_Config
1997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 27005              		.loc 1 1998 0
 27006 134a 3B68     		ldr	r3, [r7, #0]
 27007 134c DB88     		ldrh	r3, [r3, #6]
 27008 134e 7868     		ldr	r0, [r7, #4]
 27009 1350 1946     		mov	r1, r3
 27010 1352 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 27011 1356 1BE0     		b	.L95
 27012              	.L100:
1999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
2002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
2003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 27013              		.loc 1 2003 0
 27014 1358 3B68     		ldr	r3, [r7, #0]
 27015 135a 5988     		ldrh	r1, [r3, #2]
 27016 135c 3B68     		ldr	r3, [r7, #0]
 27017 135e 9A88     		ldrh	r2, [r3, #4]
2004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 27018              		.loc 1 2004 0
 27019 1360 3B68     		ldr	r3, [r7, #0]
2003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 27020              		.loc 1 2003 0
 27021 1362 1B89     		ldrh	r3, [r3, #8]
 27022 1364 7868     		ldr	r0, [r7, #4]
 27023 1366 00F075FC 		bl	TI2_Config
2005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 27024              		.loc 1 2006 0
 27025 136a 3B68     		ldr	r3, [r7, #0]
 27026 136c DB88     		ldrh	r3, [r3, #6]
 27027 136e 7868     		ldr	r0, [r7, #4]
 27028 1370 1946     		mov	r1, r3
 27029 1372 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
2008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 27030              		.loc 1 2008 0
 27031 1376 3B68     		ldr	r3, [r7, #0]
 27032 1378 1B89     		ldrh	r3, [r3, #8]
 27033 137a F989     		ldrh	r1, [r7, #14]
 27034 137c BA89     		ldrh	r2, [r7, #12]
 27035 137e 7868     		ldr	r0, [r7, #4]
 27036 1380 00F026FC 		bl	TI1_Config
2009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 27037              		.loc 1 2010 0
 27038 1384 3B68     		ldr	r3, [r7, #0]
 27039 1386 DB88     		ldrh	r3, [r3, #6]
 27040 1388 7868     		ldr	r0, [r7, #4]
 27041 138a 1946     		mov	r1, r3
 27042 138c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 27043              	.L95:
2011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27044              		.loc 1 2012 0
 27045 1390 07F11007 		add	r7, r7, #16
 27046 1394 BD46     		mov	sp, r7
 27047 1396 80BD     		pop	{r7, pc}
 27048              		.cfi_endproc
 27049              	.LFE81:
 27051              		.align	2
 27052              		.global	TIM_GetCapture1
 27053              		.thumb
 27054              		.thumb_func
 27056              	TIM_GetCapture1:
 27057              	.LFB82:
2013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27058              		.loc 1 2020 0
 27059              		.cfi_startproc
 27060              		@ args = 0, pretend = 0, frame = 8
 27061              		@ frame_needed = 1, uses_anonymous_args = 0
 27062              		@ link register save eliminated.
 27063 1398 80B4     		push	{r7}
 27064              	.LCFI159:
 27065              		.cfi_def_cfa_offset 4
 27066 139a 83B0     		sub	sp, sp, #12
 27067              	.LCFI160:
 27068              		.cfi_def_cfa_offset 16
 27069 139c 00AF     		add	r7, sp, #0
 27070              		.cfi_offset 7, -4
 27071              	.LCFI161:
 27072              		.cfi_def_cfa_register 7
 27073 139e 7860     		str	r0, [r7, #4]
2021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 1 Register value */
2025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR1;
 27074              		.loc 1 2025 0
 27075 13a0 7B68     		ldr	r3, [r7, #4]
 27076 13a2 5B6B     		ldr	r3, [r3, #52]
2026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27077              		.loc 1 2026 0
 27078 13a4 1846     		mov	r0, r3
 27079 13a6 07F10C07 		add	r7, r7, #12
 27080 13aa BD46     		mov	sp, r7
 27081 13ac 80BC     		pop	{r7}
 27082 13ae 7047     		bx	lr
 27083              		.cfi_endproc
 27084              	.LFE82:
 27086              		.align	2
 27087              		.global	TIM_GetCapture2
 27088              		.thumb
 27089              		.thumb_func
 27091              	TIM_GetCapture2:
 27092              	.LFB83:
2027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27093              		.loc 1 2035 0
 27094              		.cfi_startproc
 27095              		@ args = 0, pretend = 0, frame = 8
 27096              		@ frame_needed = 1, uses_anonymous_args = 0
 27097              		@ link register save eliminated.
 27098 13b0 80B4     		push	{r7}
 27099              	.LCFI162:
 27100              		.cfi_def_cfa_offset 4
 27101 13b2 83B0     		sub	sp, sp, #12
 27102              	.LCFI163:
 27103              		.cfi_def_cfa_offset 16
 27104 13b4 00AF     		add	r7, sp, #0
 27105              		.cfi_offset 7, -4
 27106              	.LCFI164:
 27107              		.cfi_def_cfa_register 7
 27108 13b6 7860     		str	r0, [r7, #4]
2036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 2 Register value */
2040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR2;
 27109              		.loc 1 2040 0
 27110 13b8 7B68     		ldr	r3, [r7, #4]
 27111 13ba 9B6B     		ldr	r3, [r3, #56]
2041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27112              		.loc 1 2041 0
 27113 13bc 1846     		mov	r0, r3
 27114 13be 07F10C07 		add	r7, r7, #12
 27115 13c2 BD46     		mov	sp, r7
 27116 13c4 80BC     		pop	{r7}
 27117 13c6 7047     		bx	lr
 27118              		.cfi_endproc
 27119              	.LFE83:
 27121              		.align	2
 27122              		.global	TIM_GetCapture3
 27123              		.thumb
 27124              		.thumb_func
 27126              	TIM_GetCapture3:
 27127              	.LFB84:
2042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27128              		.loc 1 2049 0
 27129              		.cfi_startproc
 27130              		@ args = 0, pretend = 0, frame = 8
 27131              		@ frame_needed = 1, uses_anonymous_args = 0
 27132              		@ link register save eliminated.
 27133 13c8 80B4     		push	{r7}
 27134              	.LCFI165:
 27135              		.cfi_def_cfa_offset 4
 27136 13ca 83B0     		sub	sp, sp, #12
 27137              	.LCFI166:
 27138              		.cfi_def_cfa_offset 16
 27139 13cc 00AF     		add	r7, sp, #0
 27140              		.cfi_offset 7, -4
 27141              	.LCFI167:
 27142              		.cfi_def_cfa_register 7
 27143 13ce 7860     		str	r0, [r7, #4]
2050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 3 Register value */
2054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR3;
 27144              		.loc 1 2054 0
 27145 13d0 7B68     		ldr	r3, [r7, #4]
 27146 13d2 DB6B     		ldr	r3, [r3, #60]
2055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27147              		.loc 1 2055 0
 27148 13d4 1846     		mov	r0, r3
 27149 13d6 07F10C07 		add	r7, r7, #12
 27150 13da BD46     		mov	sp, r7
 27151 13dc 80BC     		pop	{r7}
 27152 13de 7047     		bx	lr
 27153              		.cfi_endproc
 27154              	.LFE84:
 27156              		.align	2
 27157              		.global	TIM_GetCapture4
 27158              		.thumb
 27159              		.thumb_func
 27161              	TIM_GetCapture4:
 27162              	.LFB85:
2056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27163              		.loc 1 2063 0
 27164              		.cfi_startproc
 27165              		@ args = 0, pretend = 0, frame = 8
 27166              		@ frame_needed = 1, uses_anonymous_args = 0
 27167              		@ link register save eliminated.
 27168 13e0 80B4     		push	{r7}
 27169              	.LCFI168:
 27170              		.cfi_def_cfa_offset 4
 27171 13e2 83B0     		sub	sp, sp, #12
 27172              	.LCFI169:
 27173              		.cfi_def_cfa_offset 16
 27174 13e4 00AF     		add	r7, sp, #0
 27175              		.cfi_offset 7, -4
 27176              	.LCFI170:
 27177              		.cfi_def_cfa_register 7
 27178 13e6 7860     		str	r0, [r7, #4]
2064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 4 Register value */
2068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR4;
 27179              		.loc 1 2068 0
 27180 13e8 7B68     		ldr	r3, [r7, #4]
 27181 13ea 1B6C     		ldr	r3, [r3, #64]
2069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27182              		.loc 1 2069 0
 27183 13ec 1846     		mov	r0, r3
 27184 13ee 07F10C07 		add	r7, r7, #12
 27185 13f2 BD46     		mov	sp, r7
 27186 13f4 80BC     		pop	{r7}
 27187 13f6 7047     		bx	lr
 27188              		.cfi_endproc
 27189              	.LFE85:
 27191              		.align	2
 27192              		.global	TIM_SetIC1Prescaler
 27193              		.thumb
 27194              		.thumb_func
 27196              	TIM_SetIC1Prescaler:
 27197              	.LFB86:
2070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27198              		.loc 1 2083 0
 27199              		.cfi_startproc
 27200              		@ args = 0, pretend = 0, frame = 8
 27201              		@ frame_needed = 1, uses_anonymous_args = 0
 27202              		@ link register save eliminated.
 27203 13f8 80B4     		push	{r7}
 27204              	.LCFI171:
 27205              		.cfi_def_cfa_offset 4
 27206 13fa 83B0     		sub	sp, sp, #12
 27207              	.LCFI172:
 27208              		.cfi_def_cfa_offset 16
 27209 13fc 00AF     		add	r7, sp, #0
 27210              		.cfi_offset 7, -4
 27211              	.LCFI173:
 27212              		.cfi_def_cfa_register 7
 27213 13fe 7860     		str	r0, [r7, #4]
 27214 1400 0B46     		mov	r3, r1
 27215 1402 7B80     		strh	r3, [r7, #2]	@ movhi
2084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 27216              		.loc 1 2089 0
 27217 1404 7B68     		ldr	r3, [r7, #4]
 27218 1406 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27219 1408 9BB2     		uxth	r3, r3
 27220 140a 23F00C03 		bic	r3, r3, #12
 27221 140e 9AB2     		uxth	r2, r3
 27222 1410 7B68     		ldr	r3, [r7, #4]
 27223 1412 1A83     		strh	r2, [r3, #24]	@ movhi
2090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC1PSC value */
2092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 27224              		.loc 1 2092 0
 27225 1414 7B68     		ldr	r3, [r7, #4]
 27226 1416 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27227 1418 9AB2     		uxth	r2, r3
 27228 141a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27229 141c 42EA0303 		orr	r3, r2, r3
 27230 1420 9AB2     		uxth	r2, r3
 27231 1422 7B68     		ldr	r3, [r7, #4]
 27232 1424 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27233              		.loc 1 2093 0
 27234 1426 07F10C07 		add	r7, r7, #12
 27235 142a BD46     		mov	sp, r7
 27236 142c 80BC     		pop	{r7}
 27237 142e 7047     		bx	lr
 27238              		.cfi_endproc
 27239              	.LFE86:
 27241              		.align	2
 27242              		.global	TIM_SetIC2Prescaler
 27243              		.thumb
 27244              		.thumb_func
 27246              	TIM_SetIC2Prescaler:
 27247              	.LFB87:
2094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27248              		.loc 1 2108 0
 27249              		.cfi_startproc
 27250              		@ args = 0, pretend = 0, frame = 8
 27251              		@ frame_needed = 1, uses_anonymous_args = 0
 27252              		@ link register save eliminated.
 27253 1430 80B4     		push	{r7}
 27254              	.LCFI174:
 27255              		.cfi_def_cfa_offset 4
 27256 1432 83B0     		sub	sp, sp, #12
 27257              	.LCFI175:
 27258              		.cfi_def_cfa_offset 16
 27259 1434 00AF     		add	r7, sp, #0
 27260              		.cfi_offset 7, -4
 27261              	.LCFI176:
 27262              		.cfi_def_cfa_register 7
 27263 1436 7860     		str	r0, [r7, #4]
 27264 1438 0B46     		mov	r3, r1
 27265 143a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 27266              		.loc 1 2114 0
 27267 143c 7B68     		ldr	r3, [r7, #4]
 27268 143e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27269 1440 9BB2     		uxth	r3, r3
 27270 1442 23F44063 		bic	r3, r3, #3072
 27271 1446 9AB2     		uxth	r2, r3
 27272 1448 7B68     		ldr	r3, [r7, #4]
 27273 144a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC2PSC value */
2117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 27274              		.loc 1 2117 0
 27275 144c 7B68     		ldr	r3, [r7, #4]
 27276 144e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27277 1450 9AB2     		uxth	r2, r3
 27278 1452 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27279 1454 4FEA0323 		lsl	r3, r3, #8
 27280 1458 9BB2     		uxth	r3, r3
 27281 145a 42EA0303 		orr	r3, r2, r3
 27282 145e 9AB2     		uxth	r2, r3
 27283 1460 7B68     		ldr	r3, [r7, #4]
 27284 1462 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27285              		.loc 1 2118 0
 27286 1464 07F10C07 		add	r7, r7, #12
 27287 1468 BD46     		mov	sp, r7
 27288 146a 80BC     		pop	{r7}
 27289 146c 7047     		bx	lr
 27290              		.cfi_endproc
 27291              	.LFE87:
 27293 146e 00BF     		.align	2
 27294              		.global	TIM_SetIC3Prescaler
 27295              		.thumb
 27296              		.thumb_func
 27298              	TIM_SetIC3Prescaler:
 27299              	.LFB88:
2119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27300              		.loc 1 2132 0
 27301              		.cfi_startproc
 27302              		@ args = 0, pretend = 0, frame = 8
 27303              		@ frame_needed = 1, uses_anonymous_args = 0
 27304              		@ link register save eliminated.
 27305 1470 80B4     		push	{r7}
 27306              	.LCFI177:
 27307              		.cfi_def_cfa_offset 4
 27308 1472 83B0     		sub	sp, sp, #12
 27309              	.LCFI178:
 27310              		.cfi_def_cfa_offset 16
 27311 1474 00AF     		add	r7, sp, #0
 27312              		.cfi_offset 7, -4
 27313              	.LCFI179:
 27314              		.cfi_def_cfa_register 7
 27315 1476 7860     		str	r0, [r7, #4]
 27316 1478 0B46     		mov	r3, r1
 27317 147a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 27318              		.loc 1 2138 0
 27319 147c 7B68     		ldr	r3, [r7, #4]
 27320 147e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27321 1480 9BB2     		uxth	r3, r3
 27322 1482 23F00C03 		bic	r3, r3, #12
 27323 1486 9AB2     		uxth	r2, r3
 27324 1488 7B68     		ldr	r3, [r7, #4]
 27325 148a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC3PSC value */
2141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 27326              		.loc 1 2141 0
 27327 148c 7B68     		ldr	r3, [r7, #4]
 27328 148e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27329 1490 9AB2     		uxth	r2, r3
 27330 1492 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27331 1494 42EA0303 		orr	r3, r2, r3
 27332 1498 9AB2     		uxth	r2, r3
 27333 149a 7B68     		ldr	r3, [r7, #4]
 27334 149c 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27335              		.loc 1 2142 0
 27336 149e 07F10C07 		add	r7, r7, #12
 27337 14a2 BD46     		mov	sp, r7
 27338 14a4 80BC     		pop	{r7}
 27339 14a6 7047     		bx	lr
 27340              		.cfi_endproc
 27341              	.LFE88:
 27343              		.align	2
 27344              		.global	TIM_SetIC4Prescaler
 27345              		.thumb
 27346              		.thumb_func
 27348              	TIM_SetIC4Prescaler:
 27349              	.LFB89:
2143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 27350              		.loc 1 2156 0
 27351              		.cfi_startproc
 27352              		@ args = 0, pretend = 0, frame = 8
 27353              		@ frame_needed = 1, uses_anonymous_args = 0
 27354              		@ link register save eliminated.
 27355 14a8 80B4     		push	{r7}
 27356              	.LCFI180:
 27357              		.cfi_def_cfa_offset 4
 27358 14aa 83B0     		sub	sp, sp, #12
 27359              	.LCFI181:
 27360              		.cfi_def_cfa_offset 16
 27361 14ac 00AF     		add	r7, sp, #0
 27362              		.cfi_offset 7, -4
 27363              	.LCFI182:
 27364              		.cfi_def_cfa_register 7
 27365 14ae 7860     		str	r0, [r7, #4]
 27366 14b0 0B46     		mov	r3, r1
 27367 14b2 7B80     		strh	r3, [r7, #2]	@ movhi
2157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 27368              		.loc 1 2162 0
 27369 14b4 7B68     		ldr	r3, [r7, #4]
 27370 14b6 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27371 14b8 9BB2     		uxth	r3, r3
 27372 14ba 23F44063 		bic	r3, r3, #3072
 27373 14be 9AB2     		uxth	r2, r3
 27374 14c0 7B68     		ldr	r3, [r7, #4]
 27375 14c2 9A83     		strh	r2, [r3, #28]	@ movhi
2163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC4PSC value */
2165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 27376              		.loc 1 2165 0
 27377 14c4 7B68     		ldr	r3, [r7, #4]
 27378 14c6 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27379 14c8 9AB2     		uxth	r2, r3
 27380 14ca 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27381 14cc 4FEA0323 		lsl	r3, r3, #8
 27382 14d0 9BB2     		uxth	r3, r3
 27383 14d2 42EA0303 		orr	r3, r2, r3
 27384 14d6 9AB2     		uxth	r2, r3
 27385 14d8 7B68     		ldr	r3, [r7, #4]
 27386 14da 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27387              		.loc 1 2166 0
 27388 14dc 07F10C07 		add	r7, r7, #12
 27389 14e0 BD46     		mov	sp, r7
 27390 14e2 80BC     		pop	{r7}
 27391 14e4 7047     		bx	lr
 27392              		.cfi_endproc
 27393              	.LFE89:
 27395 14e6 00BF     		.align	2
 27396              		.global	TIM_BDTRConfig
 27397              		.thumb
 27398              		.thumb_func
 27400              	TIM_BDTRConfig:
 27401              	.LFB90:
2167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
2180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use the Break feature
2181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
2182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                          
2184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           AOE(automatic output enable).
2187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                
2188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           state or in a known state (according to the configuration made in
2194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           TIM_BDTRConfig() function).
2195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         and the AOE(automatic output enable).
2203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27402              		.loc 1 2209 0
 27403              		.cfi_startproc
 27404              		@ args = 0, pretend = 0, frame = 8
 27405              		@ frame_needed = 1, uses_anonymous_args = 0
 27406              		@ link register save eliminated.
 27407 14e8 80B4     		push	{r7}
 27408              	.LCFI183:
 27409              		.cfi_def_cfa_offset 4
 27410 14ea 83B0     		sub	sp, sp, #12
 27411              	.LCFI184:
 27412              		.cfi_def_cfa_offset 16
 27413 14ec 00AF     		add	r7, sp, #0
 27414              		.cfi_offset 7, -4
 27415              	.LCFI185:
 27416              		.cfi_def_cfa_register 7
 27417 14ee 7860     		str	r0, [r7, #4]
 27418 14f0 3960     		str	r1, [r7, #0]
2210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27419              		.loc 1 2221 0
 27420 14f2 3B68     		ldr	r3, [r7, #0]
 27421 14f4 1A88     		ldrh	r2, [r3, #0]
 27422 14f6 3B68     		ldr	r3, [r7, #0]
 27423 14f8 5B88     		ldrh	r3, [r3, #2]
 27424 14fa 42EA0303 		orr	r3, r2, r3
 27425 14fe 9AB2     		uxth	r2, r3
2222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 27426              		.loc 1 2222 0
 27427 1500 3B68     		ldr	r3, [r7, #0]
 27428 1502 9B88     		ldrh	r3, [r3, #4]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27429              		.loc 1 2221 0
 27430 1504 42EA0303 		orr	r3, r2, r3
 27431 1508 9AB2     		uxth	r2, r3
 27432              		.loc 1 2222 0
 27433 150a 3B68     		ldr	r3, [r7, #0]
 27434 150c DB88     		ldrh	r3, [r3, #6]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27435              		.loc 1 2221 0
 27436 150e 42EA0303 		orr	r3, r2, r3
 27437 1512 9AB2     		uxth	r2, r3
2223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 27438              		.loc 1 2223 0
 27439 1514 3B68     		ldr	r3, [r7, #0]
 27440 1516 1B89     		ldrh	r3, [r3, #8]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27441              		.loc 1 2221 0
 27442 1518 42EA0303 		orr	r3, r2, r3
 27443 151c 9AB2     		uxth	r2, r3
 27444              		.loc 1 2223 0
 27445 151e 3B68     		ldr	r3, [r7, #0]
 27446 1520 5B89     		ldrh	r3, [r3, #10]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27447              		.loc 1 2221 0
 27448 1522 42EA0303 		orr	r3, r2, r3
 27449 1526 9AB2     		uxth	r2, r3
2224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 27450              		.loc 1 2224 0
 27451 1528 3B68     		ldr	r3, [r7, #0]
 27452 152a 9B89     		ldrh	r3, [r3, #12]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 27453              		.loc 1 2221 0
 27454 152c 42EA0303 		orr	r3, r2, r3
 27455 1530 9AB2     		uxth	r2, r3
 27456 1532 7B68     		ldr	r3, [r7, #4]
 27457 1534 A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27458              		.loc 1 2225 0
 27459 1538 07F10C07 		add	r7, r7, #12
 27460 153c BD46     		mov	sp, r7
 27461 153e 80BC     		pop	{r7}
 27462 1540 7047     		bx	lr
 27463              		.cfi_endproc
 27464              	.LFE90:
 27466 1542 00BF     		.align	2
 27467              		.global	TIM_BDTRStructInit
 27468              		.thumb
 27469              		.thumb_func
 27471              	TIM_BDTRStructInit:
 27472              	.LFB91:
2226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         will be initialized.
2231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27473              		.loc 1 2234 0
 27474              		.cfi_startproc
 27475              		@ args = 0, pretend = 0, frame = 8
 27476              		@ frame_needed = 1, uses_anonymous_args = 0
 27477              		@ link register save eliminated.
 27478 1544 80B4     		push	{r7}
 27479              	.LCFI186:
 27480              		.cfi_def_cfa_offset 4
 27481 1546 83B0     		sub	sp, sp, #12
 27482              	.LCFI187:
 27483              		.cfi_def_cfa_offset 16
 27484 1548 00AF     		add	r7, sp, #0
 27485              		.cfi_offset 7, -4
 27486              	.LCFI188:
 27487              		.cfi_def_cfa_register 7
 27488 154a 7860     		str	r0, [r7, #4]
2235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
2236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 27489              		.loc 1 2236 0
 27490 154c 7B68     		ldr	r3, [r7, #4]
 27491 154e 4FF00002 		mov	r2, #0
 27492 1552 1A80     		strh	r2, [r3, #0]	@ movhi
2237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 27493              		.loc 1 2237 0
 27494 1554 7B68     		ldr	r3, [r7, #4]
 27495 1556 4FF00002 		mov	r2, #0
 27496 155a 5A80     		strh	r2, [r3, #2]	@ movhi
2238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 27497              		.loc 1 2238 0
 27498 155c 7B68     		ldr	r3, [r7, #4]
 27499 155e 4FF00002 		mov	r2, #0
 27500 1562 9A80     		strh	r2, [r3, #4]	@ movhi
2239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 27501              		.loc 1 2239 0
 27502 1564 7B68     		ldr	r3, [r7, #4]
 27503 1566 4FF00002 		mov	r2, #0
 27504 156a DA80     		strh	r2, [r3, #6]	@ movhi
2240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 27505              		.loc 1 2240 0
 27506 156c 7B68     		ldr	r3, [r7, #4]
 27507 156e 4FF00002 		mov	r2, #0
 27508 1572 1A81     		strh	r2, [r3, #8]	@ movhi
2241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 27509              		.loc 1 2241 0
 27510 1574 7B68     		ldr	r3, [r7, #4]
 27511 1576 4FF00002 		mov	r2, #0
 27512 157a 5A81     		strh	r2, [r3, #10]	@ movhi
2242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 27513              		.loc 1 2242 0
 27514 157c 7B68     		ldr	r3, [r7, #4]
 27515 157e 4FF00002 		mov	r2, #0
 27516 1582 9A81     		strh	r2, [r3, #12]	@ movhi
2243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27517              		.loc 1 2243 0
 27518 1584 07F10C07 		add	r7, r7, #12
 27519 1588 BD46     		mov	sp, r7
 27520 158a 80BC     		pop	{r7}
 27521 158c 7047     		bx	lr
 27522              		.cfi_endproc
 27523              	.LFE91:
 27525 158e 00BF     		.align	2
 27526              		.global	TIM_CtrlPWMOutputs
 27527              		.thumb
 27528              		.thumb_func
 27530              	TIM_CtrlPWMOutputs:
 27531              	.LFB92:
2244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27532              		.loc 1 2253 0
 27533              		.cfi_startproc
 27534              		@ args = 0, pretend = 0, frame = 8
 27535              		@ frame_needed = 1, uses_anonymous_args = 0
 27536              		@ link register save eliminated.
 27537 1590 80B4     		push	{r7}
 27538              	.LCFI189:
 27539              		.cfi_def_cfa_offset 4
 27540 1592 83B0     		sub	sp, sp, #12
 27541              	.LCFI190:
 27542              		.cfi_def_cfa_offset 16
 27543 1594 00AF     		add	r7, sp, #0
 27544              		.cfi_offset 7, -4
 27545              	.LCFI191:
 27546              		.cfi_def_cfa_register 7
 27547 1596 7860     		str	r0, [r7, #4]
 27548 1598 0B46     		mov	r3, r1
 27549 159a FB70     		strb	r3, [r7, #3]
2254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 27550              		.loc 1 2258 0
 27551 159c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 27552 159e 002B     		cmp	r3, #0
 27553 15a0 0CD0     		beq	.L113
2259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the TIM Main Output */
2261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 27554              		.loc 1 2261 0
 27555 15a2 7B68     		ldr	r3, [r7, #4]
 27556 15a4 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 27557 15a8 9BB2     		uxth	r3, r3
 27558 15aa 6FEA4343 		mvn	r3, r3, lsl #17
 27559 15ae 6FEA5343 		mvn	r3, r3, lsr #17
 27560 15b2 9AB2     		uxth	r2, r3
 27561 15b4 7B68     		ldr	r3, [r7, #4]
 27562 15b6 A3F84420 		strh	r2, [r3, #68]	@ movhi
 27563 15ba 0BE0     		b	.L112
 27564              	.L113:
2262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the TIM Main Output */
2266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 27565              		.loc 1 2266 0
 27566 15bc 7B68     		ldr	r3, [r7, #4]
 27567 15be B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 27568 15c2 9BB2     		uxth	r3, r3
 27569 15c4 4FEA4343 		lsl	r3, r3, #17
 27570 15c8 4FEA5343 		lsr	r3, r3, #17
 27571 15cc 9AB2     		uxth	r2, r3
 27572 15ce 7B68     		ldr	r3, [r7, #4]
 27573 15d0 A3F84420 		strh	r2, [r3, #68]	@ movhi
 27574              	.L112:
2267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
2268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27575              		.loc 1 2268 0
 27576 15d4 07F10C07 		add	r7, r7, #12
 27577 15d8 BD46     		mov	sp, r7
 27578 15da 80BC     		pop	{r7}
 27579 15dc 7047     		bx	lr
 27580              		.cfi_endproc
 27581              	.LFE92:
 27583 15de 00BF     		.align	2
 27584              		.global	TIM_SelectCOM
 27585              		.thumb
 27586              		.thumb_func
 27588              	TIM_SelectCOM:
 27589              	.LFB93:
2269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27590              		.loc 1 2278 0
 27591              		.cfi_startproc
 27592              		@ args = 0, pretend = 0, frame = 8
 27593              		@ frame_needed = 1, uses_anonymous_args = 0
 27594              		@ link register save eliminated.
 27595 15e0 80B4     		push	{r7}
 27596              	.LCFI192:
 27597              		.cfi_def_cfa_offset 4
 27598 15e2 83B0     		sub	sp, sp, #12
 27599              	.LCFI193:
 27600              		.cfi_def_cfa_offset 16
 27601 15e4 00AF     		add	r7, sp, #0
 27602              		.cfi_offset 7, -4
 27603              	.LCFI194:
 27604              		.cfi_def_cfa_register 7
 27605 15e6 7860     		str	r0, [r7, #4]
 27606 15e8 0B46     		mov	r3, r1
 27607 15ea FB70     		strb	r3, [r7, #3]
2279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 27608              		.loc 1 2283 0
 27609 15ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 27610 15ee 002B     		cmp	r3, #0
 27611 15f0 08D0     		beq	.L116
2284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the COM Bit */
2286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 27612              		.loc 1 2286 0
 27613 15f2 7B68     		ldr	r3, [r7, #4]
 27614 15f4 9B88     		ldrh	r3, [r3, #4]	@ movhi
 27615 15f6 9BB2     		uxth	r3, r3
 27616 15f8 43F00403 		orr	r3, r3, #4
 27617 15fc 9AB2     		uxth	r2, r3
 27618 15fe 7B68     		ldr	r3, [r7, #4]
 27619 1600 9A80     		strh	r2, [r3, #4]	@ movhi
 27620 1602 07E0     		b	.L115
 27621              	.L116:
2287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the COM Bit */
2291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 27622              		.loc 1 2291 0
 27623 1604 7B68     		ldr	r3, [r7, #4]
 27624 1606 9B88     		ldrh	r3, [r3, #4]	@ movhi
 27625 1608 9BB2     		uxth	r3, r3
 27626 160a 23F00403 		bic	r3, r3, #4
 27627 160e 9AB2     		uxth	r2, r3
 27628 1610 7B68     		ldr	r3, [r7, #4]
 27629 1612 9A80     		strh	r2, [r3, #4]	@ movhi
 27630              	.L115:
2292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27631              		.loc 1 2293 0
 27632 1614 07F10C07 		add	r7, r7, #12
 27633 1618 BD46     		mov	sp, r7
 27634 161a 80BC     		pop	{r7}
 27635 161c 7047     		bx	lr
 27636              		.cfi_endproc
 27637              	.LFE93:
 27639 161e 00BF     		.align	2
 27640              		.global	TIM_CCPreloadControl
 27641              		.thumb
 27642              		.thumb_func
 27644              	TIM_CCPreloadControl:
 27645              	.LFB94:
2294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 27646              		.loc 1 2303 0
 27647              		.cfi_startproc
 27648              		@ args = 0, pretend = 0, frame = 8
 27649              		@ frame_needed = 1, uses_anonymous_args = 0
 27650              		@ link register save eliminated.
 27651 1620 80B4     		push	{r7}
 27652              	.LCFI195:
 27653              		.cfi_def_cfa_offset 4
 27654 1622 83B0     		sub	sp, sp, #12
 27655              	.LCFI196:
 27656              		.cfi_def_cfa_offset 16
 27657 1624 00AF     		add	r7, sp, #0
 27658              		.cfi_offset 7, -4
 27659              	.LCFI197:
 27660              		.cfi_def_cfa_register 7
 27661 1626 7860     		str	r0, [r7, #4]
 27662 1628 0B46     		mov	r3, r1
 27663 162a FB70     		strb	r3, [r7, #3]
2304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 27664              		.loc 1 2307 0
 27665 162c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 27666 162e 002B     		cmp	r3, #0
 27667 1630 08D0     		beq	.L119
2308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the CCPC Bit */
2310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 27668              		.loc 1 2310 0
 27669 1632 7B68     		ldr	r3, [r7, #4]
 27670 1634 9B88     		ldrh	r3, [r3, #4]	@ movhi
 27671 1636 9BB2     		uxth	r3, r3
 27672 1638 43F00103 		orr	r3, r3, #1
 27673 163c 9AB2     		uxth	r2, r3
 27674 163e 7B68     		ldr	r3, [r7, #4]
 27675 1640 9A80     		strh	r2, [r3, #4]	@ movhi
 27676 1642 07E0     		b	.L118
 27677              	.L119:
2311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the CCPC Bit */
2315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 27678              		.loc 1 2315 0
 27679 1644 7B68     		ldr	r3, [r7, #4]
 27680 1646 9B88     		ldrh	r3, [r3, #4]	@ movhi
 27681 1648 9BB2     		uxth	r3, r3
 27682 164a 23F00103 		bic	r3, r3, #1
 27683 164e 9AB2     		uxth	r2, r3
 27684 1650 7B68     		ldr	r3, [r7, #4]
 27685 1652 9A80     		strh	r2, [r3, #4]	@ movhi
 27686              	.L118:
2316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27687              		.loc 1 2317 0
 27688 1654 07F10C07 		add	r7, r7, #12
 27689 1658 BD46     		mov	sp, r7
 27690 165a 80BC     		pop	{r7}
 27691 165c 7047     		bx	lr
 27692              		.cfi_endproc
 27693              	.LFE94:
 27695 165e 00BF     		.align	2
 27696              		.global	TIM_ITConfig
 27697              		.thumb
 27698              		.thumb_func
 27700              	TIM_ITConfig:
 27701              	.LFB95:
2318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  
2348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *        
2355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 27702              		.loc 1 2360 0
 27703              		.cfi_startproc
 27704              		@ args = 0, pretend = 0, frame = 8
 27705              		@ frame_needed = 1, uses_anonymous_args = 0
 27706              		@ link register save eliminated.
 27707 1660 80B4     		push	{r7}
 27708              	.LCFI198:
 27709              		.cfi_def_cfa_offset 4
 27710 1662 83B0     		sub	sp, sp, #12
 27711              	.LCFI199:
 27712              		.cfi_def_cfa_offset 16
 27713 1664 00AF     		add	r7, sp, #0
 27714              		.cfi_offset 7, -4
 27715              	.LCFI200:
 27716              		.cfi_def_cfa_register 7
 27717 1666 7860     		str	r0, [r7, #4]
 27718 1668 1346     		mov	r3, r2
 27719 166a 0A46     		mov	r2, r1	@ movhi
 27720 166c 7A80     		strh	r2, [r7, #2]	@ movhi
 27721 166e 7B70     		strb	r3, [r7, #1]
2361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 27722              		.loc 1 2366 0
 27723 1670 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 27724 1672 002B     		cmp	r3, #0
 27725 1674 09D0     		beq	.L122
2367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the Interrupt sources */
2369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER |= TIM_IT;
 27726              		.loc 1 2369 0
 27727 1676 7B68     		ldr	r3, [r7, #4]
 27728 1678 9B89     		ldrh	r3, [r3, #12]	@ movhi
 27729 167a 9AB2     		uxth	r2, r3
 27730 167c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27731 167e 42EA0303 		orr	r3, r2, r3
 27732 1682 9AB2     		uxth	r2, r3
 27733 1684 7B68     		ldr	r3, [r7, #4]
 27734 1686 9A81     		strh	r2, [r3, #12]	@ movhi
 27735 1688 0BE0     		b	.L121
 27736              	.L122:
2370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the Interrupt sources */
2374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 27737              		.loc 1 2374 0
 27738 168a 7B68     		ldr	r3, [r7, #4]
 27739 168c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 27740 168e 9AB2     		uxth	r2, r3
 27741 1690 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27742 1692 6FEA0303 		mvn	r3, r3
 27743 1696 9BB2     		uxth	r3, r3
 27744 1698 02EA0303 		and	r3, r2, r3
 27745 169c 9AB2     		uxth	r2, r3
 27746 169e 7B68     		ldr	r3, [r7, #4]
 27747 16a0 9A81     		strh	r2, [r3, #12]	@ movhi
 27748              	.L121:
2375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27749              		.loc 1 2376 0
 27750 16a2 07F10C07 		add	r7, r7, #12
 27751 16a6 BD46     		mov	sp, r7
 27752 16a8 80BC     		pop	{r7}
 27753 16aa 7047     		bx	lr
 27754              		.cfi_endproc
 27755              	.LFE95:
 27757              		.align	2
 27758              		.global	TIM_GenerateEvent
 27759              		.thumb
 27760              		.thumb_func
 27762              	TIM_GenerateEvent:
 27763              	.LFB96:
2377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * 
2392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *        
2395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 27764              		.loc 1 2398 0
 27765              		.cfi_startproc
 27766              		@ args = 0, pretend = 0, frame = 8
 27767              		@ frame_needed = 1, uses_anonymous_args = 0
 27768              		@ link register save eliminated.
 27769 16ac 80B4     		push	{r7}
 27770              	.LCFI201:
 27771              		.cfi_def_cfa_offset 4
 27772 16ae 83B0     		sub	sp, sp, #12
 27773              	.LCFI202:
 27774              		.cfi_def_cfa_offset 16
 27775 16b0 00AF     		add	r7, sp, #0
 27776              		.cfi_offset 7, -4
 27777              	.LCFI203:
 27778              		.cfi_def_cfa_register 7
 27779 16b2 7860     		str	r0, [r7, #4]
 27780 16b4 0B46     		mov	r3, r1
 27781 16b6 7B80     		strh	r3, [r7, #2]	@ movhi
2399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
2403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the event sources */
2404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 27782              		.loc 1 2404 0
 27783 16b8 7B68     		ldr	r3, [r7, #4]
 27784 16ba 7A88     		ldrh	r2, [r7, #2]	@ movhi
 27785 16bc 9A82     		strh	r2, [r3, #20]	@ movhi
2405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27786              		.loc 1 2405 0
 27787 16be 07F10C07 		add	r7, r7, #12
 27788 16c2 BD46     		mov	sp, r7
 27789 16c4 80BC     		pop	{r7}
 27790 16c6 7047     		bx	lr
 27791              		.cfi_endproc
 27792              	.LFE96:
 27794              		.align	2
 27795              		.global	TIM_GetFlagStatus
 27796              		.thumb
 27797              		.thumb_func
 27799              	TIM_GetFlagStatus:
 27800              	.LFB97:
2406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 27801              		.loc 1 2431 0
 27802              		.cfi_startproc
 27803              		@ args = 0, pretend = 0, frame = 16
 27804              		@ frame_needed = 1, uses_anonymous_args = 0
 27805              		@ link register save eliminated.
 27806 16c8 80B4     		push	{r7}
 27807              	.LCFI204:
 27808              		.cfi_def_cfa_offset 4
 27809 16ca 85B0     		sub	sp, sp, #20
 27810              	.LCFI205:
 27811              		.cfi_def_cfa_offset 24
 27812 16cc 00AF     		add	r7, sp, #0
 27813              		.cfi_offset 7, -4
 27814              	.LCFI206:
 27815              		.cfi_def_cfa_register 7
 27816 16ce 7860     		str	r0, [r7, #4]
 27817 16d0 0B46     		mov	r3, r1
 27818 16d2 7B80     		strh	r3, [r7, #2]	@ movhi
2432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ITStatus bitstatus = RESET;  
 27819              		.loc 1 2432 0
 27820 16d4 4FF00003 		mov	r3, #0
 27821 16d8 FB73     		strb	r3, [r7, #15]
2433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 27822              		.loc 1 2438 0
 27823 16da 7B68     		ldr	r3, [r7, #4]
 27824 16dc 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 27825 16de 9AB2     		uxth	r2, r3
 27826 16e0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27827 16e2 02EA0303 		and	r3, r2, r3
 27828 16e6 9BB2     		uxth	r3, r3
 27829 16e8 002B     		cmp	r3, #0
 27830 16ea 03D0     		beq	.L126
2439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = SET;
 27831              		.loc 1 2440 0
 27832 16ec 4FF00103 		mov	r3, #1
 27833 16f0 FB73     		strb	r3, [r7, #15]
 27834 16f2 02E0     		b	.L127
 27835              	.L126:
2441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = RESET;
 27836              		.loc 1 2444 0
 27837 16f4 4FF00003 		mov	r3, #0
 27838 16f8 FB73     		strb	r3, [r7, #15]
 27839              	.L127:
2445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return bitstatus;
 27840              		.loc 1 2446 0
 27841 16fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27842              		.loc 1 2447 0
 27843 16fc 1846     		mov	r0, r3
 27844 16fe 07F11407 		add	r7, r7, #20
 27845 1702 BD46     		mov	sp, r7
 27846 1704 80BC     		pop	{r7}
 27847 1706 7047     		bx	lr
 27848              		.cfi_endproc
 27849              	.LFE97:
 27851              		.align	2
 27852              		.global	TIM_ClearFlag
 27853              		.thumb
 27854              		.thumb_func
 27856              	TIM_ClearFlag:
 27857              	.LFB98:
2448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *    
2470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 27858              		.loc 1 2473 0
 27859              		.cfi_startproc
 27860              		@ args = 0, pretend = 0, frame = 8
 27861              		@ frame_needed = 1, uses_anonymous_args = 0
 27862              		@ link register save eliminated.
 27863 1708 80B4     		push	{r7}
 27864              	.LCFI207:
 27865              		.cfi_def_cfa_offset 4
 27866 170a 83B0     		sub	sp, sp, #12
 27867              	.LCFI208:
 27868              		.cfi_def_cfa_offset 16
 27869 170c 00AF     		add	r7, sp, #0
 27870              		.cfi_offset 7, -4
 27871              	.LCFI209:
 27872              		.cfi_def_cfa_register 7
 27873 170e 7860     		str	r0, [r7, #4]
 27874 1710 0B46     		mov	r3, r1
 27875 1712 7B80     		strh	r3, [r7, #2]	@ movhi
2474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
2477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Clear the flags */
2478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 27876              		.loc 1 2478 0
 27877 1714 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27878 1716 6FEA0303 		mvn	r3, r3
 27879 171a 9AB2     		uxth	r2, r3
 27880 171c 7B68     		ldr	r3, [r7, #4]
 27881 171e 1A82     		strh	r2, [r3, #16]	@ movhi
2479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27882              		.loc 1 2479 0
 27883 1720 07F10C07 		add	r7, r7, #12
 27884 1724 BD46     		mov	sp, r7
 27885 1726 80BC     		pop	{r7}
 27886 1728 7047     		bx	lr
 27887              		.cfi_endproc
 27888              	.LFE98:
 27890 172a 00BF     		.align	2
 27891              		.global	TIM_GetITStatus
 27892              		.thumb
 27893              		.thumb_func
 27895              	TIM_GetITStatus:
 27896              	.LFB99:
2480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
2498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27897              		.loc 1 2501 0
 27898              		.cfi_startproc
 27899              		@ args = 0, pretend = 0, frame = 16
 27900              		@ frame_needed = 1, uses_anonymous_args = 0
 27901              		@ link register save eliminated.
 27902 172c 80B4     		push	{r7}
 27903              	.LCFI210:
 27904              		.cfi_def_cfa_offset 4
 27905 172e 85B0     		sub	sp, sp, #20
 27906              	.LCFI211:
 27907              		.cfi_def_cfa_offset 24
 27908 1730 00AF     		add	r7, sp, #0
 27909              		.cfi_offset 7, -4
 27910              	.LCFI212:
 27911              		.cfi_def_cfa_register 7
 27912 1732 7860     		str	r0, [r7, #4]
 27913 1734 0B46     		mov	r3, r1
 27914 1736 7B80     		strh	r3, [r7, #2]	@ movhi
2502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ITStatus bitstatus = RESET;  
 27915              		.loc 1 2502 0
 27916 1738 4FF00003 		mov	r3, #0
 27917 173c FB73     		strb	r3, [r7, #15]
2503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 27918              		.loc 1 2503 0
 27919 173e 4FF00003 		mov	r3, #0
 27920 1742 BB81     		strh	r3, [r7, #12]	@ movhi
 27921 1744 4FF00003 		mov	r3, #0
 27922 1748 7B81     		strh	r3, [r7, #10]	@ movhi
2504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
2508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 27923              		.loc 1 2508 0
 27924 174a 7B68     		ldr	r3, [r7, #4]
 27925 174c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 27926 174e 9AB2     		uxth	r2, r3
 27927 1750 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27928 1752 02EA0303 		and	r3, r2, r3
 27929 1756 BB81     		strh	r3, [r7, #12]	@ movhi
2509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 27930              		.loc 1 2510 0
 27931 1758 7B68     		ldr	r3, [r7, #4]
 27932 175a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 27933 175c 9AB2     		uxth	r2, r3
 27934 175e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27935 1760 02EA0303 		and	r3, r2, r3
 27936 1764 7B81     		strh	r3, [r7, #10]	@ movhi
2511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 27937              		.loc 1 2511 0
 27938 1766 BB89     		ldrh	r3, [r7, #12]
 27939 1768 002B     		cmp	r3, #0
 27940 176a 06D0     		beq	.L130
 27941              		.loc 1 2511 0 is_stmt 0 discriminator 1
 27942 176c 7B89     		ldrh	r3, [r7, #10]
 27943 176e 002B     		cmp	r3, #0
 27944 1770 03D0     		beq	.L130
2512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = SET;
 27945              		.loc 1 2513 0 is_stmt 1
 27946 1772 4FF00103 		mov	r3, #1
 27947 1776 FB73     		strb	r3, [r7, #15]
 27948 1778 02E0     		b	.L131
 27949              	.L130:
2514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = RESET;
 27950              		.loc 1 2517 0
 27951 177a 4FF00003 		mov	r3, #0
 27952 177e FB73     		strb	r3, [r7, #15]
 27953              	.L131:
2518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return bitstatus;
 27954              		.loc 1 2519 0
 27955 1780 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27956              		.loc 1 2520 0
 27957 1782 1846     		mov	r0, r3
 27958 1784 07F11407 		add	r7, r7, #20
 27959 1788 BD46     		mov	sp, r7
 27960 178a 80BC     		pop	{r7}
 27961 178c 7047     		bx	lr
 27962              		.cfi_endproc
 27963              	.LFE99:
 27965 178e 00BF     		.align	2
 27966              		.global	TIM_ClearITPendingBit
 27967              		.thumb
 27968              		.thumb_func
 27970              	TIM_ClearITPendingBit:
 27971              	.LFB100:
2521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *      
2539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 27972              		.loc 1 2542 0
 27973              		.cfi_startproc
 27974              		@ args = 0, pretend = 0, frame = 8
 27975              		@ frame_needed = 1, uses_anonymous_args = 0
 27976              		@ link register save eliminated.
 27977 1790 80B4     		push	{r7}
 27978              	.LCFI213:
 27979              		.cfi_def_cfa_offset 4
 27980 1792 83B0     		sub	sp, sp, #12
 27981              	.LCFI214:
 27982              		.cfi_def_cfa_offset 16
 27983 1794 00AF     		add	r7, sp, #0
 27984              		.cfi_offset 7, -4
 27985              	.LCFI215:
 27986              		.cfi_def_cfa_register 7
 27987 1796 7860     		str	r0, [r7, #4]
 27988 1798 0B46     		mov	r3, r1
 27989 179a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Clear the IT pending Bit */
2547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 27990              		.loc 1 2547 0
 27991 179c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27992 179e 6FEA0303 		mvn	r3, r3
 27993 17a2 9AB2     		uxth	r2, r3
 27994 17a4 7B68     		ldr	r3, [r7, #4]
 27995 17a6 1A82     		strh	r2, [r3, #16]	@ movhi
2548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 27996              		.loc 1 2548 0
 27997 17a8 07F10C07 		add	r7, r7, #12
 27998 17ac BD46     		mov	sp, r7
 27999 17ae 80BC     		pop	{r7}
 28000 17b0 7047     		bx	lr
 28001              		.cfi_endproc
 28002              	.LFE100:
 28004 17b2 00BF     		.align	2
 28005              		.global	TIM_DMAConfig
 28006              		.thumb
 28007              		.thumb_func
 28009              	TIM_DMAConfig:
 28010              	.LFB101:
2549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28011              		.loc 1 2579 0
 28012              		.cfi_startproc
 28013              		@ args = 0, pretend = 0, frame = 8
 28014              		@ frame_needed = 1, uses_anonymous_args = 0
 28015              		@ link register save eliminated.
 28016 17b4 80B4     		push	{r7}
 28017              	.LCFI216:
 28018              		.cfi_def_cfa_offset 4
 28019 17b6 83B0     		sub	sp, sp, #12
 28020              	.LCFI217:
 28021              		.cfi_def_cfa_offset 16
 28022 17b8 00AF     		add	r7, sp, #0
 28023              		.cfi_offset 7, -4
 28024              	.LCFI218:
 28025              		.cfi_def_cfa_register 7
 28026 17ba 7860     		str	r0, [r7, #4]
 28027 17bc 1346     		mov	r3, r2
 28028 17be 0A46     		mov	r2, r1	@ movhi
 28029 17c0 7A80     		strh	r2, [r7, #2]	@ movhi
 28030 17c2 3B80     		strh	r3, [r7, #0]	@ movhi
2580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 28031              		.loc 1 2586 0
 28032 17c4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 28033 17c6 3B88     		ldrh	r3, [r7, #0]	@ movhi
 28034 17c8 42EA0303 		orr	r3, r2, r3
 28035 17cc 9AB2     		uxth	r2, r3
 28036 17ce 7B68     		ldr	r3, [r7, #4]
 28037 17d0 A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28038              		.loc 1 2587 0
 28039 17d4 07F10C07 		add	r7, r7, #12
 28040 17d8 BD46     		mov	sp, r7
 28041 17da 80BC     		pop	{r7}
 28042 17dc 7047     		bx	lr
 28043              		.cfi_endproc
 28044              	.LFE101:
 28046 17de 00BF     		.align	2
 28047              		.global	TIM_DMACmd
 28048              		.thumb
 28049              		.thumb_func
 28051              	TIM_DMACmd:
 28052              	.LFB102:
2588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 28053              		.loc 1 2606 0
 28054              		.cfi_startproc
 28055              		@ args = 0, pretend = 0, frame = 8
 28056              		@ frame_needed = 1, uses_anonymous_args = 0
 28057              		@ link register save eliminated.
 28058 17e0 80B4     		push	{r7}
 28059              	.LCFI219:
 28060              		.cfi_def_cfa_offset 4
 28061 17e2 83B0     		sub	sp, sp, #12
 28062              	.LCFI220:
 28063              		.cfi_def_cfa_offset 16
 28064 17e4 00AF     		add	r7, sp, #0
 28065              		.cfi_offset 7, -4
 28066              	.LCFI221:
 28067              		.cfi_def_cfa_register 7
 28068 17e6 7860     		str	r0, [r7, #4]
 28069 17e8 1346     		mov	r3, r2
 28070 17ea 0A46     		mov	r2, r1	@ movhi
 28071 17ec 7A80     		strh	r2, [r7, #2]	@ movhi
 28072 17ee 7B70     		strb	r3, [r7, #1]
2607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 28073              		.loc 1 2612 0
 28074 17f0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 28075 17f2 002B     		cmp	r3, #0
 28076 17f4 09D0     		beq	.L135
2613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the DMA sources */
2615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 28077              		.loc 1 2615 0
 28078 17f6 7B68     		ldr	r3, [r7, #4]
 28079 17f8 9B89     		ldrh	r3, [r3, #12]	@ movhi
 28080 17fa 9AB2     		uxth	r2, r3
 28081 17fc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28082 17fe 42EA0303 		orr	r3, r2, r3
 28083 1802 9AB2     		uxth	r2, r3
 28084 1804 7B68     		ldr	r3, [r7, #4]
 28085 1806 9A81     		strh	r2, [r3, #12]	@ movhi
 28086 1808 0BE0     		b	.L134
 28087              	.L135:
2616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the DMA sources */
2620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 28088              		.loc 1 2620 0
 28089 180a 7B68     		ldr	r3, [r7, #4]
 28090 180c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 28091 180e 9AB2     		uxth	r2, r3
 28092 1810 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28093 1812 6FEA0303 		mvn	r3, r3
 28094 1816 9BB2     		uxth	r3, r3
 28095 1818 02EA0303 		and	r3, r2, r3
 28096 181c 9AB2     		uxth	r2, r3
 28097 181e 7B68     		ldr	r3, [r7, #4]
 28098 1820 9A81     		strh	r2, [r3, #12]	@ movhi
 28099              	.L134:
2621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28100              		.loc 1 2622 0
 28101 1822 07F10C07 		add	r7, r7, #12
 28102 1826 BD46     		mov	sp, r7
 28103 1828 80BC     		pop	{r7}
 28104 182a 7047     		bx	lr
 28105              		.cfi_endproc
 28106              	.LFE102:
 28108              		.align	2
 28109              		.global	TIM_SelectCCDMA
 28110              		.thumb
 28111              		.thumb_func
 28113              	TIM_SelectCCDMA:
 28114              	.LFB103:
2623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28115              		.loc 1 2632 0
 28116              		.cfi_startproc
 28117              		@ args = 0, pretend = 0, frame = 8
 28118              		@ frame_needed = 1, uses_anonymous_args = 0
 28119              		@ link register save eliminated.
 28120 182c 80B4     		push	{r7}
 28121              	.LCFI222:
 28122              		.cfi_def_cfa_offset 4
 28123 182e 83B0     		sub	sp, sp, #12
 28124              	.LCFI223:
 28125              		.cfi_def_cfa_offset 16
 28126 1830 00AF     		add	r7, sp, #0
 28127              		.cfi_offset 7, -4
 28128              	.LCFI224:
 28129              		.cfi_def_cfa_register 7
 28130 1832 7860     		str	r0, [r7, #4]
 28131 1834 0B46     		mov	r3, r1
 28132 1836 FB70     		strb	r3, [r7, #3]
2633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 28133              		.loc 1 2637 0
 28134 1838 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 28135 183a 002B     		cmp	r3, #0
 28136 183c 08D0     		beq	.L138
2638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the CCDS Bit */
2640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 28137              		.loc 1 2640 0
 28138 183e 7B68     		ldr	r3, [r7, #4]
 28139 1840 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28140 1842 9BB2     		uxth	r3, r3
 28141 1844 43F00803 		orr	r3, r3, #8
 28142 1848 9AB2     		uxth	r2, r3
 28143 184a 7B68     		ldr	r3, [r7, #4]
 28144 184c 9A80     		strh	r2, [r3, #4]	@ movhi
 28145 184e 07E0     		b	.L137
 28146              	.L138:
2641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the CCDS Bit */
2645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 28147              		.loc 1 2645 0
 28148 1850 7B68     		ldr	r3, [r7, #4]
 28149 1852 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28150 1854 9BB2     		uxth	r3, r3
 28151 1856 23F00803 		bic	r3, r3, #8
 28152 185a 9AB2     		uxth	r2, r3
 28153 185c 7B68     		ldr	r3, [r7, #4]
 28154 185e 9A80     		strh	r2, [r3, #4]	@ movhi
 28155              	.L137:
2646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28156              		.loc 1 2647 0
 28157 1860 07F10C07 		add	r7, r7, #12
 28158 1864 BD46     		mov	sp, r7
 28159 1866 80BC     		pop	{r7}
 28160 1868 7047     		bx	lr
 28161              		.cfi_endproc
 28162              	.LFE103:
 28164 186a 00BF     		.align	2
 28165              		.global	TIM_InternalClockConfig
 28166              		.thumb
 28167              		.thumb_func
 28169              	TIM_InternalClockConfig:
 28170              	.LFB104:
2648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Clocks management functions
2654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                          Clocks management functions
2658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28171              		.loc 1 2671 0
 28172              		.cfi_startproc
 28173              		@ args = 0, pretend = 0, frame = 8
 28174              		@ frame_needed = 1, uses_anonymous_args = 0
 28175              		@ link register save eliminated.
 28176 186c 80B4     		push	{r7}
 28177              	.LCFI225:
 28178              		.cfi_def_cfa_offset 4
 28179 186e 83B0     		sub	sp, sp, #12
 28180              	.LCFI226:
 28181              		.cfi_def_cfa_offset 16
 28182 1870 00AF     		add	r7, sp, #0
 28183              		.cfi_offset 7, -4
 28184              	.LCFI227:
 28185              		.cfi_def_cfa_register 7
 28186 1872 7860     		str	r0, [r7, #4]
2672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 28187              		.loc 1 2676 0
 28188 1874 7B68     		ldr	r3, [r7, #4]
 28189 1876 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28190 1878 9BB2     		uxth	r3, r3
 28191 187a 23F00703 		bic	r3, r3, #7
 28192 187e 9AB2     		uxth	r2, r3
 28193 1880 7B68     		ldr	r3, [r7, #4]
 28194 1882 1A81     		strh	r2, [r3, #8]	@ movhi
2677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28195              		.loc 1 2677 0
 28196 1884 07F10C07 		add	r7, r7, #12
 28197 1888 BD46     		mov	sp, r7
 28198 188a 80BC     		pop	{r7}
 28199 188c 7047     		bx	lr
 28200              		.cfi_endproc
 28201              	.LFE104:
 28203 188e 00BF     		.align	2
 28204              		.global	TIM_ITRxExternalClockConfig
 28205              		.thumb
 28206              		.thumb_func
 28208              	TIM_ITRxExternalClockConfig:
 28209              	.LFB105:
2678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28210              		.loc 1 2692 0
 28211              		.cfi_startproc
 28212              		@ args = 0, pretend = 0, frame = 8
 28213              		@ frame_needed = 1, uses_anonymous_args = 0
 28214 1890 80B5     		push	{r7, lr}
 28215              	.LCFI228:
 28216              		.cfi_def_cfa_offset 8
 28217 1892 82B0     		sub	sp, sp, #8
 28218              	.LCFI229:
 28219              		.cfi_def_cfa_offset 16
 28220 1894 00AF     		add	r7, sp, #0
 28221              		.cfi_offset 14, -4
 28222              		.cfi_offset 7, -8
 28223              	.LCFI230:
 28224              		.cfi_def_cfa_register 7
 28225 1896 7860     		str	r0, [r7, #4]
 28226 1898 0B46     		mov	r3, r1
 28227 189a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Internal Trigger */
2698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 28228              		.loc 1 2698 0
 28229 189c 7B88     		ldrh	r3, [r7, #2]
 28230 189e 7868     		ldr	r0, [r7, #4]
 28231 18a0 1946     		mov	r1, r3
 28232 18a2 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 28233              		.loc 1 2701 0
 28234 18a6 7B68     		ldr	r3, [r7, #4]
 28235 18a8 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28236 18aa 9BB2     		uxth	r3, r3
 28237 18ac 43F00703 		orr	r3, r3, #7
 28238 18b0 9AB2     		uxth	r2, r3
 28239 18b2 7B68     		ldr	r3, [r7, #4]
 28240 18b4 1A81     		strh	r2, [r3, #8]	@ movhi
2702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28241              		.loc 1 2702 0
 28242 18b6 07F10807 		add	r7, r7, #8
 28243 18ba BD46     		mov	sp, r7
 28244 18bc 80BD     		pop	{r7, pc}
 28245              		.cfi_endproc
 28246              	.LFE105:
 28248 18be 00BF     		.align	2
 28249              		.global	TIM_TIxExternalClockConfig
 28250              		.thumb
 28251              		.thumb_func
 28253              	TIM_TIxExternalClockConfig:
 28254              	.LFB106:
2703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
2708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28255              		.loc 1 2723 0
 28256              		.cfi_startproc
 28257              		@ args = 0, pretend = 0, frame = 16
 28258              		@ frame_needed = 1, uses_anonymous_args = 0
 28259 18c0 80B5     		push	{r7, lr}
 28260              	.LCFI231:
 28261              		.cfi_def_cfa_offset 8
 28262 18c2 84B0     		sub	sp, sp, #16
 28263              	.LCFI232:
 28264              		.cfi_def_cfa_offset 24
 28265 18c4 00AF     		add	r7, sp, #0
 28266              		.cfi_offset 14, -4
 28267              		.cfi_offset 7, -8
 28268              	.LCFI233:
 28269              		.cfi_def_cfa_register 7
 28270 18c6 F860     		str	r0, [r7, #12]
 28271 18c8 7981     		strh	r1, [r7, #10]	@ movhi
 28272 18ca 3A81     		strh	r2, [r7, #8]	@ movhi
 28273 18cc FB80     		strh	r3, [r7, #6]	@ movhi
2724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 28274              		.loc 1 2730 0
 28275 18ce 7B89     		ldrh	r3, [r7, #10]
 28276 18d0 602B     		cmp	r3, #96
 28277 18d2 08D1     		bne	.L143
2731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 28278              		.loc 1 2732 0
 28279 18d4 3A89     		ldrh	r2, [r7, #8]
 28280 18d6 FB88     		ldrh	r3, [r7, #6]
 28281 18d8 F868     		ldr	r0, [r7, #12]
 28282 18da 1146     		mov	r1, r2
 28283 18dc 4FF00102 		mov	r2, #1
 28284 18e0 00F0B8F9 		bl	TI2_Config
 28285 18e4 07E0     		b	.L144
 28286              	.L143:
2733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 28287              		.loc 1 2736 0
 28288 18e6 3A89     		ldrh	r2, [r7, #8]
 28289 18e8 FB88     		ldrh	r3, [r7, #6]
 28290 18ea F868     		ldr	r0, [r7, #12]
 28291 18ec 1146     		mov	r1, r2
 28292 18ee 4FF00102 		mov	r2, #1
 28293 18f2 00F06DF9 		bl	TI1_Config
 28294              	.L144:
2737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Trigger source */
2739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 28295              		.loc 1 2739 0
 28296 18f6 7B89     		ldrh	r3, [r7, #10]
 28297 18f8 F868     		ldr	r0, [r7, #12]
 28298 18fa 1946     		mov	r1, r3
 28299 18fc FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 28300              		.loc 1 2741 0
 28301 1900 FB68     		ldr	r3, [r7, #12]
 28302 1902 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28303 1904 9BB2     		uxth	r3, r3
 28304 1906 43F00703 		orr	r3, r3, #7
 28305 190a 9AB2     		uxth	r2, r3
 28306 190c FB68     		ldr	r3, [r7, #12]
 28307 190e 1A81     		strh	r2, [r3, #8]	@ movhi
2742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28308              		.loc 1 2742 0
 28309 1910 07F11007 		add	r7, r7, #16
 28310 1914 BD46     		mov	sp, r7
 28311 1916 80BD     		pop	{r7, pc}
 28312              		.cfi_endproc
 28313              	.LFE106:
 28315              		.align	2
 28316              		.global	TIM_ETRClockMode1Config
 28317              		.thumb
 28318              		.thumb_func
 28320              	TIM_ETRClockMode1Config:
 28321              	.LFB107:
2743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28322              		.loc 1 2763 0
 28323              		.cfi_startproc
 28324              		@ args = 0, pretend = 0, frame = 24
 28325              		@ frame_needed = 1, uses_anonymous_args = 0
 28326 1918 80B5     		push	{r7, lr}
 28327              	.LCFI234:
 28328              		.cfi_def_cfa_offset 8
 28329 191a 86B0     		sub	sp, sp, #24
 28330              	.LCFI235:
 28331              		.cfi_def_cfa_offset 32
 28332 191c 00AF     		add	r7, sp, #0
 28333              		.cfi_offset 14, -4
 28334              		.cfi_offset 7, -8
 28335              	.LCFI236:
 28336              		.cfi_def_cfa_register 7
 28337 191e F860     		str	r0, [r7, #12]
 28338 1920 7981     		strh	r1, [r7, #10]	@ movhi
 28339 1922 3A81     		strh	r2, [r7, #8]	@ movhi
 28340 1924 FB80     		strh	r3, [r7, #6]	@ movhi
2764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 28341              		.loc 1 2764 0
 28342 1926 4FF00003 		mov	r3, #0
 28343 192a FB82     		strh	r3, [r7, #22]	@ movhi
2765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the ETR Clock source */
2772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 28344              		.loc 1 2772 0
 28345 192c 7989     		ldrh	r1, [r7, #10]
 28346 192e 3A89     		ldrh	r2, [r7, #8]
 28347 1930 FB88     		ldrh	r3, [r7, #6]
 28348 1932 F868     		ldr	r0, [r7, #12]
 28349 1934 FFF7FEFF 		bl	TIM_ETRConfig
2773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 28350              		.loc 1 2775 0
 28351 1938 FB68     		ldr	r3, [r7, #12]
 28352 193a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28353 193c FB82     		strh	r3, [r7, #22]	@ movhi
2776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the SMS Bits */
2778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 28354              		.loc 1 2778 0
 28355 193e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28356 1940 23F00703 		bic	r3, r3, #7
 28357 1944 FB82     		strh	r3, [r7, #22]	@ movhi
2779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 28358              		.loc 1 2781 0
 28359 1946 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28360 1948 43F00703 		orr	r3, r3, #7
 28361 194c FB82     		strh	r3, [r7, #22]	@ movhi
2782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 28362              		.loc 1 2784 0
 28363 194e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28364 1950 23F07003 		bic	r3, r3, #112
 28365 1954 FB82     		strh	r3, [r7, #22]	@ movhi
2785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 28366              		.loc 1 2785 0
 28367 1956 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28368 1958 43F07003 		orr	r3, r3, #112
 28369 195c FB82     		strh	r3, [r7, #22]	@ movhi
2786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
2788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 28370              		.loc 1 2788 0
 28371 195e FB68     		ldr	r3, [r7, #12]
 28372 1960 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 28373 1962 1A81     		strh	r2, [r3, #8]	@ movhi
2789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28374              		.loc 1 2789 0
 28375 1964 07F11807 		add	r7, r7, #24
 28376 1968 BD46     		mov	sp, r7
 28377 196a 80BD     		pop	{r7, pc}
 28378              		.cfi_endproc
 28379              	.LFE107:
 28381              		.align	2
 28382              		.global	TIM_ETRClockMode2Config
 28383              		.thumb
 28384              		.thumb_func
 28386              	TIM_ETRClockMode2Config:
 28387              	.LFB108:
2790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28388              		.loc 1 2810 0
 28389              		.cfi_startproc
 28390              		@ args = 0, pretend = 0, frame = 16
 28391              		@ frame_needed = 1, uses_anonymous_args = 0
 28392 196c 80B5     		push	{r7, lr}
 28393              	.LCFI237:
 28394              		.cfi_def_cfa_offset 8
 28395 196e 84B0     		sub	sp, sp, #16
 28396              	.LCFI238:
 28397              		.cfi_def_cfa_offset 24
 28398 1970 00AF     		add	r7, sp, #0
 28399              		.cfi_offset 14, -4
 28400              		.cfi_offset 7, -8
 28401              	.LCFI239:
 28402              		.cfi_def_cfa_register 7
 28403 1972 F860     		str	r0, [r7, #12]
 28404 1974 7981     		strh	r1, [r7, #10]	@ movhi
 28405 1976 3A81     		strh	r2, [r7, #8]	@ movhi
 28406 1978 FB80     		strh	r3, [r7, #6]	@ movhi
2811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the ETR Clock source */
2818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 28407              		.loc 1 2818 0
 28408 197a 7989     		ldrh	r1, [r7, #10]
 28409 197c 3A89     		ldrh	r2, [r7, #8]
 28410 197e FB88     		ldrh	r3, [r7, #6]
 28411 1980 F868     		ldr	r0, [r7, #12]
 28412 1982 FFF7FEFF 		bl	TIM_ETRConfig
2819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable the External clock mode2 */
2821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 28413              		.loc 1 2821 0
 28414 1986 FB68     		ldr	r3, [r7, #12]
 28415 1988 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28416 198a 9BB2     		uxth	r3, r3
 28417 198c 43F48043 		orr	r3, r3, #16384
 28418 1990 9AB2     		uxth	r2, r3
 28419 1992 FB68     		ldr	r3, [r7, #12]
 28420 1994 1A81     		strh	r2, [r3, #8]	@ movhi
2822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28421              		.loc 1 2822 0
 28422 1996 07F11007 		add	r7, r7, #16
 28423 199a BD46     		mov	sp, r7
 28424 199c 80BD     		pop	{r7, pc}
 28425              		.cfi_endproc
 28426              	.LFE108:
 28428 199e 00BF     		.align	2
 28429              		.global	TIM_SelectInputTrigger
 28430              		.thumb
 28431              		.thumb_func
 28433              	TIM_SelectInputTrigger:
 28434              	.LFB109:
2823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Synchronization management functions 
2829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        Synchronization management functions
2833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    
2835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
2836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
2838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Case of two/several Timers
2839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        **************************
2840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ********************************************       
2849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Configure the External trigger using this function:
2850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
2864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28435              		.loc 1 2877 0
 28436              		.cfi_startproc
 28437              		@ args = 0, pretend = 0, frame = 16
 28438              		@ frame_needed = 1, uses_anonymous_args = 0
 28439              		@ link register save eliminated.
 28440 19a0 80B4     		push	{r7}
 28441              	.LCFI240:
 28442              		.cfi_def_cfa_offset 4
 28443 19a2 85B0     		sub	sp, sp, #20
 28444              	.LCFI241:
 28445              		.cfi_def_cfa_offset 24
 28446 19a4 00AF     		add	r7, sp, #0
 28447              		.cfi_offset 7, -4
 28448              	.LCFI242:
 28449              		.cfi_def_cfa_register 7
 28450 19a6 7860     		str	r0, [r7, #4]
 28451 19a8 0B46     		mov	r3, r1
 28452 19aa 7B80     		strh	r3, [r7, #2]	@ movhi
2878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 28453              		.loc 1 2878 0
 28454 19ac 4FF00003 		mov	r3, #0
 28455 19b0 FB81     		strh	r3, [r7, #14]	@ movhi
2879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 28456              		.loc 1 2885 0
 28457 19b2 7B68     		ldr	r3, [r7, #4]
 28458 19b4 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28459 19b6 FB81     		strh	r3, [r7, #14]	@ movhi
2886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the TS Bits */
2888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 28460              		.loc 1 2888 0
 28461 19b8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 28462 19ba 23F07003 		bic	r3, r3, #112
 28463 19be FB81     		strh	r3, [r7, #14]	@ movhi
2889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Input Trigger source */
2891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 28464              		.loc 1 2891 0
 28465 19c0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 28466 19c2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28467 19c4 42EA0303 		orr	r3, r2, r3
 28468 19c8 FB81     		strh	r3, [r7, #14]	@ movhi
2892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
2894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 28469              		.loc 1 2894 0
 28470 19ca 7B68     		ldr	r3, [r7, #4]
 28471 19cc FA89     		ldrh	r2, [r7, #14]	@ movhi
 28472 19ce 1A81     		strh	r2, [r3, #8]	@ movhi
2895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28473              		.loc 1 2895 0
 28474 19d0 07F11407 		add	r7, r7, #20
 28475 19d4 BD46     		mov	sp, r7
 28476 19d6 80BC     		pop	{r7}
 28477 19d8 7047     		bx	lr
 28478              		.cfi_endproc
 28479              	.LFE109:
 28481 19da 00BF     		.align	2
 28482              		.global	TIM_SelectOutputTrigger
 28483              		.thumb
 28484              		.thumb_func
 28486              	TIM_SelectOutputTrigger:
 28487              	.LFB110:
2896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
2901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   This parameter can be one of the following values:
2903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  - For all TIMx
2905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28488              		.loc 1 2920 0
 28489              		.cfi_startproc
 28490              		@ args = 0, pretend = 0, frame = 8
 28491              		@ frame_needed = 1, uses_anonymous_args = 0
 28492              		@ link register save eliminated.
 28493 19dc 80B4     		push	{r7}
 28494              	.LCFI243:
 28495              		.cfi_def_cfa_offset 4
 28496 19de 83B0     		sub	sp, sp, #12
 28497              	.LCFI244:
 28498              		.cfi_def_cfa_offset 16
 28499 19e0 00AF     		add	r7, sp, #0
 28500              		.cfi_offset 7, -4
 28501              	.LCFI245:
 28502              		.cfi_def_cfa_register 7
 28503 19e2 7860     		str	r0, [r7, #4]
 28504 19e4 0B46     		mov	r3, r1
 28505 19e6 7B80     		strh	r3, [r7, #2]	@ movhi
2921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the MMS Bits */
2926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 28506              		.loc 1 2926 0
 28507 19e8 7B68     		ldr	r3, [r7, #4]
 28508 19ea 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28509 19ec 9BB2     		uxth	r3, r3
 28510 19ee 23F07003 		bic	r3, r3, #112
 28511 19f2 9AB2     		uxth	r2, r3
 28512 19f4 7B68     		ldr	r3, [r7, #4]
 28513 19f6 9A80     		strh	r2, [r3, #4]	@ movhi
2927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the TRGO source */
2928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 28514              		.loc 1 2928 0
 28515 19f8 7B68     		ldr	r3, [r7, #4]
 28516 19fa 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28517 19fc 9AB2     		uxth	r2, r3
 28518 19fe 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28519 1a00 42EA0303 		orr	r3, r2, r3
 28520 1a04 9AB2     		uxth	r2, r3
 28521 1a06 7B68     		ldr	r3, [r7, #4]
 28522 1a08 9A80     		strh	r2, [r3, #4]	@ movhi
2929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28523              		.loc 1 2929 0
 28524 1a0a 07F10C07 		add	r7, r7, #12
 28525 1a0e BD46     		mov	sp, r7
 28526 1a10 80BC     		pop	{r7}
 28527 1a12 7047     		bx	lr
 28528              		.cfi_endproc
 28529              	.LFE110:
 28531              		.align	2
 28532              		.global	TIM_SelectSlaveMode
 28533              		.thumb
 28534              		.thumb_func
 28536              	TIM_SelectSlaveMode:
 28537              	.LFB111:
2930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28538              		.loc 1 2944 0
 28539              		.cfi_startproc
 28540              		@ args = 0, pretend = 0, frame = 8
 28541              		@ frame_needed = 1, uses_anonymous_args = 0
 28542              		@ link register save eliminated.
 28543 1a14 80B4     		push	{r7}
 28544              	.LCFI246:
 28545              		.cfi_def_cfa_offset 4
 28546 1a16 83B0     		sub	sp, sp, #12
 28547              	.LCFI247:
 28548              		.cfi_def_cfa_offset 16
 28549 1a18 00AF     		add	r7, sp, #0
 28550              		.cfi_offset 7, -4
 28551              	.LCFI248:
 28552              		.cfi_def_cfa_register 7
 28553 1a1a 7860     		str	r0, [r7, #4]
 28554 1a1c 0B46     		mov	r3, r1
 28555 1a1e 7B80     		strh	r3, [r7, #2]	@ movhi
2945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the SMS Bits */
2950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 28556              		.loc 1 2950 0
 28557 1a20 7B68     		ldr	r3, [r7, #4]
 28558 1a22 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28559 1a24 9BB2     		uxth	r3, r3
 28560 1a26 23F00703 		bic	r3, r3, #7
 28561 1a2a 9AB2     		uxth	r2, r3
 28562 1a2c 7B68     		ldr	r3, [r7, #4]
 28563 1a2e 1A81     		strh	r2, [r3, #8]	@ movhi
2951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Slave Mode */
2953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 28564              		.loc 1 2953 0
 28565 1a30 7B68     		ldr	r3, [r7, #4]
 28566 1a32 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28567 1a34 9AB2     		uxth	r2, r3
 28568 1a36 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28569 1a38 42EA0303 		orr	r3, r2, r3
 28570 1a3c 9AB2     		uxth	r2, r3
 28571 1a3e 7B68     		ldr	r3, [r7, #4]
 28572 1a40 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28573              		.loc 1 2954 0
 28574 1a42 07F10C07 		add	r7, r7, #12
 28575 1a46 BD46     		mov	sp, r7
 28576 1a48 80BC     		pop	{r7}
 28577 1a4a 7047     		bx	lr
 28578              		.cfi_endproc
 28579              	.LFE111:
 28581              		.align	2
 28582              		.global	TIM_SelectMasterSlaveMode
 28583              		.thumb
 28584              		.thumb_func
 28586              	TIM_SelectMasterSlaveMode:
 28587              	.LFB112:
2955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28588              		.loc 1 2967 0
 28589              		.cfi_startproc
 28590              		@ args = 0, pretend = 0, frame = 8
 28591              		@ frame_needed = 1, uses_anonymous_args = 0
 28592              		@ link register save eliminated.
 28593 1a4c 80B4     		push	{r7}
 28594              	.LCFI249:
 28595              		.cfi_def_cfa_offset 4
 28596 1a4e 83B0     		sub	sp, sp, #12
 28597              	.LCFI250:
 28598              		.cfi_def_cfa_offset 16
 28599 1a50 00AF     		add	r7, sp, #0
 28600              		.cfi_offset 7, -4
 28601              	.LCFI251:
 28602              		.cfi_def_cfa_register 7
 28603 1a52 7860     		str	r0, [r7, #4]
 28604 1a54 0B46     		mov	r3, r1
 28605 1a56 7B80     		strh	r3, [r7, #2]	@ movhi
2968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the MSM Bit */
2973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 28606              		.loc 1 2973 0
 28607 1a58 7B68     		ldr	r3, [r7, #4]
 28608 1a5a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28609 1a5c 9BB2     		uxth	r3, r3
 28610 1a5e 23F08003 		bic	r3, r3, #128
 28611 1a62 9AB2     		uxth	r2, r3
 28612 1a64 7B68     		ldr	r3, [r7, #4]
 28613 1a66 1A81     		strh	r2, [r3, #8]	@ movhi
2974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 28614              		.loc 1 2976 0
 28615 1a68 7B68     		ldr	r3, [r7, #4]
 28616 1a6a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28617 1a6c 9AB2     		uxth	r2, r3
 28618 1a6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28619 1a70 42EA0303 		orr	r3, r2, r3
 28620 1a74 9AB2     		uxth	r2, r3
 28621 1a76 7B68     		ldr	r3, [r7, #4]
 28622 1a78 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28623              		.loc 1 2977 0
 28624 1a7a 07F10C07 		add	r7, r7, #12
 28625 1a7e BD46     		mov	sp, r7
 28626 1a80 80BC     		pop	{r7}
 28627 1a82 7047     		bx	lr
 28628              		.cfi_endproc
 28629              	.LFE112:
 28631              		.align	2
 28632              		.global	TIM_ETRConfig
 28633              		.thumb
 28634              		.thumb_func
 28636              	TIM_ETRConfig:
 28637              	.LFB113:
2978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28638              		.loc 1 2998 0
 28639              		.cfi_startproc
 28640              		@ args = 0, pretend = 0, frame = 24
 28641              		@ frame_needed = 1, uses_anonymous_args = 0
 28642              		@ link register save eliminated.
 28643 1a84 80B4     		push	{r7}
 28644              	.LCFI252:
 28645              		.cfi_def_cfa_offset 4
 28646 1a86 87B0     		sub	sp, sp, #28
 28647              	.LCFI253:
 28648              		.cfi_def_cfa_offset 32
 28649 1a88 00AF     		add	r7, sp, #0
 28650              		.cfi_offset 7, -4
 28651              	.LCFI254:
 28652              		.cfi_def_cfa_register 7
 28653 1a8a F860     		str	r0, [r7, #12]
 28654 1a8c 7981     		strh	r1, [r7, #10]	@ movhi
 28655 1a8e 3A81     		strh	r2, [r7, #8]	@ movhi
 28656 1a90 FB80     		strh	r3, [r7, #6]	@ movhi
2999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 28657              		.loc 1 2999 0
 28658 1a92 4FF00003 		mov	r3, #0
 28659 1a96 FB82     		strh	r3, [r7, #22]	@ movhi
3000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 28660              		.loc 1 3007 0
 28661 1a98 FB68     		ldr	r3, [r7, #12]
 28662 1a9a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28663 1a9c FB82     		strh	r3, [r7, #22]	@ movhi
3008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the ETR Bits */
3010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 28664              		.loc 1 3010 0
 28665 1a9e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28666 1aa0 03F0FF03 		and	r3, r3, #255
 28667 1aa4 FB82     		strh	r3, [r7, #22]	@ movhi
3011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 28668              		.loc 1 3013 0
 28669 1aa6 FB88     		ldrh	r3, [r7, #6]	@ movhi
 28670 1aa8 4FEA0323 		lsl	r3, r3, #8
 28671 1aac 9AB2     		uxth	r2, r3
 28672 1aae 3B89     		ldrh	r3, [r7, #8]	@ movhi
 28673 1ab0 42EA0303 		orr	r3, r2, r3
 28674 1ab4 9AB2     		uxth	r2, r3
 28675 1ab6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 28676 1ab8 42EA0303 		orr	r3, r2, r3
 28677 1abc 9AB2     		uxth	r2, r3
 28678 1abe FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28679 1ac0 42EA0303 		orr	r3, r2, r3
 28680 1ac4 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
3016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 28681              		.loc 1 3016 0
 28682 1ac6 FB68     		ldr	r3, [r7, #12]
 28683 1ac8 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 28684 1aca 1A81     		strh	r2, [r3, #8]	@ movhi
3017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28685              		.loc 1 3017 0
 28686 1acc 07F11C07 		add	r7, r7, #28
 28687 1ad0 BD46     		mov	sp, r7
 28688 1ad2 80BC     		pop	{r7}
 28689 1ad4 7047     		bx	lr
 28690              		.cfi_endproc
 28691              	.LFE113:
 28693 1ad6 00BF     		.align	2
 28694              		.global	TIM_EncoderInterfaceConfig
 28695              		.thumb
 28696              		.thumb_func
 28698              	TIM_EncoderInterfaceConfig:
 28699              	.LFB114:
3018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Specific interface management functions 
3024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
3025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
3026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
3027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                     Specific interface management functions
3028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
3029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
3031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
3032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                       on the level of the other input.
3044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28700              		.loc 1 3056 0
 28701              		.cfi_startproc
 28702              		@ args = 0, pretend = 0, frame = 24
 28703              		@ frame_needed = 1, uses_anonymous_args = 0
 28704              		@ link register save eliminated.
 28705 1ad8 80B4     		push	{r7}
 28706              	.LCFI255:
 28707              		.cfi_def_cfa_offset 4
 28708 1ada 87B0     		sub	sp, sp, #28
 28709              	.LCFI256:
 28710              		.cfi_def_cfa_offset 32
 28711 1adc 00AF     		add	r7, sp, #0
 28712              		.cfi_offset 7, -4
 28713              	.LCFI257:
 28714              		.cfi_def_cfa_register 7
 28715 1ade F860     		str	r0, [r7, #12]
 28716 1ae0 7981     		strh	r1, [r7, #10]	@ movhi
 28717 1ae2 3A81     		strh	r2, [r7, #8]	@ movhi
 28718 1ae4 FB80     		strh	r3, [r7, #6]	@ movhi
3057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 28719              		.loc 1 3057 0
 28720 1ae6 4FF00003 		mov	r3, #0
 28721 1aea FB82     		strh	r3, [r7, #22]	@ movhi
3058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 28722              		.loc 1 3058 0
 28723 1aec 4FF00003 		mov	r3, #0
 28724 1af0 BB82     		strh	r3, [r7, #20]	@ movhi
3059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 28725              		.loc 1 3059 0
 28726 1af2 4FF00003 		mov	r3, #0
 28727 1af6 7B82     		strh	r3, [r7, #18]	@ movhi
3060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
3061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 28728              		.loc 1 3068 0
 28729 1af8 FB68     		ldr	r3, [r7, #12]
 28730 1afa 1B89     		ldrh	r3, [r3, #8]	@ movhi
 28731 1afc FB82     		strh	r3, [r7, #22]	@ movhi
3069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 28732              		.loc 1 3071 0
 28733 1afe FB68     		ldr	r3, [r7, #12]
 28734 1b00 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28735 1b02 BB82     		strh	r3, [r7, #20]	@ movhi
3072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
3074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 28736              		.loc 1 3074 0
 28737 1b04 FB68     		ldr	r3, [r7, #12]
 28738 1b06 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 28739 1b08 7B82     		strh	r3, [r7, #18]	@ movhi
3075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the encoder Mode */
3077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 28740              		.loc 1 3077 0
 28741 1b0a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28742 1b0c 23F00703 		bic	r3, r3, #7
 28743 1b10 FB82     		strh	r3, [r7, #22]	@ movhi
3078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 28744              		.loc 1 3078 0
 28745 1b12 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 28746 1b14 7B89     		ldrh	r3, [r7, #10]	@ movhi
 28747 1b16 42EA0303 		orr	r3, r2, r3
 28748 1b1a FB82     		strh	r3, [r7, #22]	@ movhi
3079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 28749              		.loc 1 3081 0
 28750 1b1c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 28751 1b1e 23F44073 		bic	r3, r3, #768
 28752 1b22 23F00303 		bic	r3, r3, #3
 28753 1b26 BB82     		strh	r3, [r7, #20]	@ movhi
3082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 28754              		.loc 1 3082 0
 28755 1b28 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 28756 1b2a 43F48073 		orr	r3, r3, #256
 28757 1b2e 43F00103 		orr	r3, r3, #1
 28758 1b32 BB82     		strh	r3, [r7, #20]	@ movhi
3083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 28759              		.loc 1 3085 0
 28760 1b34 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 28761 1b36 23F02203 		bic	r3, r3, #34
 28762 1b3a 7B82     		strh	r3, [r7, #18]	@ movhi
3086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 28763              		.loc 1 3086 0
 28764 1b3c FB88     		ldrh	r3, [r7, #6]	@ movhi
 28765 1b3e 4FEA0313 		lsl	r3, r3, #4
 28766 1b42 9AB2     		uxth	r2, r3
 28767 1b44 3B89     		ldrh	r3, [r7, #8]	@ movhi
 28768 1b46 42EA0303 		orr	r3, r2, r3
 28769 1b4a 9AB2     		uxth	r2, r3
 28770 1b4c 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 28771 1b4e 42EA0303 		orr	r3, r2, r3
 28772 1b52 7B82     		strh	r3, [r7, #18]	@ movhi
3087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
3089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 28773              		.loc 1 3089 0
 28774 1b54 FB68     		ldr	r3, [r7, #12]
 28775 1b56 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 28776 1b58 1A81     		strh	r2, [r3, #8]	@ movhi
3090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 28777              		.loc 1 3092 0
 28778 1b5a FB68     		ldr	r3, [r7, #12]
 28779 1b5c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 28780 1b5e 1A83     		strh	r2, [r3, #24]	@ movhi
3093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
3095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 28781              		.loc 1 3095 0
 28782 1b60 FB68     		ldr	r3, [r7, #12]
 28783 1b62 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 28784 1b64 1A84     		strh	r2, [r3, #32]	@ movhi
3096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28785              		.loc 1 3096 0
 28786 1b66 07F11C07 		add	r7, r7, #28
 28787 1b6a BD46     		mov	sp, r7
 28788 1b6c 80BC     		pop	{r7}
 28789 1b6e 7047     		bx	lr
 28790              		.cfi_endproc
 28791              	.LFE114:
 28793              		.align	2
 28794              		.global	TIM_SelectHallSensor
 28795              		.thumb
 28796              		.thumb_func
 28798              	TIM_SelectHallSensor:
 28799              	.LFB115:
3097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28800              		.loc 1 3107 0
 28801              		.cfi_startproc
 28802              		@ args = 0, pretend = 0, frame = 8
 28803              		@ frame_needed = 1, uses_anonymous_args = 0
 28804              		@ link register save eliminated.
 28805 1b70 80B4     		push	{r7}
 28806              	.LCFI258:
 28807              		.cfi_def_cfa_offset 4
 28808 1b72 83B0     		sub	sp, sp, #12
 28809              	.LCFI259:
 28810              		.cfi_def_cfa_offset 16
 28811 1b74 00AF     		add	r7, sp, #0
 28812              		.cfi_offset 7, -4
 28813              	.LCFI260:
 28814              		.cfi_def_cfa_register 7
 28815 1b76 7860     		str	r0, [r7, #4]
 28816 1b78 0B46     		mov	r3, r1
 28817 1b7a FB70     		strb	r3, [r7, #3]
3108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 28818              		.loc 1 3112 0
 28819 1b7c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 28820 1b7e 002B     		cmp	r3, #0
 28821 1b80 08D0     		beq	.L154
3113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
3114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the TI1S Bit */
3115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 28822              		.loc 1 3115 0
 28823 1b82 7B68     		ldr	r3, [r7, #4]
 28824 1b84 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28825 1b86 9BB2     		uxth	r3, r3
 28826 1b88 43F08003 		orr	r3, r3, #128
 28827 1b8c 9AB2     		uxth	r2, r3
 28828 1b8e 7B68     		ldr	r3, [r7, #4]
 28829 1b90 9A80     		strh	r2, [r3, #4]	@ movhi
 28830 1b92 07E0     		b	.L153
 28831              	.L154:
3116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
3117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
3118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
3119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the TI1S Bit */
3120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 28832              		.loc 1 3120 0
 28833 1b94 7B68     		ldr	r3, [r7, #4]
 28834 1b96 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28835 1b98 9BB2     		uxth	r3, r3
 28836 1b9a 23F08003 		bic	r3, r3, #128
 28837 1b9e 9AB2     		uxth	r2, r3
 28838 1ba0 7B68     		ldr	r3, [r7, #4]
 28839 1ba2 9A80     		strh	r2, [r3, #4]	@ movhi
 28840              	.L153:
3121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
3122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28841              		.loc 1 3122 0
 28842 1ba4 07F10C07 		add	r7, r7, #12
 28843 1ba8 BD46     		mov	sp, r7
 28844 1baa 80BC     		pop	{r7}
 28845 1bac 7047     		bx	lr
 28846              		.cfi_endproc
 28847              	.LFE115:
 28849 1bae 00BF     		.align	2
 28850              		.global	TIM_RemapConfig
 28851              		.thumb
 28852              		.thumb_func
 28854              	TIM_RemapConfig:
 28855              	.LFB116:
3123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   Specific remapping management function
3129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
3130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
3131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
3132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                      Specific remapping management function
3133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
3134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
3136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
3137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28856              		.loc 1 3158 0
 28857              		.cfi_startproc
 28858              		@ args = 0, pretend = 0, frame = 8
 28859              		@ frame_needed = 1, uses_anonymous_args = 0
 28860              		@ link register save eliminated.
 28861 1bb0 80B4     		push	{r7}
 28862              	.LCFI261:
 28863              		.cfi_def_cfa_offset 4
 28864 1bb2 83B0     		sub	sp, sp, #12
 28865              	.LCFI262:
 28866              		.cfi_def_cfa_offset 16
 28867 1bb4 00AF     		add	r7, sp, #0
 28868              		.cfi_offset 7, -4
 28869              	.LCFI263:
 28870              		.cfi_def_cfa_register 7
 28871 1bb6 7860     		str	r0, [r7, #4]
 28872 1bb8 0B46     		mov	r3, r1
 28873 1bba 7B80     		strh	r3, [r7, #2]	@ movhi
3159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  /* Check the parameters */
3160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Timer remapping configuration */
3164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->OR =  TIM_Remap;
 28874              		.loc 1 3164 0
 28875 1bbc 7B68     		ldr	r3, [r7, #4]
 28876 1bbe 7A88     		ldrh	r2, [r7, #2]	@ movhi
 28877 1bc0 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28878              		.loc 1 3165 0
 28879 1bc4 07F10C07 		add	r7, r7, #12
 28880 1bc8 BD46     		mov	sp, r7
 28881 1bca 80BC     		pop	{r7}
 28882 1bcc 7047     		bx	lr
 28883              		.cfi_endproc
 28884              	.LFE116:
 28886 1bce 00BF     		.align	2
 28887              		.thumb
 28888              		.thumb_func
 28890              	TI1_Config:
 28891              	.LFB117:
3166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
3174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28892              		.loc 1 3190 0
 28893              		.cfi_startproc
 28894              		@ args = 0, pretend = 0, frame = 24
 28895              		@ frame_needed = 1, uses_anonymous_args = 0
 28896              		@ link register save eliminated.
 28897 1bd0 80B4     		push	{r7}
 28898              	.LCFI264:
 28899              		.cfi_def_cfa_offset 4
 28900 1bd2 87B0     		sub	sp, sp, #28
 28901              	.LCFI265:
 28902              		.cfi_def_cfa_offset 32
 28903 1bd4 00AF     		add	r7, sp, #0
 28904              		.cfi_offset 7, -4
 28905              	.LCFI266:
 28906              		.cfi_def_cfa_register 7
 28907 1bd6 F860     		str	r0, [r7, #12]
 28908 1bd8 7981     		strh	r1, [r7, #10]	@ movhi
 28909 1bda 3A81     		strh	r2, [r7, #8]	@ movhi
 28910 1bdc FB80     		strh	r3, [r7, #6]	@ movhi
3191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 28911              		.loc 1 3191 0
 28912 1bde 4FF00003 		mov	r3, #0
 28913 1be2 FB82     		strh	r3, [r7, #22]	@ movhi
 28914 1be4 4FF00003 		mov	r3, #0
 28915 1be8 BB82     		strh	r3, [r7, #20]	@ movhi
3192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 28916              		.loc 1 3194 0
 28917 1bea FB68     		ldr	r3, [r7, #12]
 28918 1bec 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 28919 1bee 9BB2     		uxth	r3, r3
 28920 1bf0 23F00103 		bic	r3, r3, #1
 28921 1bf4 9AB2     		uxth	r2, r3
 28922 1bf6 FB68     		ldr	r3, [r7, #12]
 28923 1bf8 1A84     		strh	r2, [r3, #32]	@ movhi
3195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 28924              		.loc 1 3195 0
 28925 1bfa FB68     		ldr	r3, [r7, #12]
 28926 1bfc 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28927 1bfe FB82     		strh	r3, [r7, #22]	@ movhi
3196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 28928              		.loc 1 3196 0
 28929 1c00 FB68     		ldr	r3, [r7, #12]
 28930 1c02 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 28931 1c04 BB82     		strh	r3, [r7, #20]	@ movhi
3197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 28932              		.loc 1 3199 0
 28933 1c06 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28934 1c08 23F0F303 		bic	r3, r3, #243
 28935 1c0c FB82     		strh	r3, [r7, #22]	@ movhi
3200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 28936              		.loc 1 3200 0
 28937 1c0e FB88     		ldrh	r3, [r7, #6]	@ movhi
 28938 1c10 4FEA0313 		lsl	r3, r3, #4
 28939 1c14 9AB2     		uxth	r2, r3
 28940 1c16 3B89     		ldrh	r3, [r7, #8]	@ movhi
 28941 1c18 42EA0303 		orr	r3, r2, r3
 28942 1c1c 9AB2     		uxth	r2, r3
 28943 1c1e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 28944 1c20 42EA0303 		orr	r3, r2, r3
 28945 1c24 FB82     		strh	r3, [r7, #22]	@ movhi
3201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 28946              		.loc 1 3203 0
 28947 1c26 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 28948 1c28 23F00A03 		bic	r3, r3, #10
 28949 1c2c BB82     		strh	r3, [r7, #20]	@ movhi
3204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 28950              		.loc 1 3204 0
 28951 1c2e 7A89     		ldrh	r2, [r7, #10]	@ movhi
 28952 1c30 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 28953 1c32 42EA0303 		orr	r3, r2, r3
 28954 1c36 9BB2     		uxth	r3, r3
 28955 1c38 43F00103 		orr	r3, r3, #1
 28956 1c3c BB82     		strh	r3, [r7, #20]	@ movhi
3205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 28957              		.loc 1 3207 0
 28958 1c3e FB68     		ldr	r3, [r7, #12]
 28959 1c40 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 28960 1c42 1A83     		strh	r2, [r3, #24]	@ movhi
3208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 28961              		.loc 1 3208 0
 28962 1c44 FB68     		ldr	r3, [r7, #12]
 28963 1c46 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 28964 1c48 1A84     		strh	r2, [r3, #32]	@ movhi
3209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 28965              		.loc 1 3209 0
 28966 1c4a 07F11C07 		add	r7, r7, #28
 28967 1c4e BD46     		mov	sp, r7
 28968 1c50 80BC     		pop	{r7}
 28969 1c52 7047     		bx	lr
 28970              		.cfi_endproc
 28971              	.LFE117:
 28973              		.align	2
 28974              		.thumb
 28975              		.thumb_func
 28977              	TI2_Config:
 28978              	.LFB118:
3210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 28979              		.loc 1 3231 0
 28980              		.cfi_startproc
 28981              		@ args = 0, pretend = 0, frame = 24
 28982              		@ frame_needed = 1, uses_anonymous_args = 0
 28983              		@ link register save eliminated.
 28984 1c54 80B4     		push	{r7}
 28985              	.LCFI267:
 28986              		.cfi_def_cfa_offset 4
 28987 1c56 87B0     		sub	sp, sp, #28
 28988              	.LCFI268:
 28989              		.cfi_def_cfa_offset 32
 28990 1c58 00AF     		add	r7, sp, #0
 28991              		.cfi_offset 7, -4
 28992              	.LCFI269:
 28993              		.cfi_def_cfa_register 7
 28994 1c5a F860     		str	r0, [r7, #12]
 28995 1c5c 7981     		strh	r1, [r7, #10]	@ movhi
 28996 1c5e 3A81     		strh	r2, [r7, #8]	@ movhi
 28997 1c60 FB80     		strh	r3, [r7, #6]	@ movhi
3232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 28998              		.loc 1 3232 0
 28999 1c62 4FF00003 		mov	r3, #0
 29000 1c66 FB82     		strh	r3, [r7, #22]	@ movhi
 29001 1c68 4FF00003 		mov	r3, #0
 29002 1c6c BB82     		strh	r3, [r7, #20]	@ movhi
 29003 1c6e 4FF00003 		mov	r3, #0
 29004 1c72 7B82     		strh	r3, [r7, #18]	@ movhi
3233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 29005              		.loc 1 3235 0
 29006 1c74 FB68     		ldr	r3, [r7, #12]
 29007 1c76 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29008 1c78 9BB2     		uxth	r3, r3
 29009 1c7a 23F01003 		bic	r3, r3, #16
 29010 1c7e 9AB2     		uxth	r2, r3
 29011 1c80 FB68     		ldr	r3, [r7, #12]
 29012 1c82 1A84     		strh	r2, [r3, #32]	@ movhi
3236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 29013              		.loc 1 3236 0
 29014 1c84 FB68     		ldr	r3, [r7, #12]
 29015 1c86 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 29016 1c88 FB82     		strh	r3, [r7, #22]	@ movhi
3237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 29017              		.loc 1 3237 0
 29018 1c8a FB68     		ldr	r3, [r7, #12]
 29019 1c8c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29020 1c8e BB82     		strh	r3, [r7, #20]	@ movhi
3238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 29021              		.loc 1 3238 0
 29022 1c90 7B89     		ldrh	r3, [r7, #10]	@ movhi
 29023 1c92 4FEA0313 		lsl	r3, r3, #4
 29024 1c96 7B82     		strh	r3, [r7, #18]	@ movhi
3239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 29025              		.loc 1 3241 0
 29026 1c98 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29027 1c9a 23F44073 		bic	r3, r3, #768
 29028 1c9e 4FEA0353 		lsl	r3, r3, #20
 29029 1ca2 4FEA1353 		lsr	r3, r3, #20
 29030 1ca6 FB82     		strh	r3, [r7, #22]	@ movhi
3242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 29031              		.loc 1 3242 0
 29032 1ca8 FB88     		ldrh	r3, [r7, #6]	@ movhi
 29033 1caa 4FEA0333 		lsl	r3, r3, #12
 29034 1cae 9AB2     		uxth	r2, r3
 29035 1cb0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29036 1cb2 42EA0303 		orr	r3, r2, r3
 29037 1cb6 FB82     		strh	r3, [r7, #22]	@ movhi
3243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 29038              		.loc 1 3243 0
 29039 1cb8 3B89     		ldrh	r3, [r7, #8]	@ movhi
 29040 1cba 4FEA0323 		lsl	r3, r3, #8
 29041 1cbe 9AB2     		uxth	r2, r3
 29042 1cc0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29043 1cc2 42EA0303 		orr	r3, r2, r3
 29044 1cc6 FB82     		strh	r3, [r7, #22]	@ movhi
3244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 29045              		.loc 1 3246 0
 29046 1cc8 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29047 1cca 23F0A003 		bic	r3, r3, #160
 29048 1cce BB82     		strh	r3, [r7, #20]	@ movhi
3247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 29049              		.loc 1 3247 0
 29050 1cd0 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 29051 1cd2 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29052 1cd4 42EA0303 		orr	r3, r2, r3
 29053 1cd8 9BB2     		uxth	r3, r3
 29054 1cda 43F01003 		orr	r3, r3, #16
 29055 1cde BB82     		strh	r3, [r7, #20]	@ movhi
3248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 29056              		.loc 1 3250 0
 29057 1ce0 FB68     		ldr	r3, [r7, #12]
 29058 1ce2 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 29059 1ce4 1A83     		strh	r2, [r3, #24]	@ movhi
3251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 29060              		.loc 1 3251 0
 29061 1ce6 FB68     		ldr	r3, [r7, #12]
 29062 1ce8 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 29063 1cea 1A84     		strh	r2, [r3, #32]	@ movhi
3252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 29064              		.loc 1 3252 0
 29065 1cec 07F11C07 		add	r7, r7, #28
 29066 1cf0 BD46     		mov	sp, r7
 29067 1cf2 80BC     		pop	{r7}
 29068 1cf4 7047     		bx	lr
 29069              		.cfi_endproc
 29070              	.LFE118:
 29072 1cf6 00BF     		.align	2
 29073              		.thumb
 29074              		.thumb_func
 29076              	TI3_Config:
 29077              	.LFB119:
3253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 29078              		.loc 1 3273 0
 29079              		.cfi_startproc
 29080              		@ args = 0, pretend = 0, frame = 24
 29081              		@ frame_needed = 1, uses_anonymous_args = 0
 29082              		@ link register save eliminated.
 29083 1cf8 80B4     		push	{r7}
 29084              	.LCFI270:
 29085              		.cfi_def_cfa_offset 4
 29086 1cfa 87B0     		sub	sp, sp, #28
 29087              	.LCFI271:
 29088              		.cfi_def_cfa_offset 32
 29089 1cfc 00AF     		add	r7, sp, #0
 29090              		.cfi_offset 7, -4
 29091              	.LCFI272:
 29092              		.cfi_def_cfa_register 7
 29093 1cfe F860     		str	r0, [r7, #12]
 29094 1d00 7981     		strh	r1, [r7, #10]	@ movhi
 29095 1d02 3A81     		strh	r2, [r7, #8]	@ movhi
 29096 1d04 FB80     		strh	r3, [r7, #6]	@ movhi
3274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 29097              		.loc 1 3274 0
 29098 1d06 4FF00003 		mov	r3, #0
 29099 1d0a FB82     		strh	r3, [r7, #22]	@ movhi
 29100 1d0c 4FF00003 		mov	r3, #0
 29101 1d10 BB82     		strh	r3, [r7, #20]	@ movhi
 29102 1d12 4FF00003 		mov	r3, #0
 29103 1d16 7B82     		strh	r3, [r7, #18]	@ movhi
3275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 29104              		.loc 1 3277 0
 29105 1d18 FB68     		ldr	r3, [r7, #12]
 29106 1d1a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29107 1d1c 9BB2     		uxth	r3, r3
 29108 1d1e 23F48073 		bic	r3, r3, #256
 29109 1d22 9AB2     		uxth	r2, r3
 29110 1d24 FB68     		ldr	r3, [r7, #12]
 29111 1d26 1A84     		strh	r2, [r3, #32]	@ movhi
3278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 29112              		.loc 1 3278 0
 29113 1d28 FB68     		ldr	r3, [r7, #12]
 29114 1d2a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 29115 1d2c FB82     		strh	r3, [r7, #22]	@ movhi
3279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 29116              		.loc 1 3279 0
 29117 1d2e FB68     		ldr	r3, [r7, #12]
 29118 1d30 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29119 1d32 BB82     		strh	r3, [r7, #20]	@ movhi
3280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 29120              		.loc 1 3280 0
 29121 1d34 7B89     		ldrh	r3, [r7, #10]	@ movhi
 29122 1d36 4FEA0323 		lsl	r3, r3, #8
 29123 1d3a 7B82     		strh	r3, [r7, #18]	@ movhi
3281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 29124              		.loc 1 3283 0
 29125 1d3c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29126 1d3e 23F0F303 		bic	r3, r3, #243
 29127 1d42 FB82     		strh	r3, [r7, #22]	@ movhi
3284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 29128              		.loc 1 3284 0
 29129 1d44 FB88     		ldrh	r3, [r7, #6]	@ movhi
 29130 1d46 4FEA0313 		lsl	r3, r3, #4
 29131 1d4a 9AB2     		uxth	r2, r3
 29132 1d4c 3B89     		ldrh	r3, [r7, #8]	@ movhi
 29133 1d4e 42EA0303 		orr	r3, r2, r3
 29134 1d52 9AB2     		uxth	r2, r3
 29135 1d54 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29136 1d56 42EA0303 		orr	r3, r2, r3
 29137 1d5a FB82     		strh	r3, [r7, #22]	@ movhi
3285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 29138              		.loc 1 3287 0
 29139 1d5c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29140 1d5e 23F42063 		bic	r3, r3, #2560
 29141 1d62 BB82     		strh	r3, [r7, #20]	@ movhi
3288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 29142              		.loc 1 3288 0
 29143 1d64 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 29144 1d66 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29145 1d68 42EA0303 		orr	r3, r2, r3
 29146 1d6c 9BB2     		uxth	r3, r3
 29147 1d6e 43F48073 		orr	r3, r3, #256
 29148 1d72 BB82     		strh	r3, [r7, #20]	@ movhi
3289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 29149              		.loc 1 3291 0
 29150 1d74 FB68     		ldr	r3, [r7, #12]
 29151 1d76 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 29152 1d78 9A83     		strh	r2, [r3, #28]	@ movhi
3292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 29153              		.loc 1 3292 0
 29154 1d7a FB68     		ldr	r3, [r7, #12]
 29155 1d7c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 29156 1d7e 1A84     		strh	r2, [r3, #32]	@ movhi
3293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 29157              		.loc 1 3293 0
 29158 1d80 07F11C07 		add	r7, r7, #28
 29159 1d84 BD46     		mov	sp, r7
 29160 1d86 80BC     		pop	{r7}
 29161 1d88 7047     		bx	lr
 29162              		.cfi_endproc
 29163              	.LFE119:
 29165 1d8a 00BF     		.align	2
 29166              		.thumb
 29167              		.thumb_func
 29169              	TI4_Config:
 29170              	.LFB120:
3294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 29171              		.loc 1 3314 0
 29172              		.cfi_startproc
 29173              		@ args = 0, pretend = 0, frame = 24
 29174              		@ frame_needed = 1, uses_anonymous_args = 0
 29175              		@ link register save eliminated.
 29176 1d8c 80B4     		push	{r7}
 29177              	.LCFI273:
 29178              		.cfi_def_cfa_offset 4
 29179 1d8e 87B0     		sub	sp, sp, #28
 29180              	.LCFI274:
 29181              		.cfi_def_cfa_offset 32
 29182 1d90 00AF     		add	r7, sp, #0
 29183              		.cfi_offset 7, -4
 29184              	.LCFI275:
 29185              		.cfi_def_cfa_register 7
 29186 1d92 F860     		str	r0, [r7, #12]
 29187 1d94 7981     		strh	r1, [r7, #10]	@ movhi
 29188 1d96 3A81     		strh	r2, [r7, #8]	@ movhi
 29189 1d98 FB80     		strh	r3, [r7, #6]	@ movhi
3315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 29190              		.loc 1 3315 0
 29191 1d9a 4FF00003 		mov	r3, #0
 29192 1d9e FB82     		strh	r3, [r7, #22]	@ movhi
 29193 1da0 4FF00003 		mov	r3, #0
 29194 1da4 BB82     		strh	r3, [r7, #20]	@ movhi
 29195 1da6 4FF00003 		mov	r3, #0
 29196 1daa 7B82     		strh	r3, [r7, #18]	@ movhi
3316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 29197              		.loc 1 3318 0
 29198 1dac FB68     		ldr	r3, [r7, #12]
 29199 1dae 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29200 1db0 9BB2     		uxth	r3, r3
 29201 1db2 23F48053 		bic	r3, r3, #4096
 29202 1db6 9AB2     		uxth	r2, r3
 29203 1db8 FB68     		ldr	r3, [r7, #12]
 29204 1dba 1A84     		strh	r2, [r3, #32]	@ movhi
3319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 29205              		.loc 1 3319 0
 29206 1dbc FB68     		ldr	r3, [r7, #12]
 29207 1dbe 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 29208 1dc0 FB82     		strh	r3, [r7, #22]	@ movhi
3320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 29209              		.loc 1 3320 0
 29210 1dc2 FB68     		ldr	r3, [r7, #12]
 29211 1dc4 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 29212 1dc6 BB82     		strh	r3, [r7, #20]	@ movhi
3321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 29213              		.loc 1 3321 0
 29214 1dc8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 29215 1dca 4FEA0333 		lsl	r3, r3, #12
 29216 1dce 7B82     		strh	r3, [r7, #18]	@ movhi
3322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 29217              		.loc 1 3324 0
 29218 1dd0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29219 1dd2 23F44073 		bic	r3, r3, #768
 29220 1dd6 4FEA0353 		lsl	r3, r3, #20
 29221 1dda 4FEA1353 		lsr	r3, r3, #20
 29222 1dde FB82     		strh	r3, [r7, #22]	@ movhi
3325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 29223              		.loc 1 3325 0
 29224 1de0 3B89     		ldrh	r3, [r7, #8]	@ movhi
 29225 1de2 4FEA0323 		lsl	r3, r3, #8
 29226 1de6 9AB2     		uxth	r2, r3
 29227 1de8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29228 1dea 42EA0303 		orr	r3, r2, r3
 29229 1dee FB82     		strh	r3, [r7, #22]	@ movhi
3326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 29230              		.loc 1 3326 0
 29231 1df0 FB88     		ldrh	r3, [r7, #6]	@ movhi
 29232 1df2 4FEA0333 		lsl	r3, r3, #12
 29233 1df6 9AB2     		uxth	r2, r3
 29234 1df8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29235 1dfa 42EA0303 		orr	r3, r2, r3
 29236 1dfe FB82     		strh	r3, [r7, #22]	@ movhi
3327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 29237              		.loc 1 3329 0
 29238 1e00 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29239 1e02 23F40053 		bic	r3, r3, #8192
 29240 1e06 4FEA4343 		lsl	r3, r3, #17
 29241 1e0a 4FEA5343 		lsr	r3, r3, #17
 29242 1e0e BB82     		strh	r3, [r7, #20]	@ movhi
3330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 29243              		.loc 1 3330 0
 29244 1e10 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 29245 1e12 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 29246 1e14 42EA0303 		orr	r3, r2, r3
 29247 1e18 9BB2     		uxth	r3, r3
 29248 1e1a 43F48053 		orr	r3, r3, #4096
 29249 1e1e BB82     		strh	r3, [r7, #20]	@ movhi
3331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 29250              		.loc 1 3333 0
 29251 1e20 FB68     		ldr	r3, [r7, #12]
 29252 1e22 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 29253 1e24 9A83     		strh	r2, [r3, #28]	@ movhi
3334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer ;
 29254              		.loc 1 3334 0
 29255 1e26 FB68     		ldr	r3, [r7, #12]
 29256 1e28 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 29257 1e2a 1A84     		strh	r2, [r3, #32]	@ movhi
3335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 29258              		.loc 1 3335 0
 29259 1e2c 07F11C07 		add	r7, r7, #28
 29260 1e30 BD46     		mov	sp, r7
 29261 1e32 80BC     		pop	{r7}
 29262 1e34 7047     		bx	lr
 29263              		.cfi_endproc
 29264              	.LFE120:
 29266              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_tim.c
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23376  .text:00000000 $t
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23381  .text:00000000 TIM_DeInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23632  .text:00000238 TIM_TimeBaseInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23777  .text:00000330 TIM_TimeBaseStructInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23828  .text:0000036c TIM_PrescalerConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23871  .text:00000394 TIM_CounterModeConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23924  .text:000003d0 TIM_SetCounter
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23960  .text:000003ec TIM_SetAutoreload
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:23996  .text:00000408 TIM_GetCounter
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24031  .text:00000420 TIM_GetPrescaler
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24067  .text:0000043c TIM_UpdateDisableConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24123  .text:0000047c TIM_UpdateRequestConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24179  .text:000004bc TIM_ARRPreloadConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24235  .text:000004fc TIM_SelectOnePulseMode
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24285  .text:00000534 TIM_SetClockDivision
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24335  .text:0000056c TIM_Cmd
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24391  .text:000005ac TIM_OC1Init
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24551  .text:000006b8 TIM_OC2Init
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24725  .text:000007ec TIM_OC3Init
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:24897  .text:0000091c TIM_OC4Init
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25035  .text:00000a04 TIM_OCStructInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25098  .text:00000a58 TIM_SelectOCxM
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25220  .text:00000b20 TIM_SetCompare1
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25256  .text:00000b3c TIM_SetCompare2
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25292  .text:00000b58 TIM_SetCompare3
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25328  .text:00000b74 TIM_SetCompare4
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25364  .text:00000b90 TIM_ForcedOC1Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25417  .text:00000bcc TIM_ForcedOC2Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25472  .text:00000c0c TIM_ForcedOC3Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25525  .text:00000c48 TIM_ForcedOC4Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25580  .text:00000c88 TIM_OC1PreloadConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25633  .text:00000cc4 TIM_OC2PreloadConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25688  .text:00000d04 TIM_OC3PreloadConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25741  .text:00000d40 TIM_OC4PreloadConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25796  .text:00000d80 TIM_OC1FastConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25849  .text:00000dbc TIM_OC2FastConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25904  .text:00000dfc TIM_OC3FastConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:25957  .text:00000e38 TIM_OC4FastConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26012  .text:00000e78 TIM_ClearOC1Ref
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26065  .text:00000eb4 TIM_ClearOC2Ref
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26121  .text:00000ef8 TIM_ClearOC3Ref
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26174  .text:00000f34 TIM_ClearOC4Ref
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26230  .text:00000f78 TIM_OC1PolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26283  .text:00000fb4 TIM_OC1NPolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26336  .text:00000ff0 TIM_OC2PolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26391  .text:00001030 TIM_OC2NPolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26446  .text:00001070 TIM_OC3PolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26501  .text:000010b0 TIM_OC3NPolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26556  .text:000010f0 TIM_OC4PolarityConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26611  .text:00001130 TIM_CCxCmd
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26677  .text:00001190 TIM_CCxNCmd
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26743  .text:000011f0 TIM_ICInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28890  .text:00001bd0 TI1_Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27196  .text:000013f8 TIM_SetIC1Prescaler
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28977  .text:00001c54 TI2_Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27246  .text:00001430 TIM_SetIC2Prescaler
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:29076  .text:00001cf8 TI3_Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27298  .text:00001470 TIM_SetIC3Prescaler
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:29169  .text:00001d8c TI4_Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27348  .text:000014a8 TIM_SetIC4Prescaler
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26872  .text:00001298 TIM_ICStructInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:26923  .text:000012d4 TIM_PWMIConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27056  .text:00001398 TIM_GetCapture1
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27091  .text:000013b0 TIM_GetCapture2
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27126  .text:000013c8 TIM_GetCapture3
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27161  .text:000013e0 TIM_GetCapture4
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27400  .text:000014e8 TIM_BDTRConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27471  .text:00001544 TIM_BDTRStructInit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27530  .text:00001590 TIM_CtrlPWMOutputs
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27588  .text:000015e0 TIM_SelectCOM
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27644  .text:00001620 TIM_CCPreloadControl
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27700  .text:00001660 TIM_ITConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27762  .text:000016ac TIM_GenerateEvent
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27799  .text:000016c8 TIM_GetFlagStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27856  .text:00001708 TIM_ClearFlag
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27895  .text:0000172c TIM_GetITStatus
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:27970  .text:00001790 TIM_ClearITPendingBit
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28009  .text:000017b4 TIM_DMAConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28051  .text:000017e0 TIM_DMACmd
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28113  .text:0000182c TIM_SelectCCDMA
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28169  .text:0000186c TIM_InternalClockConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28208  .text:00001890 TIM_ITRxExternalClockConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28433  .text:000019a0 TIM_SelectInputTrigger
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28253  .text:000018c0 TIM_TIxExternalClockConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28320  .text:00001918 TIM_ETRClockMode1Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28636  .text:00001a84 TIM_ETRConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28386  .text:0000196c TIM_ETRClockMode2Config
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28486  .text:000019dc TIM_SelectOutputTrigger
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28536  .text:00001a14 TIM_SelectSlaveMode
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28586  .text:00001a4c TIM_SelectMasterSlaveMode
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28698  .text:00001ad8 TIM_EncoderInterfaceConfig
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28798  .text:00001b70 TIM_SelectHallSensor
C:\Users\red4sch\AppData\Local\Temp\ccmLvGEe.s:28854  .text:00001bb0 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
