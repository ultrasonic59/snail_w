   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"system_stm32f2xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.data
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 000E2707 		.word	120000000
  24              		.global	AHBPrescTable
  25              		.align	2
  28              	AHBPrescTable:
  29 0004 00       		.byte	0
  30 0005 00       		.byte	0
  31 0006 00       		.byte	0
  32 0007 00       		.byte	0
  33 0008 00       		.byte	0
  34 0009 00       		.byte	0
  35 000a 00       		.byte	0
  36 000b 00       		.byte	0
  37 000c 01       		.byte	1
  38 000d 02       		.byte	2
  39 000e 03       		.byte	3
  40 000f 04       		.byte	4
  41 0010 06       		.byte	6
  42 0011 07       		.byte	7
  43 0012 08       		.byte	8
  44 0013 09       		.byte	9
  45              		.text
  46              		.align	2
  47              		.global	SystemInit
  48              		.thumb
  49              		.thumb_func
  51              	SystemInit:
  52              	.LFB29:
  53              		.file 1 "../system/system_stm32f2xx.c"
   1:../system/system_stm32f2xx.c **** /**
   2:../system/system_stm32f2xx.c ****   ******************************************************************************
   3:../system/system_stm32f2xx.c ****   * @file    system_stm32f2xx.c
   4:../system/system_stm32f2xx.c ****   * @author  MCD Application Team
   5:../system/system_stm32f2xx.c ****   * @version V1.0.0
   6:../system/system_stm32f2xx.c ****   * @date    18-April-2011
   7:../system/system_stm32f2xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../system/system_stm32f2xx.c ****   *          This file contains the system clock configuration for STM32F2xx devices,
   9:../system/system_stm32f2xx.c ****   *          and is generated by the clock configuration tool
  10:../system/system_stm32f2xx.c ****   *          "STM32f2xx_Clock_Configuration_V1.0.0.xls"
  11:../system/system_stm32f2xx.c ****   *             
  12:../system/system_stm32f2xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../system/system_stm32f2xx.c ****   *     user application:
  14:../system/system_stm32f2xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../system/system_stm32f2xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../system/system_stm32f2xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../system/system_stm32f2xx.c ****   *                      This function is called at startup just after reset and 
  18:../system/system_stm32f2xx.c ****   *                      before branch to main program. This call is made inside
  19:../system/system_stm32f2xx.c ****   *                      the "startup_stm32f2xx.s" file.
  20:../system/system_stm32f2xx.c ****   *
  21:../system/system_stm32f2xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../system/system_stm32f2xx.c ****   *                                  by the user application to setup the SysTick 
  23:../system/system_stm32f2xx.c ****   *                                  timer or configure other parameters.
  24:../system/system_stm32f2xx.c ****   *                                     
  25:../system/system_stm32f2xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../system/system_stm32f2xx.c ****   *                                 be called whenever the core clock is changed
  27:../system/system_stm32f2xx.c ****   *                                 during program execution.
  28:../system/system_stm32f2xx.c ****   *
  29:../system/system_stm32f2xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../system/system_stm32f2xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f2xx.s" file, to
  31:../system/system_stm32f2xx.c ****   *    configure the system clock before to branch to main program.
  32:../system/system_stm32f2xx.c ****   *
  33:../system/system_stm32f2xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../system/system_stm32f2xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../system/system_stm32f2xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../system/system_stm32f2xx.c ****   *
  37:../system/system_stm32f2xx.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
  38:../system/system_stm32f2xx.c ****   *    in "stm32f2xx.h" file. When HSE is used as system clock source, directly or
  39:../system/system_stm32f2xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../system/system_stm32f2xx.c ****   *    value to your own configuration.
  41:../system/system_stm32f2xx.c ****   *
  42:../system/system_stm32f2xx.c ****   * 5. This file configures the system clock as follows:
  43:../system/system_stm32f2xx.c ****   *=============================================================================
  44:../system/system_stm32f2xx.c ****   *=============================================================================
  45:../system/system_stm32f2xx.c ****   *        Supported STM32F2xx device revision    | Rev B and Y
  46:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  47:../system/system_stm32f2xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  49:../system/system_stm32f2xx.c ****   *        SYSCLK(Hz)                             | 120000000
  50:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  51:../system/system_stm32f2xx.c ****   *        HCLK(Hz)                               | 120000000
  52:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  53:../system/system_stm32f2xx.c ****   *        AHB Prescaler                          | 1
  54:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  55:../system/system_stm32f2xx.c ****   *        APB1 Prescaler                         | 4
  56:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  57:../system/system_stm32f2xx.c ****   *        APB2 Prescaler                         | 2
  58:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  59:../system/system_stm32f2xx.c ****   *        HSE Frequency(Hz)                      | 25000000
  60:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  61:../system/system_stm32f2xx.c ****   *        PLL_M                                  | 25
  62:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  63:../system/system_stm32f2xx.c ****   *        PLL_N                                  | 240
  64:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  65:../system/system_stm32f2xx.c ****   *        PLL_P                                  | 2
  66:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  67:../system/system_stm32f2xx.c ****   *        PLL_Q                                  | 5
  68:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  69:../system/system_stm32f2xx.c ****   *        PLLI2S_N                               | NA
  70:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  71:../system/system_stm32f2xx.c ****   *        PLLI2S_R                               | NA
  72:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  73:../system/system_stm32f2xx.c ****   *        I2S input clock                        | NA
  74:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  75:../system/system_stm32f2xx.c ****   *        VDD(V)                                 | 3.3
  76:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  77:../system/system_stm32f2xx.c ****   *        Flash Latency(WS)                      | 3
  78:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  79:../system/system_stm32f2xx.c ****   *        Prefetch Buffer                        | ON
  80:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  81:../system/system_stm32f2xx.c ****   *        Instruction cache                      | ON
  82:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  83:../system/system_stm32f2xx.c ****   *        Data cache                             | ON
  84:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  85:../system/system_stm32f2xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  86:../system/system_stm32f2xx.c ****   *        SDIO and RNG clock                     |
  87:../system/system_stm32f2xx.c ****   *-----------------------------------------------------------------------------
  88:../system/system_stm32f2xx.c ****   *=============================================================================
  89:../system/system_stm32f2xx.c ****   ****************************************************************************** 
  90:../system/system_stm32f2xx.c ****   * @attention
  91:../system/system_stm32f2xx.c ****   *
  92:../system/system_stm32f2xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  93:../system/system_stm32f2xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  94:../system/system_stm32f2xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  95:../system/system_stm32f2xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  96:../system/system_stm32f2xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  97:../system/system_stm32f2xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  98:../system/system_stm32f2xx.c ****   *
  99:../system/system_stm32f2xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 100:../system/system_stm32f2xx.c ****   ******************************************************************************  
 101:../system/system_stm32f2xx.c ****   */
 102:../system/system_stm32f2xx.c **** 
 103:../system/system_stm32f2xx.c **** /** @addtogroup CMSIS
 104:../system/system_stm32f2xx.c ****   * @{
 105:../system/system_stm32f2xx.c ****   */
 106:../system/system_stm32f2xx.c **** 
 107:../system/system_stm32f2xx.c **** /** @addtogroup stm32f2xx_system
 108:../system/system_stm32f2xx.c ****   * @{
 109:../system/system_stm32f2xx.c ****   */  
 110:../system/system_stm32f2xx.c ****   
 111:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Includes
 112:../system/system_stm32f2xx.c ****   * @{
 113:../system/system_stm32f2xx.c ****   */
 114:../system/system_stm32f2xx.c **** 
 115:../system/system_stm32f2xx.c **** #include "stm32f2xx.h"
 116:../system/system_stm32f2xx.c **** 
 117:../system/system_stm32f2xx.c **** /**
 118:../system/system_stm32f2xx.c ****   * @}
 119:../system/system_stm32f2xx.c ****   */
 120:../system/system_stm32f2xx.c **** 
 121:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_TypesDefinitions
 122:../system/system_stm32f2xx.c ****   * @{
 123:../system/system_stm32f2xx.c ****   */
 124:../system/system_stm32f2xx.c **** 
 125:../system/system_stm32f2xx.c **** /**
 126:../system/system_stm32f2xx.c ****   * @}
 127:../system/system_stm32f2xx.c ****   */
 128:../system/system_stm32f2xx.c **** 
 129:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Defines
 130:../system/system_stm32f2xx.c ****   * @{
 131:../system/system_stm32f2xx.c ****   */
 132:../system/system_stm32f2xx.c **** 
 133:../system/system_stm32f2xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 134:../system/system_stm32f2xx.c ****      on STM322xG_EVAL board as data memory  */
 135:../system/system_stm32f2xx.c **** /* #define DATA_IN_ExtSRAM */
 136:../system/system_stm32f2xx.c **** 
 137:../system/system_stm32f2xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 138:../system/system_stm32f2xx.c ****      Internal SRAM. */
 139:../system/system_stm32f2xx.c **** /* #define VECT_TAB_SRAM */
 140:../system/system_stm32f2xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 141:../system/system_stm32f2xx.c ****                                    This value must be a multiple of 0x200. */
 142:../system/system_stm32f2xx.c **** 
 143:../system/system_stm32f2xx.c **** 
 144:../system/system_stm32f2xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 145:../system/system_stm32f2xx.c **** #define PLL_M      25
 146:../system/system_stm32f2xx.c **** #define PLL_N      240
 147:../system/system_stm32f2xx.c **** 
 148:../system/system_stm32f2xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 149:../system/system_stm32f2xx.c **** #define PLL_P      2
 150:../system/system_stm32f2xx.c **** 
 151:../system/system_stm32f2xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 152:../system/system_stm32f2xx.c **** #define PLL_Q      5
 153:../system/system_stm32f2xx.c **** 
 154:../system/system_stm32f2xx.c **** /**
 155:../system/system_stm32f2xx.c ****   * @}
 156:../system/system_stm32f2xx.c ****   */
 157:../system/system_stm32f2xx.c **** 
 158:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Macros
 159:../system/system_stm32f2xx.c ****   * @{
 160:../system/system_stm32f2xx.c ****   */
 161:../system/system_stm32f2xx.c **** 
 162:../system/system_stm32f2xx.c **** /**
 163:../system/system_stm32f2xx.c ****   * @}
 164:../system/system_stm32f2xx.c ****   */
 165:../system/system_stm32f2xx.c **** 
 166:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Variables
 167:../system/system_stm32f2xx.c ****   * @{
 168:../system/system_stm32f2xx.c ****   */
 169:../system/system_stm32f2xx.c **** 
 170:../system/system_stm32f2xx.c ****   uint32_t SystemCoreClock = 120000000;
 171:../system/system_stm32f2xx.c **** 
 172:../system/system_stm32f2xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 173:../system/system_stm32f2xx.c **** 
 174:../system/system_stm32f2xx.c **** /**
 175:../system/system_stm32f2xx.c ****   * @}
 176:../system/system_stm32f2xx.c ****   */
 177:../system/system_stm32f2xx.c **** 
 178:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_FunctionPrototypes
 179:../system/system_stm32f2xx.c ****   * @{
 180:../system/system_stm32f2xx.c ****   */
 181:../system/system_stm32f2xx.c **** 
 182:../system/system_stm32f2xx.c **** static void SetSysClock(void);
 183:../system/system_stm32f2xx.c **** #ifdef DATA_IN_ExtSRAM
 184:../system/system_stm32f2xx.c ****   static void SystemInit_ExtMemCtl(void); 
 185:../system/system_stm32f2xx.c **** #endif /* DATA_IN_ExtSRAM */
 186:../system/system_stm32f2xx.c **** 
 187:../system/system_stm32f2xx.c **** /**
 188:../system/system_stm32f2xx.c ****   * @}
 189:../system/system_stm32f2xx.c ****   */
 190:../system/system_stm32f2xx.c **** 
 191:../system/system_stm32f2xx.c **** /** @addtogroup STM32F2xx_System_Private_Functions
 192:../system/system_stm32f2xx.c ****   * @{
 193:../system/system_stm32f2xx.c ****   */
 194:../system/system_stm32f2xx.c **** 
 195:../system/system_stm32f2xx.c **** /**
 196:../system/system_stm32f2xx.c ****   * @brief  Setup the microcontroller system
 197:../system/system_stm32f2xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 198:../system/system_stm32f2xx.c ****   *         SystemFrequency variable.
 199:../system/system_stm32f2xx.c ****   * @param  None
 200:../system/system_stm32f2xx.c ****   * @retval None
 201:../system/system_stm32f2xx.c ****   */
 202:../system/system_stm32f2xx.c **** void SystemInit(void)
 203:../system/system_stm32f2xx.c **** {
  54              		.loc 1 203 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 14, -4
  62              		.cfi_offset 7, -8
  63 0002 00AF     		add	r7, sp, #0
  64              	.LCFI1:
  65              		.cfi_def_cfa_register 7
 204:../system/system_stm32f2xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 205:../system/system_stm32f2xx.c ****   /* Set HSION bit */
 206:../system/system_stm32f2xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  66              		.loc 1 206 0
  67 0004 4FF46053 		mov	r3, #14336
  68 0008 C4F20203 		movt	r3, 16386
  69 000c 4FF46052 		mov	r2, #14336
  70 0010 C4F20202 		movt	r2, 16386
  71 0014 1268     		ldr	r2, [r2, #0]
  72 0016 42F00102 		orr	r2, r2, #1
  73 001a 1A60     		str	r2, [r3, #0]
 207:../system/system_stm32f2xx.c **** 
 208:../system/system_stm32f2xx.c ****   /* Reset CFGR register */
 209:../system/system_stm32f2xx.c ****   RCC->CFGR = 0x00000000;
  74              		.loc 1 209 0
  75 001c 4FF46053 		mov	r3, #14336
  76 0020 C4F20203 		movt	r3, 16386
  77 0024 4FF00002 		mov	r2, #0
  78 0028 9A60     		str	r2, [r3, #8]
 210:../system/system_stm32f2xx.c **** 
 211:../system/system_stm32f2xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 212:../system/system_stm32f2xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  79              		.loc 1 212 0
  80 002a 4FF46053 		mov	r3, #14336
  81 002e C4F20203 		movt	r3, 16386
  82 0032 4FF46052 		mov	r2, #14336
  83 0036 C4F20202 		movt	r2, 16386
  84 003a 1268     		ldr	r2, [r2, #0]
  85 003c 22F08472 		bic	r2, r2, #17301504
  86 0040 22F48032 		bic	r2, r2, #65536
  87 0044 1A60     		str	r2, [r3, #0]
 213:../system/system_stm32f2xx.c **** 
 214:../system/system_stm32f2xx.c ****   /* Reset PLLCFGR register */
 215:../system/system_stm32f2xx.c ****   RCC->PLLCFGR = 0x24003010;
  88              		.loc 1 215 0
  89 0046 4FF46053 		mov	r3, #14336
  90 004a C4F20203 		movt	r3, 16386
  91 004e 43F21002 		movw	r2, #12304
  92 0052 C2F20042 		movt	r2, 9216
  93 0056 5A60     		str	r2, [r3, #4]
 216:../system/system_stm32f2xx.c **** 
 217:../system/system_stm32f2xx.c ****   /* Reset HSEBYP bit */
 218:../system/system_stm32f2xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  94              		.loc 1 218 0
  95 0058 4FF46053 		mov	r3, #14336
  96 005c C4F20203 		movt	r3, 16386
  97 0060 4FF46052 		mov	r2, #14336
  98 0064 C4F20202 		movt	r2, 16386
  99 0068 1268     		ldr	r2, [r2, #0]
 100 006a 22F48022 		bic	r2, r2, #262144
 101 006e 1A60     		str	r2, [r3, #0]
 219:../system/system_stm32f2xx.c **** 
 220:../system/system_stm32f2xx.c ****   /* Disable all interrupts */
 221:../system/system_stm32f2xx.c ****   RCC->CIR = 0x00000000;
 102              		.loc 1 221 0
 103 0070 4FF46053 		mov	r3, #14336
 104 0074 C4F20203 		movt	r3, 16386
 105 0078 4FF00002 		mov	r2, #0
 106 007c DA60     		str	r2, [r3, #12]
 222:../system/system_stm32f2xx.c **** 
 223:../system/system_stm32f2xx.c **** #ifdef DATA_IN_ExtSRAM
 224:../system/system_stm32f2xx.c ****   SystemInit_ExtMemCtl(); 
 225:../system/system_stm32f2xx.c **** #endif /* DATA_IN_ExtSRAM */
 226:../system/system_stm32f2xx.c ****          
 227:../system/system_stm32f2xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 228:../system/system_stm32f2xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 229:../system/system_stm32f2xx.c ****   SetSysClock();
 107              		.loc 1 229 0
 108 007e 00F0C3F8 		bl	SetSysClock
 230:../system/system_stm32f2xx.c **** 
 231:../system/system_stm32f2xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 232:../system/system_stm32f2xx.c **** #ifdef VECT_TAB_SRAM
 233:../system/system_stm32f2xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 234:../system/system_stm32f2xx.c **** #else
 235:../system/system_stm32f2xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 109              		.loc 1 235 0
 110 0082 4FF46D43 		mov	r3, #60672
 111 0086 CEF20003 		movt	r3, 57344
 112 008a 4FF00062 		mov	r2, #134217728
 113 008e 9A60     		str	r2, [r3, #8]
 236:../system/system_stm32f2xx.c **** #endif
 237:../system/system_stm32f2xx.c **** }
 114              		.loc 1 237 0
 115 0090 80BD     		pop	{r7, pc}
 116              		.cfi_endproc
 117              	.LFE29:
 119 0092 00BF     		.align	2
 120              		.global	SystemCoreClockUpdate
 121              		.thumb
 122              		.thumb_func
 124              	SystemCoreClockUpdate:
 125              	.LFB30:
 238:../system/system_stm32f2xx.c **** 
 239:../system/system_stm32f2xx.c **** /**
 240:../system/system_stm32f2xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 241:../system/system_stm32f2xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 242:../system/system_stm32f2xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 243:../system/system_stm32f2xx.c ****   *         other parameters.
 244:../system/system_stm32f2xx.c ****   *           
 245:../system/system_stm32f2xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 246:../system/system_stm32f2xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 247:../system/system_stm32f2xx.c ****   *         based on this variable will be incorrect.         
 248:../system/system_stm32f2xx.c ****   *     
 249:../system/system_stm32f2xx.c ****   * @note   - The system frequency computed by this function is not the real 
 250:../system/system_stm32f2xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 251:../system/system_stm32f2xx.c ****   *           constant and the selected clock source:
 252:../system/system_stm32f2xx.c ****   *             
 253:../system/system_stm32f2xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 254:../system/system_stm32f2xx.c ****   *                                              
 255:../system/system_stm32f2xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 256:../system/system_stm32f2xx.c ****   *                          
 257:../system/system_stm32f2xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 258:../system/system_stm32f2xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 259:../system/system_stm32f2xx.c ****   *         
 260:../system/system_stm32f2xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f2xx.h file (default value
 261:../system/system_stm32f2xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 262:../system/system_stm32f2xx.c ****   *             in voltage and temperature.   
 263:../system/system_stm32f2xx.c ****   *    
 264:../system/system_stm32f2xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f2xx.h file (default value
 265:../system/system_stm32f2xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 266:../system/system_stm32f2xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 267:../system/system_stm32f2xx.c ****   *              have wrong result.
 268:../system/system_stm32f2xx.c ****   *                
 269:../system/system_stm32f2xx.c ****   *         - The result of this function could be not correct when using fractional
 270:../system/system_stm32f2xx.c ****   *           value for HSE crystal.
 271:../system/system_stm32f2xx.c ****   *     
 272:../system/system_stm32f2xx.c ****   * @param  None
 273:../system/system_stm32f2xx.c ****   * @retval None
 274:../system/system_stm32f2xx.c ****   */
 275:../system/system_stm32f2xx.c **** void SystemCoreClockUpdate(void)
 276:../system/system_stm32f2xx.c **** {
 126              		.loc 1 276 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 24
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0094 80B4     		push	{r7}
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0096 87B0     		sub	sp, sp, #28
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 32
 138 0098 00AF     		add	r7, sp, #0
 139              	.LCFI4:
 140              		.cfi_def_cfa_register 7
 277:../system/system_stm32f2xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 141              		.loc 1 277 0
 142 009a 4FF00003 		mov	r3, #0
 143 009e 3B61     		str	r3, [r7, #16]
 144 00a0 4FF00003 		mov	r3, #0
 145 00a4 7B61     		str	r3, [r7, #20]
 146 00a6 4FF00203 		mov	r3, #2
 147 00aa FB60     		str	r3, [r7, #12]
 148 00ac 4FF00003 		mov	r3, #0
 149 00b0 BB60     		str	r3, [r7, #8]
 150 00b2 4FF00203 		mov	r3, #2
 151 00b6 7B60     		str	r3, [r7, #4]
 278:../system/system_stm32f2xx.c ****   
 279:../system/system_stm32f2xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 280:../system/system_stm32f2xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 152              		.loc 1 280 0
 153 00b8 4FF46053 		mov	r3, #14336
 154 00bc C4F20203 		movt	r3, 16386
 155 00c0 9B68     		ldr	r3, [r3, #8]
 156 00c2 03F00C03 		and	r3, r3, #12
 157 00c6 3B61     		str	r3, [r7, #16]
 281:../system/system_stm32f2xx.c **** 
 282:../system/system_stm32f2xx.c ****   switch (tmp)
 158              		.loc 1 282 0
 159 00c8 3B69     		ldr	r3, [r7, #16]
 160 00ca 042B     		cmp	r3, #4
 161 00cc 0DD0     		beq	.L5
 162 00ce 082B     		cmp	r3, #8
 163 00d0 15D0     		beq	.L6
 164 00d2 002B     		cmp	r3, #0
 165 00d4 6BD1     		bne	.L10
 166              	.L4:
 283:../system/system_stm32f2xx.c ****   {
 284:../system/system_stm32f2xx.c ****     case 0x00:  /* HSI used as system clock source */
 285:../system/system_stm32f2xx.c ****       SystemCoreClock = HSI_VALUE;
 167              		.loc 1 285 0
 168 00d6 40F20003 		movw	r3, #:lower16:SystemCoreClock
 169 00da C0F20003 		movt	r3, #:upper16:SystemCoreClock
 170 00de 4FF41052 		mov	r2, #9216
 171 00e2 C0F2F402 		movt	r2, 244
 172 00e6 1A60     		str	r2, [r3, #0]
 286:../system/system_stm32f2xx.c ****       break;
 173              		.loc 1 286 0
 174 00e8 6BE0     		b	.L7
 175              	.L5:
 287:../system/system_stm32f2xx.c ****     case 0x04:  /* HSE used as system clock source */
 288:../system/system_stm32f2xx.c ****       SystemCoreClock = HSE_VALUE;
 176              		.loc 1 288 0
 177 00ea 40F20003 		movw	r3, #:lower16:SystemCoreClock
 178 00ee C0F20003 		movt	r3, #:upper16:SystemCoreClock
 179 00f2 47F64002 		movw	r2, #30784
 180 00f6 C0F27D12 		movt	r2, 381
 181 00fa 1A60     		str	r2, [r3, #0]
 289:../system/system_stm32f2xx.c ****       break;
 182              		.loc 1 289 0
 183 00fc 61E0     		b	.L7
 184              	.L6:
 290:../system/system_stm32f2xx.c ****     case 0x08:  /* PLL used as system clock source */
 291:../system/system_stm32f2xx.c **** 
 292:../system/system_stm32f2xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 293:../system/system_stm32f2xx.c ****          SYSCLK = PLL_VCO / PLL_P
 294:../system/system_stm32f2xx.c ****          */    
 295:../system/system_stm32f2xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 185              		.loc 1 295 0
 186 00fe 4FF46053 		mov	r3, #14336
 187 0102 C4F20203 		movt	r3, 16386
 188 0106 5B68     		ldr	r3, [r3, #4]
 189 0108 03F48003 		and	r3, r3, #4194304
 190 010c 4FEA9353 		lsr	r3, r3, #22
 191 0110 BB60     		str	r3, [r7, #8]
 296:../system/system_stm32f2xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 192              		.loc 1 296 0
 193 0112 4FF46053 		mov	r3, #14336
 194 0116 C4F20203 		movt	r3, 16386
 195 011a 5B68     		ldr	r3, [r3, #4]
 196 011c 03F03F03 		and	r3, r3, #63
 197 0120 7B60     		str	r3, [r7, #4]
 297:../system/system_stm32f2xx.c ****       
 298:../system/system_stm32f2xx.c ****       if (pllsource != 0)
 198              		.loc 1 298 0
 199 0122 BB68     		ldr	r3, [r7, #8]
 200 0124 002B     		cmp	r3, #0
 201 0126 15D0     		beq	.L8
 299:../system/system_stm32f2xx.c ****       {
 300:../system/system_stm32f2xx.c ****         /* HSE used as PLL clock source */
 301:../system/system_stm32f2xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 202              		.loc 1 301 0
 203 0128 47F64003 		movw	r3, #30784
 204 012c C0F27D13 		movt	r3, 381
 205 0130 7A68     		ldr	r2, [r7, #4]
 206 0132 B3FBF2F2 		udiv	r2, r3, r2
 207 0136 4FF46053 		mov	r3, #14336
 208 013a C4F20203 		movt	r3, 16386
 209 013e 5B68     		ldr	r3, [r3, #4]
 210 0140 1946     		mov	r1, r3
 211 0142 47F6C073 		movw	r3, #32704
 212 0146 0B40     		ands	r3, r3, r1
 213 0148 4FEA9313 		lsr	r3, r3, #6
 214 014c 03FB02F3 		mul	r3, r3, r2
 215 0150 7B61     		str	r3, [r7, #20]
 216 0152 14E0     		b	.L9
 217              	.L8:
 302:../system/system_stm32f2xx.c ****       }
 303:../system/system_stm32f2xx.c ****       else
 304:../system/system_stm32f2xx.c ****       {
 305:../system/system_stm32f2xx.c ****         /* HSI used as PLL clock source */
 306:../system/system_stm32f2xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 218              		.loc 1 306 0
 219 0154 4FF41053 		mov	r3, #9216
 220 0158 C0F2F403 		movt	r3, 244
 221 015c 7A68     		ldr	r2, [r7, #4]
 222 015e B3FBF2F2 		udiv	r2, r3, r2
 223 0162 4FF46053 		mov	r3, #14336
 224 0166 C4F20203 		movt	r3, 16386
 225 016a 5B68     		ldr	r3, [r3, #4]
 226 016c 1946     		mov	r1, r3
 227 016e 47F6C073 		movw	r3, #32704
 228 0172 0B40     		ands	r3, r3, r1
 229 0174 4FEA9313 		lsr	r3, r3, #6
 230 0178 03FB02F3 		mul	r3, r3, r2
 231 017c 7B61     		str	r3, [r7, #20]
 232              	.L9:
 307:../system/system_stm32f2xx.c ****       }
 308:../system/system_stm32f2xx.c **** 
 309:../system/system_stm32f2xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 233              		.loc 1 309 0
 234 017e 4FF46053 		mov	r3, #14336
 235 0182 C4F20203 		movt	r3, 16386
 236 0186 5B68     		ldr	r3, [r3, #4]
 237 0188 03F44033 		and	r3, r3, #196608
 238 018c 4FEA1343 		lsr	r3, r3, #16
 239 0190 03F10103 		add	r3, r3, #1
 240 0194 4FEA4303 		lsl	r3, r3, #1
 241 0198 FB60     		str	r3, [r7, #12]
 310:../system/system_stm32f2xx.c ****       SystemCoreClock = pllvco/pllp;
 242              		.loc 1 310 0
 243 019a 7A69     		ldr	r2, [r7, #20]
 244 019c FB68     		ldr	r3, [r7, #12]
 245 019e B2FBF3F2 		udiv	r2, r2, r3
 246 01a2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 247 01a6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 248 01aa 1A60     		str	r2, [r3, #0]
 311:../system/system_stm32f2xx.c ****       break;
 249              		.loc 1 311 0
 250 01ac 09E0     		b	.L7
 251              	.L10:
 312:../system/system_stm32f2xx.c ****     default:
 313:../system/system_stm32f2xx.c ****       SystemCoreClock = HSI_VALUE;
 252              		.loc 1 313 0
 253 01ae 40F20003 		movw	r3, #:lower16:SystemCoreClock
 254 01b2 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 255 01b6 4FF41052 		mov	r2, #9216
 256 01ba C0F2F402 		movt	r2, 244
 257 01be 1A60     		str	r2, [r3, #0]
 314:../system/system_stm32f2xx.c ****       break;
 258              		.loc 1 314 0
 259 01c0 00BF     		nop
 260              	.L7:
 315:../system/system_stm32f2xx.c ****   }
 316:../system/system_stm32f2xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 317:../system/system_stm32f2xx.c ****   /* Get HCLK prescaler */
 318:../system/system_stm32f2xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 261              		.loc 1 318 0
 262 01c2 4FF46053 		mov	r3, #14336
 263 01c6 C4F20203 		movt	r3, 16386
 264 01ca 9B68     		ldr	r3, [r3, #8]
 265 01cc 03F0F003 		and	r3, r3, #240
 266 01d0 4FEA1312 		lsr	r2, r3, #4
 267 01d4 40F20003 		movw	r3, #:lower16:AHBPrescTable
 268 01d8 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 269 01dc 9B5C     		ldrb	r3, [r3, r2]
 270 01de DBB2     		uxtb	r3, r3
 271 01e0 3B61     		str	r3, [r7, #16]
 319:../system/system_stm32f2xx.c ****   /* HCLK frequency */
 320:../system/system_stm32f2xx.c ****   SystemCoreClock >>= tmp;
 272              		.loc 1 320 0
 273 01e2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 274 01e6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 275 01ea 1A68     		ldr	r2, [r3, #0]
 276 01ec 3B69     		ldr	r3, [r7, #16]
 277 01ee 22FA03F2 		lsr	r2, r2, r3
 278 01f2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 279 01f6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 280 01fa 1A60     		str	r2, [r3, #0]
 321:../system/system_stm32f2xx.c **** }
 281              		.loc 1 321 0
 282 01fc 07F11C07 		add	r7, r7, #28
 283 0200 BD46     		mov	sp, r7
 284 0202 80BC     		pop	{r7}
 285 0204 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE30:
 289 0206 00BF     		.align	2
 290              		.thumb
 291              		.thumb_func
 293              	SetSysClock:
 294              	.LFB31:
 322:../system/system_stm32f2xx.c **** 
 323:../system/system_stm32f2xx.c **** /**
 324:../system/system_stm32f2xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 325:../system/system_stm32f2xx.c ****   *         AHB/APBx prescalers and Flash settings
 326:../system/system_stm32f2xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 327:../system/system_stm32f2xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 328:../system/system_stm32f2xx.c ****   * @param  None
 329:../system/system_stm32f2xx.c ****   * @retval None
 330:../system/system_stm32f2xx.c ****   */
 331:../system/system_stm32f2xx.c **** static void SetSysClock(void)
 332:../system/system_stm32f2xx.c **** {
 295              		.loc 1 332 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300 0208 80B4     		push	{r7}
 301              	.LCFI5:
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 7, -4
 304 020a 83B0     		sub	sp, sp, #12
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 16
 307 020c 00AF     		add	r7, sp, #0
 308              	.LCFI7:
 309              		.cfi_def_cfa_register 7
 333:../system/system_stm32f2xx.c **** /******************************************************************************/
 334:../system/system_stm32f2xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 335:../system/system_stm32f2xx.c **** /******************************************************************************/
 336:../system/system_stm32f2xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 310              		.loc 1 336 0
 311 020e 4FF00003 		mov	r3, #0
 312 0212 7B60     		str	r3, [r7, #4]
 313 0214 4FF00003 		mov	r3, #0
 314 0218 3B60     		str	r3, [r7, #0]
 337:../system/system_stm32f2xx.c ****   
 338:../system/system_stm32f2xx.c ****   /* Enable HSE */
 339:../system/system_stm32f2xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 315              		.loc 1 339 0
 316 021a 4FF46053 		mov	r3, #14336
 317 021e C4F20203 		movt	r3, 16386
 318 0222 4FF46052 		mov	r2, #14336
 319 0226 C4F20202 		movt	r2, 16386
 320 022a 1268     		ldr	r2, [r2, #0]
 321 022c 42F48032 		orr	r2, r2, #65536
 322 0230 1A60     		str	r2, [r3, #0]
 323              	.L13:
 340:../system/system_stm32f2xx.c ****  
 341:../system/system_stm32f2xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 342:../system/system_stm32f2xx.c ****   do
 343:../system/system_stm32f2xx.c ****   {
 344:../system/system_stm32f2xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 324              		.loc 1 344 0 discriminator 1
 325 0232 4FF46053 		mov	r3, #14336
 326 0236 C4F20203 		movt	r3, 16386
 327 023a 1B68     		ldr	r3, [r3, #0]
 328 023c 03F40033 		and	r3, r3, #131072
 329 0240 3B60     		str	r3, [r7, #0]
 345:../system/system_stm32f2xx.c ****     StartUpCounter++;
 330              		.loc 1 345 0 discriminator 1
 331 0242 7B68     		ldr	r3, [r7, #4]
 332 0244 03F10103 		add	r3, r3, #1
 333 0248 7B60     		str	r3, [r7, #4]
 346:../system/system_stm32f2xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 334              		.loc 1 346 0 discriminator 1
 335 024a 3B68     		ldr	r3, [r7, #0]
 336 024c 002B     		cmp	r3, #0
 337 024e 03D1     		bne	.L12
 338 0250 7B68     		ldr	r3, [r7, #4]
 339 0252 B3F5A06F 		cmp	r3, #1280
 340 0256 ECD1     		bne	.L13
 341              	.L12:
 347:../system/system_stm32f2xx.c **** 
 348:../system/system_stm32f2xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 342              		.loc 1 348 0
 343 0258 4FF46053 		mov	r3, #14336
 344 025c C4F20203 		movt	r3, 16386
 345 0260 1B68     		ldr	r3, [r3, #0]
 346 0262 03F40033 		and	r3, r3, #131072
 347 0266 002B     		cmp	r3, #0
 348 0268 03D0     		beq	.L14
 349:../system/system_stm32f2xx.c ****   {
 350:../system/system_stm32f2xx.c ****     HSEStatus = (uint32_t)0x01;
 349              		.loc 1 350 0
 350 026a 4FF00103 		mov	r3, #1
 351 026e 3B60     		str	r3, [r7, #0]
 352 0270 02E0     		b	.L15
 353              	.L14:
 351:../system/system_stm32f2xx.c ****   }
 352:../system/system_stm32f2xx.c ****   else
 353:../system/system_stm32f2xx.c ****   {
 354:../system/system_stm32f2xx.c ****     HSEStatus = (uint32_t)0x00;
 354              		.loc 1 354 0
 355 0272 4FF00003 		mov	r3, #0
 356 0276 3B60     		str	r3, [r7, #0]
 357              	.L15:
 355:../system/system_stm32f2xx.c ****   }
 356:../system/system_stm32f2xx.c **** 
 357:../system/system_stm32f2xx.c ****   if (HSEStatus == (uint32_t)0x01)
 358              		.loc 1 357 0
 359 0278 3B68     		ldr	r3, [r7, #0]
 360 027a 012B     		cmp	r3, #1
 361 027c 69D1     		bne	.L11
 358:../system/system_stm32f2xx.c ****   {
 359:../system/system_stm32f2xx.c ****     /* HCLK = SYSCLK / 1*/
 360:../system/system_stm32f2xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 362              		.loc 1 360 0
 363 027e 4FF46053 		mov	r3, #14336
 364 0282 C4F20203 		movt	r3, 16386
 365 0286 4FF46052 		mov	r2, #14336
 366 028a C4F20202 		movt	r2, 16386
 367 028e 9268     		ldr	r2, [r2, #8]
 368 0290 9A60     		str	r2, [r3, #8]
 361:../system/system_stm32f2xx.c ****       
 362:../system/system_stm32f2xx.c ****     /* PCLK2 = HCLK / 2*/
 363:../system/system_stm32f2xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 369              		.loc 1 363 0
 370 0292 4FF46053 		mov	r3, #14336
 371 0296 C4F20203 		movt	r3, 16386
 372 029a 4FF46052 		mov	r2, #14336
 373 029e C4F20202 		movt	r2, 16386
 374 02a2 9268     		ldr	r2, [r2, #8]
 375 02a4 42F40042 		orr	r2, r2, #32768
 376 02a8 9A60     		str	r2, [r3, #8]
 364:../system/system_stm32f2xx.c ****     
 365:../system/system_stm32f2xx.c ****     /* PCLK1 = HCLK / 4*/
 366:../system/system_stm32f2xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 377              		.loc 1 366 0
 378 02aa 4FF46053 		mov	r3, #14336
 379 02ae C4F20203 		movt	r3, 16386
 380 02b2 4FF46052 		mov	r2, #14336
 381 02b6 C4F20202 		movt	r2, 16386
 382 02ba 9268     		ldr	r2, [r2, #8]
 383 02bc 42F4A052 		orr	r2, r2, #5120
 384 02c0 9A60     		str	r2, [r3, #8]
 367:../system/system_stm32f2xx.c **** 
 368:../system/system_stm32f2xx.c ****     /* Configure the main PLL */
 369:../system/system_stm32f2xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 385              		.loc 1 369 0
 386 02c2 4FF46053 		mov	r3, #14336
 387 02c6 C4F20203 		movt	r3, 16386
 388 02ca 43F61942 		movw	r2, #15385
 389 02ce C0F24052 		movt	r2, 1344
 390 02d2 5A60     		str	r2, [r3, #4]
 370:../system/system_stm32f2xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 371:../system/system_stm32f2xx.c **** 
 372:../system/system_stm32f2xx.c ****     /* Enable the main PLL */
 373:../system/system_stm32f2xx.c ****     RCC->CR |= RCC_CR_PLLON;
 391              		.loc 1 373 0
 392 02d4 4FF46053 		mov	r3, #14336
 393 02d8 C4F20203 		movt	r3, 16386
 394 02dc 4FF46052 		mov	r2, #14336
 395 02e0 C4F20202 		movt	r2, 16386
 396 02e4 1268     		ldr	r2, [r2, #0]
 397 02e6 42F08072 		orr	r2, r2, #16777216
 398 02ea 1A60     		str	r2, [r3, #0]
 374:../system/system_stm32f2xx.c **** 
 375:../system/system_stm32f2xx.c ****     /* Wait till the main PLL is ready */
 376:../system/system_stm32f2xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 399              		.loc 1 376 0
 400 02ec 00BF     		nop
 401              	.L17:
 402              		.loc 1 376 0 is_stmt 0 discriminator 1
 403 02ee 4FF46053 		mov	r3, #14336
 404 02f2 C4F20203 		movt	r3, 16386
 405 02f6 1B68     		ldr	r3, [r3, #0]
 406 02f8 03F00073 		and	r3, r3, #33554432
 407 02fc 002B     		cmp	r3, #0
 408 02fe F6D0     		beq	.L17
 377:../system/system_stm32f2xx.c ****     {
 378:../system/system_stm32f2xx.c ****     }
 379:../system/system_stm32f2xx.c ****    
 380:../system/system_stm32f2xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 381:../system/system_stm32f2xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN | FLASH_ACR_DCEN | FLASH_ACR_LATENCY_3WS;
 409              		.loc 1 381 0 is_stmt 1
 410 0300 4FF47053 		mov	r3, #15360
 411 0304 C4F20203 		movt	r3, 16386
 412 0308 40F20372 		movw	r2, #1795
 413 030c 1A60     		str	r2, [r3, #0]
 382:../system/system_stm32f2xx.c **** 
 383:../system/system_stm32f2xx.c ****     /* Select the main PLL as system clock source */
 384:../system/system_stm32f2xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 414              		.loc 1 384 0
 415 030e 4FF46053 		mov	r3, #14336
 416 0312 C4F20203 		movt	r3, 16386
 417 0316 4FF46052 		mov	r2, #14336
 418 031a C4F20202 		movt	r2, 16386
 419 031e 9268     		ldr	r2, [r2, #8]
 420 0320 22F00302 		bic	r2, r2, #3
 421 0324 9A60     		str	r2, [r3, #8]
 385:../system/system_stm32f2xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 422              		.loc 1 385 0
 423 0326 4FF46053 		mov	r3, #14336
 424 032a C4F20203 		movt	r3, 16386
 425 032e 4FF46052 		mov	r2, #14336
 426 0332 C4F20202 		movt	r2, 16386
 427 0336 9268     		ldr	r2, [r2, #8]
 428 0338 42F00202 		orr	r2, r2, #2
 429 033c 9A60     		str	r2, [r3, #8]
 386:../system/system_stm32f2xx.c **** 
 387:../system/system_stm32f2xx.c ****     /* Wait till the main PLL is used as system clock source */
 388:../system/system_stm32f2xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 430              		.loc 1 388 0
 431 033e 00BF     		nop
 432              	.L18:
 433              		.loc 1 388 0 is_stmt 0 discriminator 1
 434 0340 4FF46053 		mov	r3, #14336
 435 0344 C4F20203 		movt	r3, 16386
 436 0348 9B68     		ldr	r3, [r3, #8]
 437 034a 03F00C03 		and	r3, r3, #12
 438 034e 082B     		cmp	r3, #8
 439 0350 F6D1     		bne	.L18
 440              	.L11:
 389:../system/system_stm32f2xx.c ****     {
 390:../system/system_stm32f2xx.c ****     }
 391:../system/system_stm32f2xx.c ****   }
 392:../system/system_stm32f2xx.c ****   else
 393:../system/system_stm32f2xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 394:../system/system_stm32f2xx.c ****          configuration. User can add here some code to deal with this error */
 395:../system/system_stm32f2xx.c ****   }
 396:../system/system_stm32f2xx.c **** 
 397:../system/system_stm32f2xx.c **** }
 441              		.loc 1 397 0 is_stmt 1
 442 0352 07F10C07 		add	r7, r7, #12
 443 0356 BD46     		mov	sp, r7
 444 0358 80BC     		pop	{r7}
 445 035a 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE31:
 449              	.Letext0:
 450              		.file 2 "c:/cad/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 451              		.file 3 "../system/core_cm3.h"
 452              		.file 4 "../system/stm32f2xx.h"
 453              		.file 5 "../system/system_stm32f2xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f2xx.c
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:22     .data:00000000 SystemCoreClock
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:19     .data:00000000 $d
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:28     .data:00000004 AHBPrescTable
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:46     .text:00000000 $t
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:51     .text:00000000 SystemInit
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:293    .text:00000208 SetSysClock
C:\Users\IARISC~1\AppData\Local\Temp\ccLKRFKs.s:124    .text:00000094 SystemCoreClockUpdate
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
