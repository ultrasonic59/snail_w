   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f2xx_sdio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	2
  18              		.global	SDIO_DeInit
  19              		.thumb
  20              		.thumb_func
  22              	SDIO_DeInit:
  23              	.LFB29:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c"
   1:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @file    stm32f2xx_sdio.c
   4:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          peripheral:
  10:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - Initialization and Configuration
  11:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - CE-ATA mode management
  15:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - DMA transfers management
  16:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *           - Interrupts and flags management
  17:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  18:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *  @verbatim
  19:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  20:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  21:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          ===================================================================
  22:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                                 How to use this driver
  23:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          ===================================================================
  24:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  33:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  35:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  42:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  51:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             function.
  54:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  55:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             function.
  57:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              
  58:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  60:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  63:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          9. When using the DMA mode 
  64:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  67:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  69:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Command Argument
  76:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Command Index
  77:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Command Response type
  78:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Command Wait
  79:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  81:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  86:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
  90:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              Read Operations
  91:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              ---------------
  92:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 be received.
  95:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data TimeOut
  97:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Length
  98:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Block size
  99:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Transfer mode
 101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                                   
 103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                  
 108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              Write Operations
 111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              ---------------
 112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 be received.
 115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data TimeOut
 117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Length
 118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Block size
 119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - Data Transfer mode
 121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                   
 126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                  
 128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *  @endverbatim
 132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   ******************************************************************************
 135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @attention
 136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *
 144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   ******************************************************************************
 146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #include "stm32f2xx_sdio.h"
 150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #include "stm32f2xx_rcc.h"
 151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
 153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO 
 157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief SDIO driver modules
 158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */ 
 160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- CLKCR Register ---*/
 168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- CMD Register ---*/
 174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of NIEN bit */
 184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- DCTRL Register ---*/
 192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- CLKCR Register ---*/
 215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* CLKCR register clear mask */
 216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- DCTRL Register ---*/
 223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* --- CMD Register ---*/
 227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* CMD Register clear mask */
 228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* SDIO RESP Registers Address */
 231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****                  Initialization and Configuration functions
 248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_DeInit(void)
 260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
  25              		.loc 1 260 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 14, -4
  33              		.cfi_offset 7, -8
  34 0002 00AF     		add	r7, sp, #0
  35              	.LCFI1:
  36              		.cfi_def_cfa_register 7
 261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  37              		.loc 1 261 0
  38 0004 4FF40060 		mov	r0, #2048
  39 0008 4FF00101 		mov	r1, #1
  40 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  41              		.loc 1 262 0
  42 0010 4FF40060 		mov	r0, #2048
  43 0014 4FF00001 		mov	r1, #0
  44 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
  45              		.loc 1 263 0
  46 001c 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE29:
  50 001e 00BF     		.align	2
  51              		.global	SDIO_Init
  52              		.thumb
  53              		.thumb_func
  55              	SDIO_Init:
  56              	.LFB30:
 264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
  57              		.loc 1 273 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 16
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0020 80B4     		push	{r7}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0022 85B0     		sub	sp, sp, #20
  67              	.LCFI3:
  68              		.cfi_def_cfa_offset 24
  69 0024 00AF     		add	r7, sp, #0
  70              	.LCFI4:
  71              		.cfi_def_cfa_register 7
  72 0026 7860     		str	r0, [r7, #4]
 274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   uint32_t tmpreg = 0;
  73              		.loc 1 274 0
  74 0028 4FF00003 		mov	r3, #0
  75 002c FB60     		str	r3, [r7, #12]
 275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     
 276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****    
 283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  76              		.loc 1 285 0
  77 002e 4FF43053 		mov	r3, #11264
  78 0032 C4F20103 		movt	r3, 16385
  79 0036 5B68     		ldr	r3, [r3, #4]
  80 0038 FB60     		str	r3, [r7, #12]
 286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  81              		.loc 1 288 0
  82 003a FB68     		ldr	r3, [r7, #12]
  83 003c 23F4FC43 		bic	r3, r3, #32256
  84 0040 23F0FF03 		bic	r3, r3, #255
  85 0044 FB60     		str	r3, [r7, #12]
 289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  86              		.loc 1 296 0
  87 0046 7B68     		ldr	r3, [r7, #4]
  88 0048 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  89 004a 1A46     		mov	r2, r3
  90 004c 7B68     		ldr	r3, [r7, #4]
  91 004e 9B68     		ldr	r3, [r3, #8]
  92 0050 1A43     		orrs	r2, r2, r3
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  93              		.loc 1 297 0
  94 0052 7B68     		ldr	r3, [r7, #4]
  95 0054 5B68     		ldr	r3, [r3, #4]
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  96              		.loc 1 296 0
  97 0056 1A43     		orrs	r2, r2, r3
  98              		.loc 1 297 0
  99 0058 7B68     		ldr	r3, [r7, #4]
 100 005a DB68     		ldr	r3, [r3, #12]
 101 005c 1A43     		orrs	r2, r2, r3
 298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 102              		.loc 1 298 0
 103 005e 7B68     		ldr	r3, [r7, #4]
 104 0060 1B68     		ldr	r3, [r3, #0]
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 105              		.loc 1 297 0
 106 0062 1A43     		orrs	r2, r2, r3
 107              		.loc 1 298 0
 108 0064 7B68     		ldr	r3, [r7, #4]
 109 0066 1B69     		ldr	r3, [r3, #16]
 110 0068 1343     		orrs	r3, r3, r2
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 111              		.loc 1 296 0
 112 006a FA68     		ldr	r2, [r7, #12]
 113 006c 1343     		orrs	r3, r3, r2
 114 006e FB60     		str	r3, [r7, #12]
 299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 115              		.loc 1 301 0
 116 0070 4FF43053 		mov	r3, #11264
 117 0074 C4F20103 		movt	r3, 16385
 118 0078 FA68     		ldr	r2, [r7, #12]
 119 007a 5A60     		str	r2, [r3, #4]
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 120              		.loc 1 302 0
 121 007c 07F11407 		add	r7, r7, #20
 122 0080 BD46     		mov	sp, r7
 123 0082 80BC     		pop	{r7}
 124 0084 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE30:
 128 0086 00BF     		.align	2
 129              		.global	SDIO_StructInit
 130              		.thumb
 131              		.thumb_func
 133              	SDIO_StructInit:
 134              	.LFB31:
 303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         will be initialized.
 308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 135              		.loc 1 311 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140 0088 80B4     		push	{r7}
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 008a 83B0     		sub	sp, sp, #12
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 16
 147 008c 00AF     		add	r7, sp, #0
 148              	.LCFI7:
 149              		.cfi_def_cfa_register 7
 150 008e 7860     		str	r0, [r7, #4]
 312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 151              		.loc 1 313 0
 152 0090 7B68     		ldr	r3, [r7, #4]
 153 0092 4FF00002 		mov	r2, #0
 154 0096 1A75     		strb	r2, [r3, #20]
 314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 155              		.loc 1 314 0
 156 0098 7B68     		ldr	r3, [r7, #4]
 157 009a 4FF00002 		mov	r2, #0
 158 009e 1A60     		str	r2, [r3, #0]
 315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 159              		.loc 1 315 0
 160 00a0 7B68     		ldr	r3, [r7, #4]
 161 00a2 4FF00002 		mov	r2, #0
 162 00a6 5A60     		str	r2, [r3, #4]
 316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 163              		.loc 1 316 0
 164 00a8 7B68     		ldr	r3, [r7, #4]
 165 00aa 4FF00002 		mov	r2, #0
 166 00ae 9A60     		str	r2, [r3, #8]
 317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 167              		.loc 1 317 0
 168 00b0 7B68     		ldr	r3, [r7, #4]
 169 00b2 4FF00002 		mov	r2, #0
 170 00b6 DA60     		str	r2, [r3, #12]
 318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 171              		.loc 1 318 0
 172 00b8 7B68     		ldr	r3, [r7, #4]
 173 00ba 4FF00002 		mov	r2, #0
 174 00be 1A61     		str	r2, [r3, #16]
 319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 175              		.loc 1 319 0
 176 00c0 07F10C07 		add	r7, r7, #12
 177 00c4 BD46     		mov	sp, r7
 178 00c6 80BC     		pop	{r7}
 179 00c8 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE31:
 183 00ca 00BF     		.align	2
 184              		.global	SDIO_ClockCmd
 185              		.thumb
 186              		.thumb_func
 188              	SDIO_ClockCmd:
 189              	.LFB32:
 320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 190              		.loc 1 328 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195 00cc 80B4     		push	{r7}
 196              	.LCFI8:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 00ce 83B0     		sub	sp, sp, #12
 200              	.LCFI9:
 201              		.cfi_def_cfa_offset 16
 202 00d0 00AF     		add	r7, sp, #0
 203              	.LCFI10:
 204              		.cfi_def_cfa_register 7
 205 00d2 0346     		mov	r3, r0
 206 00d4 FB71     		strb	r3, [r7, #7]
 329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 207              		.loc 1 332 0
 208 00d6 48F2A003 		movw	r3, #32928
 209 00da C4F22523 		movt	r3, 16933
 210 00de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 211 00e0 1A60     		str	r2, [r3, #0]
 333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 212              		.loc 1 333 0
 213 00e2 07F10C07 		add	r7, r7, #12
 214 00e6 BD46     		mov	sp, r7
 215 00e8 80BC     		pop	{r7}
 216 00ea 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE32:
 220              		.align	2
 221              		.global	SDIO_SetPowerState
 222              		.thumb
 223              		.thumb_func
 225              	SDIO_SetPowerState:
 226              	.LFB33:
 334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one of the following values:
 339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 227              		.loc 1 344 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232 00ec 80B4     		push	{r7}
 233              	.LCFI11:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 00ee 83B0     		sub	sp, sp, #12
 237              	.LCFI12:
 238              		.cfi_def_cfa_offset 16
 239 00f0 00AF     		add	r7, sp, #0
 240              	.LCFI13:
 241              		.cfi_def_cfa_register 7
 242 00f2 7860     		str	r0, [r7, #4]
 345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->POWER &= PWR_PWRCTRL_MASK;
 243              		.loc 1 348 0
 244 00f4 4FF43053 		mov	r3, #11264
 245 00f8 C4F20103 		movt	r3, 16385
 246 00fc 4FF43052 		mov	r2, #11264
 247 0100 C4F20102 		movt	r2, 16385
 248 0104 1268     		ldr	r2, [r2, #0]
 249 0106 22F00302 		bic	r2, r2, #3
 250 010a 1A60     		str	r2, [r3, #0]
 349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->POWER |= SDIO_PowerState;
 251              		.loc 1 349 0
 252 010c 4FF43053 		mov	r3, #11264
 253 0110 C4F20103 		movt	r3, 16385
 254 0114 4FF43052 		mov	r2, #11264
 255 0118 C4F20102 		movt	r2, 16385
 256 011c 1268     		ldr	r2, [r2, #0]
 257 011e 1146     		mov	r1, r2
 258 0120 7A68     		ldr	r2, [r7, #4]
 259 0122 0A43     		orrs	r2, r2, r1
 260 0124 1A60     		str	r2, [r3, #0]
 350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 261              		.loc 1 350 0
 262 0126 07F10C07 		add	r7, r7, #12
 263 012a BD46     		mov	sp, r7
 264 012c 80BC     		pop	{r7}
 265 012e 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE33:
 269              		.align	2
 270              		.global	SDIO_GetPowerState
 271              		.thumb
 272              		.thumb_func
 274              	SDIO_GetPowerState:
 275              	.LFB34:
 351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Gets the power status of the controller.
 354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         following values:
 357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            - 0x00: Power OFF
 358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            - 0x02: Power UP
 359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            - 0x03: Power ON 
 360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 276              		.loc 1 362 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281 0130 80B4     		push	{r7}
 282              	.LCFI14:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 7, -4
 285 0132 00AF     		add	r7, sp, #0
 286              	.LCFI15:
 287              		.cfi_def_cfa_register 7
 363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 288              		.loc 1 363 0
 289 0134 4FF43053 		mov	r3, #11264
 290 0138 C4F20103 		movt	r3, 16385
 291 013c 1B68     		ldr	r3, [r3, #0]
 292 013e 03F00303 		and	r3, r3, #3
 364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 293              		.loc 1 364 0
 294 0142 1846     		mov	r0, r3
 295 0144 BD46     		mov	sp, r7
 296 0146 80BC     		pop	{r7}
 297 0148 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE34:
 301 014a 00BF     		.align	2
 302              		.global	SDIO_SendCommand
 303              		.thumb
 304              		.thumb_func
 306              	SDIO_SendCommand:
 307              	.LFB35:
 365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****               Command path state machine (CPSM) management functions
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   state machine (CPSM).
 380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         command.
 391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 308              		.loc 1 394 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 16
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 014c 80B4     		push	{r7}
 314              	.LCFI16:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 014e 85B0     		sub	sp, sp, #20
 318              	.LCFI17:
 319              		.cfi_def_cfa_offset 24
 320 0150 00AF     		add	r7, sp, #0
 321              	.LCFI18:
 322              		.cfi_def_cfa_register 7
 323 0152 7860     		str	r0, [r7, #4]
 395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   uint32_t tmpreg = 0;
 324              		.loc 1 395 0
 325 0154 4FF00003 		mov	r3, #0
 326 0158 FB60     		str	r3, [r7, #12]
 396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set the SDIO Argument value */
 405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 327              		.loc 1 405 0
 328 015a 4FF43053 		mov	r3, #11264
 329 015e C4F20103 		movt	r3, 16385
 330 0162 7A68     		ldr	r2, [r7, #4]
 331 0164 1268     		ldr	r2, [r2, #0]
 332 0166 9A60     		str	r2, [r3, #8]
 406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Get the SDIO CMD value */
 409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg = SDIO->CMD;
 333              		.loc 1 409 0
 334 0168 4FF43053 		mov	r3, #11264
 335 016c C4F20103 		movt	r3, 16385
 336 0170 DB68     		ldr	r3, [r3, #12]
 337 0172 FB60     		str	r3, [r7, #12]
 410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 338              		.loc 1 411 0
 339 0174 FB68     		ldr	r3, [r7, #12]
 340 0176 23F4FE63 		bic	r3, r3, #2032
 341 017a 23F00F03 		bic	r3, r3, #15
 342 017e FB60     		str	r3, [r7, #12]
 412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 343              		.loc 1 416 0
 344 0180 7B68     		ldr	r3, [r7, #4]
 345 0182 5A68     		ldr	r2, [r3, #4]
 346 0184 7B68     		ldr	r3, [r7, #4]
 347 0186 9B68     		ldr	r3, [r3, #8]
 348 0188 1A43     		orrs	r2, r2, r3
 417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 349              		.loc 1 417 0
 350 018a 7B68     		ldr	r3, [r7, #4]
 351 018c DB68     		ldr	r3, [r3, #12]
 352 018e 1A43     		orrs	r2, r2, r3
 353 0190 7B68     		ldr	r3, [r7, #4]
 354 0192 1B69     		ldr	r3, [r3, #16]
 355 0194 1343     		orrs	r3, r3, r2
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 356              		.loc 1 416 0
 357 0196 FA68     		ldr	r2, [r7, #12]
 358 0198 1343     		orrs	r3, r3, r2
 359 019a FB60     		str	r3, [r7, #12]
 418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Write to SDIO CMD */
 420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->CMD = tmpreg;
 360              		.loc 1 420 0
 361 019c 4FF43053 		mov	r3, #11264
 362 01a0 C4F20103 		movt	r3, 16385
 363 01a4 FA68     		ldr	r2, [r7, #12]
 364 01a6 DA60     		str	r2, [r3, #12]
 421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 365              		.loc 1 421 0
 366 01a8 07F11407 		add	r7, r7, #20
 367 01ac BD46     		mov	sp, r7
 368 01ae 80BC     		pop	{r7}
 369 01b0 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE35:
 373 01b2 00BF     		.align	2
 374              		.global	SDIO_CmdStructInit
 375              		.thumb
 376              		.thumb_func
 378              	SDIO_CmdStructInit:
 379              	.LFB36:
 422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         structure which will be initialized.
 427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 380              		.loc 1 430 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 01b4 80B4     		push	{r7}
 386              	.LCFI19:
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 01b6 83B0     		sub	sp, sp, #12
 390              	.LCFI20:
 391              		.cfi_def_cfa_offset 16
 392 01b8 00AF     		add	r7, sp, #0
 393              	.LCFI21:
 394              		.cfi_def_cfa_register 7
 395 01ba 7860     		str	r0, [r7, #4]
 431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 396              		.loc 1 432 0
 397 01bc 7B68     		ldr	r3, [r7, #4]
 398 01be 4FF00002 		mov	r2, #0
 399 01c2 1A60     		str	r2, [r3, #0]
 433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 400              		.loc 1 433 0
 401 01c4 7B68     		ldr	r3, [r7, #4]
 402 01c6 4FF00002 		mov	r2, #0
 403 01ca 5A60     		str	r2, [r3, #4]
 434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 404              		.loc 1 434 0
 405 01cc 7B68     		ldr	r3, [r7, #4]
 406 01ce 4FF00002 		mov	r2, #0
 407 01d2 9A60     		str	r2, [r3, #8]
 435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 408              		.loc 1 435 0
 409 01d4 7B68     		ldr	r3, [r7, #4]
 410 01d6 4FF00002 		mov	r2, #0
 411 01da DA60     		str	r2, [r3, #12]
 436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 412              		.loc 1 436 0
 413 01dc 7B68     		ldr	r3, [r7, #4]
 414 01de 4FF00002 		mov	r2, #0
 415 01e2 1A61     		str	r2, [r3, #16]
 437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 416              		.loc 1 437 0
 417 01e4 07F10C07 		add	r7, r7, #12
 418 01e8 BD46     		mov	sp, r7
 419 01ea 80BC     		pop	{r7}
 420 01ec 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE36:
 424 01ee 00BF     		.align	2
 425              		.global	SDIO_GetCommandResponse
 426              		.thumb
 427              		.thumb_func
 429              	SDIO_GetCommandResponse:
 430              	.LFB37:
 438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 431              		.loc 1 445 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 01f0 80B4     		push	{r7}
 437              	.LCFI22:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 01f2 00AF     		add	r7, sp, #0
 441              	.LCFI23:
 442              		.cfi_def_cfa_register 7
 446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 443              		.loc 1 446 0
 444 01f4 4FF43053 		mov	r3, #11264
 445 01f8 C4F20103 		movt	r3, 16385
 446 01fc 1B69     		ldr	r3, [r3, #16]
 447 01fe DBB2     		uxtb	r3, r3
 447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 448              		.loc 1 447 0
 449 0200 1846     		mov	r0, r3
 450 0202 BD46     		mov	sp, r7
 451 0204 80BC     		pop	{r7}
 452 0206 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE37:
 456              		.align	2
 457              		.global	SDIO_GetResponse
 458              		.thumb
 459              		.thumb_func
 461              	SDIO_GetResponse:
 462              	.LFB38:
 448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one of the following values:
 453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval The Corresponding response register value.
 458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 463              		.loc 1 460 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 16
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0208 80B4     		push	{r7}
 469              	.LCFI24:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 020a 85B0     		sub	sp, sp, #20
 473              	.LCFI25:
 474              		.cfi_def_cfa_offset 24
 475 020c 00AF     		add	r7, sp, #0
 476              	.LCFI26:
 477              		.cfi_def_cfa_register 7
 478 020e 7860     		str	r0, [r7, #4]
 461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   __IO uint32_t tmp = 0;
 479              		.loc 1 461 0
 480 0210 4FF00003 		mov	r3, #0
 481 0214 FB60     		str	r3, [r7, #12]
 462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 482              		.loc 1 466 0
 483 0216 7A68     		ldr	r2, [r7, #4]
 484 0218 42F61443 		movw	r3, #11284
 485 021c C4F20103 		movt	r3, 16385
 486 0220 D318     		adds	r3, r2, r3
 487 0222 FB60     		str	r3, [r7, #12]
 467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 488              		.loc 1 468 0
 489 0224 FB68     		ldr	r3, [r7, #12]
 490 0226 1B68     		ldr	r3, [r3, #0]
 469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 491              		.loc 1 469 0
 492 0228 1846     		mov	r0, r3
 493 022a 07F11407 		add	r7, r7, #20
 494 022e BD46     		mov	sp, r7
 495 0230 80BC     		pop	{r7}
 496 0232 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE38:
 500              		.align	2
 501              		.global	SDIO_DataConfig
 502              		.thumb
 503              		.thumb_func
 505              	SDIO_DataConfig:
 506              	.LFB39:
 470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****               Data path state machine (DPSM) management functions
 481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   state machine (DPSM).
 485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 507              		.loc 1 498 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 16
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0234 80B4     		push	{r7}
 513              	.LCFI27:
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
 516 0236 85B0     		sub	sp, sp, #20
 517              	.LCFI28:
 518              		.cfi_def_cfa_offset 24
 519 0238 00AF     		add	r7, sp, #0
 520              	.LCFI29:
 521              		.cfi_def_cfa_register 7
 522 023a 7860     		str	r0, [r7, #4]
 499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   uint32_t tmpreg = 0;
 523              		.loc 1 499 0
 524 023c 4FF00003 		mov	r3, #0
 525 0240 FB60     		str	r3, [r7, #12]
 500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 526              		.loc 1 510 0
 527 0242 4FF43053 		mov	r3, #11264
 528 0246 C4F20103 		movt	r3, 16385
 529 024a 7A68     		ldr	r2, [r7, #4]
 530 024c 1268     		ldr	r2, [r2, #0]
 531 024e 5A62     		str	r2, [r3, #36]
 511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set the SDIO DataLength value */
 514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 532              		.loc 1 514 0
 533 0250 4FF43053 		mov	r3, #11264
 534 0254 C4F20103 		movt	r3, 16385
 535 0258 7A68     		ldr	r2, [r7, #4]
 536 025a 5268     		ldr	r2, [r2, #4]
 537 025c 9A62     		str	r2, [r3, #40]
 515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Get the SDIO DCTRL value */
 518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 538              		.loc 1 518 0
 539 025e 4FF43053 		mov	r3, #11264
 540 0262 C4F20103 		movt	r3, 16385
 541 0266 DB6A     		ldr	r3, [r3, #44]
 542 0268 FB60     		str	r3, [r7, #12]
 519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 543              		.loc 1 520 0
 544 026a FB68     		ldr	r3, [r7, #12]
 545 026c 23F0F703 		bic	r3, r3, #247
 546 0270 FB60     		str	r3, [r7, #12]
 521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 547              		.loc 1 525 0
 548 0272 7B68     		ldr	r3, [r7, #4]
 549 0274 9A68     		ldr	r2, [r3, #8]
 550 0276 7B68     		ldr	r3, [r7, #4]
 551 0278 DB68     		ldr	r3, [r3, #12]
 552 027a 1A43     		orrs	r2, r2, r3
 526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 553              		.loc 1 526 0
 554 027c 7B68     		ldr	r3, [r7, #4]
 555 027e 1B69     		ldr	r3, [r3, #16]
 556 0280 1A43     		orrs	r2, r2, r3
 557 0282 7B68     		ldr	r3, [r7, #4]
 558 0284 5B69     		ldr	r3, [r3, #20]
 559 0286 1343     		orrs	r3, r3, r2
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 560              		.loc 1 525 0
 561 0288 FA68     		ldr	r2, [r7, #12]
 562 028a 1343     		orrs	r3, r3, r2
 563 028c FB60     		str	r3, [r7, #12]
 527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Write to SDIO DCTRL */
 529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 564              		.loc 1 529 0
 565 028e 4FF43053 		mov	r3, #11264
 566 0292 C4F20103 		movt	r3, 16385
 567 0296 FA68     		ldr	r2, [r7, #12]
 568 0298 DA62     		str	r2, [r3, #44]
 530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 569              		.loc 1 530 0
 570 029a 07F11407 		add	r7, r7, #20
 571 029e BD46     		mov	sp, r7
 572 02a0 80BC     		pop	{r7}
 573 02a2 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE39:
 577              		.align	2
 578              		.global	SDIO_DataStructInit
 579              		.thumb
 580              		.thumb_func
 582              	SDIO_DataStructInit:
 583              	.LFB40:
 531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         which will be initialized.
 536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 584              		.loc 1 539 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589 02a4 80B4     		push	{r7}
 590              	.LCFI30:
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 7, -4
 593 02a6 83B0     		sub	sp, sp, #12
 594              	.LCFI31:
 595              		.cfi_def_cfa_offset 16
 596 02a8 00AF     		add	r7, sp, #0
 597              	.LCFI32:
 598              		.cfi_def_cfa_register 7
 599 02aa 7860     		str	r0, [r7, #4]
 540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 600              		.loc 1 541 0
 601 02ac 7B68     		ldr	r3, [r7, #4]
 602 02ae 4FF0FF32 		mov	r2, #-1
 603 02b2 1A60     		str	r2, [r3, #0]
 542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 604              		.loc 1 542 0
 605 02b4 7B68     		ldr	r3, [r7, #4]
 606 02b6 4FF00002 		mov	r2, #0
 607 02ba 5A60     		str	r2, [r3, #4]
 543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 608              		.loc 1 543 0
 609 02bc 7B68     		ldr	r3, [r7, #4]
 610 02be 4FF00002 		mov	r2, #0
 611 02c2 9A60     		str	r2, [r3, #8]
 544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 612              		.loc 1 544 0
 613 02c4 7B68     		ldr	r3, [r7, #4]
 614 02c6 4FF00002 		mov	r2, #0
 615 02ca DA60     		str	r2, [r3, #12]
 545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 616              		.loc 1 545 0
 617 02cc 7B68     		ldr	r3, [r7, #4]
 618 02ce 4FF00002 		mov	r2, #0
 619 02d2 1A61     		str	r2, [r3, #16]
 546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 620              		.loc 1 546 0
 621 02d4 7B68     		ldr	r3, [r7, #4]
 622 02d6 4FF00002 		mov	r2, #0
 623 02da 5A61     		str	r2, [r3, #20]
 547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 624              		.loc 1 547 0
 625 02dc 07F10C07 		add	r7, r7, #12
 626 02e0 BD46     		mov	sp, r7
 627 02e2 80BC     		pop	{r7}
 628 02e4 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE40:
 632 02e6 00BF     		.align	2
 633              		.global	SDIO_GetDataCounter
 634              		.thumb
 635              		.thumb_func
 637              	SDIO_GetDataCounter:
 638              	.LFB41:
 548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 639              		.loc 1 555 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644 02e8 80B4     		push	{r7}
 645              	.LCFI33:
 646              		.cfi_def_cfa_offset 4
 647              		.cfi_offset 7, -4
 648 02ea 00AF     		add	r7, sp, #0
 649              	.LCFI34:
 650              		.cfi_def_cfa_register 7
 556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return SDIO->DCOUNT;
 651              		.loc 1 556 0
 652 02ec 4FF43053 		mov	r3, #11264
 653 02f0 C4F20103 		movt	r3, 16385
 654 02f4 1B6B     		ldr	r3, [r3, #48]
 557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 655              		.loc 1 557 0
 656 02f6 1846     		mov	r0, r3
 657 02f8 BD46     		mov	sp, r7
 658 02fa 80BC     		pop	{r7}
 659 02fc 7047     		bx	lr
 660              		.cfi_endproc
 661              	.LFE41:
 663 02fe 00BF     		.align	2
 664              		.global	SDIO_ReadData
 665              		.thumb
 666              		.thumb_func
 668              	SDIO_ReadData:
 669              	.LFB42:
 558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval Data received
 563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint32_t SDIO_ReadData(void)
 565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 670              		.loc 1 565 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 0300 80B4     		push	{r7}
 676              	.LCFI35:
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 0302 00AF     		add	r7, sp, #0
 680              	.LCFI36:
 681              		.cfi_def_cfa_register 7
 566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return SDIO->FIFO;
 682              		.loc 1 566 0
 683 0304 4FF43053 		mov	r3, #11264
 684 0308 C4F20103 		movt	r3, 16385
 685 030c D3F88030 		ldr	r3, [r3, #128]
 567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 686              		.loc 1 567 0
 687 0310 1846     		mov	r0, r3
 688 0312 BD46     		mov	sp, r7
 689 0314 80BC     		pop	{r7}
 690 0316 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE42:
 694              		.align	2
 695              		.global	SDIO_WriteData
 696              		.thumb
 697              		.thumb_func
 699              	SDIO_WriteData:
 700              	.LFB43:
 568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 701              		.loc 1 575 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 706 0318 80B4     		push	{r7}
 707              	.LCFI37:
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 7, -4
 710 031a 83B0     		sub	sp, sp, #12
 711              	.LCFI38:
 712              		.cfi_def_cfa_offset 16
 713 031c 00AF     		add	r7, sp, #0
 714              	.LCFI39:
 715              		.cfi_def_cfa_register 7
 716 031e 7860     		str	r0, [r7, #4]
 576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->FIFO = Data;
 717              		.loc 1 576 0
 718 0320 4FF43053 		mov	r3, #11264
 719 0324 C4F20103 		movt	r3, 16385
 720 0328 7A68     		ldr	r2, [r7, #4]
 721 032a C3F88020 		str	r2, [r3, #128]
 577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 722              		.loc 1 577 0
 723 032e 07F10C07 		add	r7, r7, #12
 724 0332 BD46     		mov	sp, r7
 725 0334 80BC     		pop	{r7}
 726 0336 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE43:
 730              		.align	2
 731              		.global	SDIO_GetFIFOCount
 732              		.thumb
 733              		.thumb_func
 735              	SDIO_GetFIFOCount:
 736              	.LFB44:
 578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  None
 582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval Remaining number of words.
 583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 737              		.loc 1 585 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0338 80B4     		push	{r7}
 743              	.LCFI40:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 033a 00AF     		add	r7, sp, #0
 747              	.LCFI41:
 748              		.cfi_def_cfa_register 7
 586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return SDIO->FIFOCNT;
 749              		.loc 1 586 0
 750 033c 4FF43053 		mov	r3, #11264
 751 0340 C4F20103 		movt	r3, 16385
 752 0344 9B6C     		ldr	r3, [r3, #72]
 587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 753              		.loc 1 587 0
 754 0346 1846     		mov	r0, r3
 755 0348 BD46     		mov	sp, r7
 756 034a 80BC     		pop	{r7}
 757 034c 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE44:
 761 034e 00BF     		.align	2
 762              		.global	SDIO_StartSDIOReadWait
 763              		.thumb
 764              		.thumb_func
 766              	SDIO_StartSDIOReadWait:
 767              	.LFB45:
 588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****               SDIO IO Cards mode management functions
 599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 768              		.loc 1 614 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773 0350 80B4     		push	{r7}
 774              	.LCFI42:
 775              		.cfi_def_cfa_offset 4
 776              		.cfi_offset 7, -4
 777 0352 83B0     		sub	sp, sp, #12
 778              	.LCFI43:
 779              		.cfi_def_cfa_offset 16
 780 0354 00AF     		add	r7, sp, #0
 781              	.LCFI44:
 782              		.cfi_def_cfa_register 7
 783 0356 0346     		mov	r3, r0
 784 0358 FB71     		strb	r3, [r7, #7]
 615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 785              		.loc 1 618 0
 786 035a 48F2A053 		movw	r3, #34208
 787 035e C4F22523 		movt	r3, 16933
 788 0362 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 789 0364 1A60     		str	r2, [r3, #0]
 619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 790              		.loc 1 619 0
 791 0366 07F10C07 		add	r7, r7, #12
 792 036a BD46     		mov	sp, r7
 793 036c 80BC     		pop	{r7}
 794 036e 7047     		bx	lr
 795              		.cfi_endproc
 796              	.LFE45:
 798              		.align	2
 799              		.global	SDIO_StopSDIOReadWait
 800              		.thumb
 801              		.thumb_func
 803              	SDIO_StopSDIOReadWait:
 804              	.LFB46:
 620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 805              		.loc 1 628 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0370 80B4     		push	{r7}
 811              	.LCFI45:
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0372 83B0     		sub	sp, sp, #12
 815              	.LCFI46:
 816              		.cfi_def_cfa_offset 16
 817 0374 00AF     		add	r7, sp, #0
 818              	.LCFI47:
 819              		.cfi_def_cfa_register 7
 820 0376 0346     		mov	r3, r0
 821 0378 FB71     		strb	r3, [r7, #7]
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 822              		.loc 1 632 0
 823 037a 48F2A453 		movw	r3, #34212
 824 037e C4F22523 		movt	r3, 16933
 825 0382 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 826 0384 1A60     		str	r2, [r3, #0]
 633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 827              		.loc 1 633 0
 828 0386 07F10C07 		add	r7, r7, #12
 829 038a BD46     		mov	sp, r7
 830 038c 80BC     		pop	{r7}
 831 038e 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE46:
 835              		.align	2
 836              		.global	SDIO_SetSDIOReadWaitMode
 837              		.thumb
 838              		.thumb_func
 840              	SDIO_SetSDIOReadWaitMode:
 841              	.LFB47:
 634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be:
 639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 842              		.loc 1 644 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0390 80B4     		push	{r7}
 848              	.LCFI48:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 0392 83B0     		sub	sp, sp, #12
 852              	.LCFI49:
 853              		.cfi_def_cfa_offset 16
 854 0394 00AF     		add	r7, sp, #0
 855              	.LCFI50:
 856              		.cfi_def_cfa_register 7
 857 0396 7860     		str	r0, [r7, #4]
 645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 858              		.loc 1 648 0
 859 0398 48F2A853 		movw	r3, #34216
 860 039c C4F22523 		movt	r3, 16933
 861 03a0 7A68     		ldr	r2, [r7, #4]
 862 03a2 1A60     		str	r2, [r3, #0]
 649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 863              		.loc 1 649 0
 864 03a4 07F10C07 		add	r7, r7, #12
 865 03a8 BD46     		mov	sp, r7
 866 03aa 80BC     		pop	{r7}
 867 03ac 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE47:
 871 03ae 00BF     		.align	2
 872              		.global	SDIO_SetSDIOOperation
 873              		.thumb
 874              		.thumb_func
 876              	SDIO_SetSDIOOperation:
 877              	.LFB48:
 650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 878              		.loc 1 658 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883 03b0 80B4     		push	{r7}
 884              	.LCFI51:
 885              		.cfi_def_cfa_offset 4
 886              		.cfi_offset 7, -4
 887 03b2 83B0     		sub	sp, sp, #12
 888              	.LCFI52:
 889              		.cfi_def_cfa_offset 16
 890 03b4 00AF     		add	r7, sp, #0
 891              	.LCFI53:
 892              		.cfi_def_cfa_register 7
 893 03b6 0346     		mov	r3, r0
 894 03b8 FB71     		strb	r3, [r7, #7]
 659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 895              		.loc 1 662 0
 896 03ba 48F2AC53 		movw	r3, #34220
 897 03be C4F22523 		movt	r3, 16933
 898 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 899 03c4 1A60     		str	r2, [r3, #0]
 663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 900              		.loc 1 663 0
 901 03c6 07F10C07 		add	r7, r7, #12
 902 03ca BD46     		mov	sp, r7
 903 03cc 80BC     		pop	{r7}
 904 03ce 7047     		bx	lr
 905              		.cfi_endproc
 906              	.LFE48:
 908              		.align	2
 909              		.global	SDIO_SendSDIOSuspendCmd
 910              		.thumb
 911              		.thumb_func
 913              	SDIO_SendSDIOSuspendCmd:
 914              	.LFB49:
 664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 915              		.loc 1 672 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920 03d0 80B4     		push	{r7}
 921              	.LCFI54:
 922              		.cfi_def_cfa_offset 4
 923              		.cfi_offset 7, -4
 924 03d2 83B0     		sub	sp, sp, #12
 925              	.LCFI55:
 926              		.cfi_def_cfa_offset 16
 927 03d4 00AF     		add	r7, sp, #0
 928              	.LCFI56:
 929              		.cfi_def_cfa_register 7
 930 03d6 0346     		mov	r3, r0
 931 03d8 FB71     		strb	r3, [r7, #7]
 673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 932              		.loc 1 676 0
 933 03da 48F2AC13 		movw	r3, #33196
 934 03de C4F22523 		movt	r3, 16933
 935 03e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 936 03e4 1A60     		str	r2, [r3, #0]
 677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 937              		.loc 1 677 0
 938 03e6 07F10C07 		add	r7, r7, #12
 939 03ea BD46     		mov	sp, r7
 940 03ec 80BC     		pop	{r7}
 941 03ee 7047     		bx	lr
 942              		.cfi_endproc
 943              	.LFE49:
 945              		.align	2
 946              		.global	SDIO_CommandCompletionCmd
 947              		.thumb
 948              		.thumb_func
 950              	SDIO_CommandCompletionCmd:
 951              	.LFB50:
 678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****               CE-ATA mode management functions
 689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 952              		.loc 1 704 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 8
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 957 03f0 80B4     		push	{r7}
 958              	.LCFI57:
 959              		.cfi_def_cfa_offset 4
 960              		.cfi_offset 7, -4
 961 03f2 83B0     		sub	sp, sp, #12
 962              	.LCFI58:
 963              		.cfi_def_cfa_offset 16
 964 03f4 00AF     		add	r7, sp, #0
 965              	.LCFI59:
 966              		.cfi_def_cfa_register 7
 967 03f6 0346     		mov	r3, r0
 968 03f8 FB71     		strb	r3, [r7, #7]
 705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 969              		.loc 1 708 0
 970 03fa 48F2B013 		movw	r3, #33200
 971 03fe C4F22523 		movt	r3, 16933
 972 0402 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 973 0404 1A60     		str	r2, [r3, #0]
 709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 974              		.loc 1 709 0
 975 0406 07F10C07 		add	r7, r7, #12
 976 040a BD46     		mov	sp, r7
 977 040c 80BC     		pop	{r7}
 978 040e 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE50:
 982              		.align	2
 983              		.global	SDIO_CEATAITCmd
 984              		.thumb
 985              		.thumb_func
 987              	SDIO_CEATAITCmd:
 988              	.LFB51:
 710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 989              		.loc 1 718 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 8
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993              		@ link register save eliminated.
 994 0410 80B4     		push	{r7}
 995              	.LCFI60:
 996              		.cfi_def_cfa_offset 4
 997              		.cfi_offset 7, -4
 998 0412 83B0     		sub	sp, sp, #12
 999              	.LCFI61:
 1000              		.cfi_def_cfa_offset 16
 1001 0414 00AF     		add	r7, sp, #0
 1002              	.LCFI62:
 1003              		.cfi_def_cfa_register 7
 1004 0416 0346     		mov	r3, r0
 1005 0418 FB71     		strb	r3, [r7, #7]
 719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1006              		.loc 1 722 0
 1007 041a 48F2B413 		movw	r3, #33204
 1008 041e C4F22523 		movt	r3, 16933
 1009 0422 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1010 0424 02F00102 		and	r2, r2, #1
 1011 0428 002A     		cmp	r2, #0
 1012 042a 14BF     		ite	ne
 1013 042c 0022     		movne	r2, #0
 1014 042e 0122     		moveq	r2, #1
 1015 0430 1A60     		str	r2, [r3, #0]
 723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1016              		.loc 1 723 0
 1017 0432 07F10C07 		add	r7, r7, #12
 1018 0436 BD46     		mov	sp, r7
 1019 0438 80BC     		pop	{r7}
 1020 043a 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE51:
 1024              		.align	2
 1025              		.global	SDIO_SendCEATACmd
 1026              		.thumb
 1027              		.thumb_func
 1029              	SDIO_SendCEATACmd:
 1030              	.LFB52:
 724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 1031              		.loc 1 732 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 8
 1034              		@ frame_needed = 1, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
 1036 043c 80B4     		push	{r7}
 1037              	.LCFI63:
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 043e 83B0     		sub	sp, sp, #12
 1041              	.LCFI64:
 1042              		.cfi_def_cfa_offset 16
 1043 0440 00AF     		add	r7, sp, #0
 1044              	.LCFI65:
 1045              		.cfi_def_cfa_register 7
 1046 0442 0346     		mov	r3, r0
 1047 0444 FB71     		strb	r3, [r7, #7]
 733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1048              		.loc 1 736 0
 1049 0446 48F2B813 		movw	r3, #33208
 1050 044a C4F22523 		movt	r3, 16933
 1051 044e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1052 0450 1A60     		str	r2, [r3, #0]
 737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1053              		.loc 1 737 0
 1054 0452 07F10C07 		add	r7, r7, #12
 1055 0456 BD46     		mov	sp, r7
 1056 0458 80BC     		pop	{r7}
 1057 045a 7047     		bx	lr
 1058              		.cfi_endproc
 1059              	.LFE52:
 1061              		.align	2
 1062              		.global	SDIO_DMACmd
 1063              		.thumb
 1064              		.thumb_func
 1066              	SDIO_DMACmd:
 1067              	.LFB53:
 738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   DMA transfers management functions
 745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****               DMA transfers management functions
 749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 1068              		.loc 1 764 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 8
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073 045c 80B4     		push	{r7}
 1074              	.LCFI66:
 1075              		.cfi_def_cfa_offset 4
 1076              		.cfi_offset 7, -4
 1077 045e 83B0     		sub	sp, sp, #12
 1078              	.LCFI67:
 1079              		.cfi_def_cfa_offset 16
 1080 0460 00AF     		add	r7, sp, #0
 1081              	.LCFI68:
 1082              		.cfi_def_cfa_register 7
 1083 0462 0346     		mov	r3, r0
 1084 0464 FB71     		strb	r3, [r7, #7]
 765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1085              		.loc 1 768 0
 1086 0466 48F28C53 		movw	r3, #34188
 1087 046a C4F22523 		movt	r3, 16933
 1088 046e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1089 0470 1A60     		str	r2, [r3, #0]
 769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1090              		.loc 1 769 0
 1091 0472 07F10C07 		add	r7, r7, #12
 1092 0476 BD46     		mov	sp, r7
 1093 0478 80BC     		pop	{r7}
 1094 047a 7047     		bx	lr
 1095              		.cfi_endproc
 1096              	.LFE53:
 1098              		.align	2
 1099              		.global	SDIO_ITConfig
 1100              		.thumb
 1101              		.thumb_func
 1103              	SDIO_ITConfig:
 1104              	.LFB54:
 770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @}
 773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  *
 778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @verbatim   
 779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================
 780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****                        Interrupts and flags management functions
 781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****  ===============================================================================  
 782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** @endverbatim
 785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @{
 786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                                   bus mode interrupt
 803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None 
 820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** {
 1105              		.loc 1 822 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110 047c 80B4     		push	{r7}
 1111              	.LCFI69:
 1112              		.cfi_def_cfa_offset 4
 1113              		.cfi_offset 7, -4
 1114 047e 83B0     		sub	sp, sp, #12
 1115              	.LCFI70:
 1116              		.cfi_def_cfa_offset 16
 1117 0480 00AF     		add	r7, sp, #0
 1118              	.LCFI71:
 1119              		.cfi_def_cfa_register 7
 1120 0482 7860     		str	r0, [r7, #4]
 1121 0484 0B46     		mov	r3, r1
 1122 0486 FB70     		strb	r3, [r7, #3]
 823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   if (NewState != DISABLE)
 1123              		.loc 1 827 0
 1124 0488 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1125 048a 002B     		cmp	r3, #0
 1126 048c 0DD0     		beq	.L27
 828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     /* Enable the SDIO interrupts */
 830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1127              		.loc 1 830 0
 1128 048e 4FF43053 		mov	r3, #11264
 1129 0492 C4F20103 		movt	r3, 16385
 1130 0496 4FF43052 		mov	r2, #11264
 1131 049a C4F20102 		movt	r2, 16385
 1132 049e D26B     		ldr	r2, [r2, #60]
 1133 04a0 1146     		mov	r1, r2
 1134 04a2 7A68     		ldr	r2, [r7, #4]
 1135 04a4 0A43     		orrs	r2, r2, r1
 1136 04a6 DA63     		str	r2, [r3, #60]
 1137 04a8 0EE0     		b	.L26
 1138              	.L27:
 831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   }
 832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   else
 833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     /* Disable the SDIO interrupts */
 835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1139              		.loc 1 835 0
 1140 04aa 4FF43053 		mov	r3, #11264
 1141 04ae C4F20103 		movt	r3, 16385
 1142 04b2 4FF43052 		mov	r2, #11264
 1143 04b6 C4F20102 		movt	r2, 16385
 1144 04ba D26B     		ldr	r2, [r2, #60]
 1145 04bc 1146     		mov	r1, r2
 1146 04be 7A68     		ldr	r2, [r7, #4]
 1147 04c0 6FEA0202 		mvn	r2, r2
 1148 04c4 0A40     		ands	r2, r2, r1
 1149 04c6 DA63     		str	r2, [r3, #60]
 1150              	.L26:
 836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   } 
 837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1151              		.loc 1 837 0
 1152 04c8 07F10C07 		add	r7, r7, #12
 1153 04cc BD46     		mov	sp, r7
 1154 04ce 80BC     		pop	{r7}
 1155 04d0 7047     		bx	lr
 1156              		.cfi_endproc
 1157              	.LFE54:
 1159 04d2 00BF     		.align	2
 1160              		.global	SDIO_GetFlagStatus
 1161              		.thumb
 1162              		.thumb_func
 1164              	SDIO_GetFlagStatus:
 1165              	.LFB55:
 838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one of the following values:
 843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 1166              		.loc 1 870 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 16
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 04d4 80B4     		push	{r7}
 1172              	.LCFI72:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 04d6 85B0     		sub	sp, sp, #20
 1176              	.LCFI73:
 1177              		.cfi_def_cfa_offset 24
 1178 04d8 00AF     		add	r7, sp, #0
 1179              	.LCFI74:
 1180              		.cfi_def_cfa_register 7
 1181 04da 7860     		str	r0, [r7, #4]
 871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1182              		.loc 1 871 0
 1183 04dc 4FF00003 		mov	r3, #0
 1184 04e0 FB73     		strb	r3, [r7, #15]
 872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1185              		.loc 1 876 0
 1186 04e2 4FF43053 		mov	r3, #11264
 1187 04e6 C4F20103 		movt	r3, 16385
 1188 04ea 5B6B     		ldr	r3, [r3, #52]
 1189 04ec 1A46     		mov	r2, r3
 1190 04ee 7B68     		ldr	r3, [r7, #4]
 1191 04f0 1340     		ands	r3, r3, r2
 1192 04f2 002B     		cmp	r3, #0
 1193 04f4 03D0     		beq	.L30
 877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     bitstatus = SET;
 1194              		.loc 1 878 0
 1195 04f6 4FF00103 		mov	r3, #1
 1196 04fa FB73     		strb	r3, [r7, #15]
 1197 04fc 02E0     		b	.L31
 1198              	.L30:
 879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   }
 880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   else
 881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     bitstatus = RESET;
 1199              		.loc 1 882 0
 1200 04fe 4FF00003 		mov	r3, #0
 1201 0502 FB73     		strb	r3, [r7, #15]
 1202              	.L31:
 883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   }
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return bitstatus;
 1203              		.loc 1 884 0
 1204 0504 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1205              		.loc 1 885 0
 1206 0506 1846     		mov	r0, r3
 1207 0508 07F11407 		add	r7, r7, #20
 1208 050c BD46     		mov	sp, r7
 1209 050e 80BC     		pop	{r7}
 1210 0510 7047     		bx	lr
 1211              		.cfi_endproc
 1212              	.LFE55:
 1214 0512 00BF     		.align	2
 1215              		.global	SDIO_ClearFlag
 1216              		.thumb
 1217              		.thumb_func
 1219              	SDIO_ClearFlag:
 1220              	.LFB56:
 886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 1221              		.loc 1 907 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226 0514 80B4     		push	{r7}
 1227              	.LCFI75:
 1228              		.cfi_def_cfa_offset 4
 1229              		.cfi_offset 7, -4
 1230 0516 83B0     		sub	sp, sp, #12
 1231              	.LCFI76:
 1232              		.cfi_def_cfa_offset 16
 1233 0518 00AF     		add	r7, sp, #0
 1234              	.LCFI77:
 1235              		.cfi_def_cfa_register 7
 1236 051a 7860     		str	r0, [r7, #4]
 908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****    
 911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1237              		.loc 1 911 0
 1238 051c 4FF43053 		mov	r3, #11264
 1239 0520 C4F20103 		movt	r3, 16385
 1240 0524 7A68     		ldr	r2, [r7, #4]
 1241 0526 9A63     		str	r2, [r3, #56]
 912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1242              		.loc 1 912 0
 1243 0528 07F10C07 		add	r7, r7, #12
 1244 052c BD46     		mov	sp, r7
 1245 052e 80BC     		pop	{r7}
 1246 0530 7047     		bx	lr
 1247              		.cfi_endproc
 1248              	.LFE56:
 1250 0532 00BF     		.align	2
 1251              		.global	SDIO_GetITStatus
 1252              		.thumb
 1253              		.thumb_func
 1255              	SDIO_GetITStatus:
 1256              	.LFB57:
 913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one of the following values:
 918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                                   bus mode interrupt
 929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 1257              		.loc 1 946 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0534 80B4     		push	{r7}
 1263              	.LCFI78:
 1264              		.cfi_def_cfa_offset 4
 1265              		.cfi_offset 7, -4
 1266 0536 85B0     		sub	sp, sp, #20
 1267              	.LCFI79:
 1268              		.cfi_def_cfa_offset 24
 1269 0538 00AF     		add	r7, sp, #0
 1270              	.LCFI80:
 1271              		.cfi_def_cfa_register 7
 1272 053a 7860     		str	r0, [r7, #4]
 947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   ITStatus bitstatus = RESET;
 1273              		.loc 1 947 0
 1274 053c 4FF00003 		mov	r3, #0
 1275 0540 FB73     		strb	r3, [r7, #15]
 948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   
 949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1276              		.loc 1 951 0
 1277 0542 4FF43053 		mov	r3, #11264
 1278 0546 C4F20103 		movt	r3, 16385
 1279 054a 5B6B     		ldr	r3, [r3, #52]
 1280 054c 1A46     		mov	r2, r3
 1281 054e 7B68     		ldr	r3, [r7, #4]
 1282 0550 1340     		ands	r3, r3, r2
 1283 0552 002B     		cmp	r3, #0
 1284 0554 03D0     		beq	.L34
 952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     bitstatus = SET;
 1285              		.loc 1 953 0
 1286 0556 4FF00103 		mov	r3, #1
 1287 055a FB73     		strb	r3, [r7, #15]
 1288 055c 02E0     		b	.L35
 1289              	.L34:
 954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   }
 955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   else
 956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   {
 957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****     bitstatus = RESET;
 1290              		.loc 1 957 0
 1291 055e 4FF00003 		mov	r3, #0
 1292 0562 FB73     		strb	r3, [r7, #15]
 1293              	.L35:
 958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   }
 959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   return bitstatus;
 1294              		.loc 1 959 0
 1295 0564 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1296              		.loc 1 960 0
 1297 0566 1846     		mov	r0, r3
 1298 0568 07F11407 		add	r7, r7, #20
 1299 056c BD46     		mov	sp, r7
 1300 056e 80BC     		pop	{r7}
 1301 0570 7047     		bx	lr
 1302              		.cfi_endproc
 1303              	.LFE57:
 1305 0572 00BF     		.align	2
 1306              		.global	SDIO_ClearITPendingBit
 1307              		.thumb
 1308              		.thumb_func
 1310              	SDIO_ClearITPendingBit:
 1311              	.LFB58:
 961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** 
 962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** /**
 963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *                                   bus mode interrupt
 977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   * @retval None
 980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   */
 981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** { 
 1312              		.loc 1 982 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 8
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316              		@ link register save eliminated.
 1317 0574 80B4     		push	{r7}
 1318              	.LCFI81:
 1319              		.cfi_def_cfa_offset 4
 1320              		.cfi_offset 7, -4
 1321 0576 83B0     		sub	sp, sp, #12
 1322              	.LCFI82:
 1323              		.cfi_def_cfa_offset 16
 1324 0578 00AF     		add	r7, sp, #0
 1325              	.LCFI83:
 1326              		.cfi_def_cfa_register 7
 1327 057a 7860     		str	r0, [r7, #4]
 983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   /* Check the parameters */
 984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****    
 986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1328              		.loc 1 986 0
 1329 057c 4FF43053 		mov	r3, #11264
 1330 0580 C4F20103 		movt	r3, 16385
 1331 0584 7A68     		ldr	r2, [r7, #4]
 1332 0586 9A63     		str	r2, [r3, #56]
 987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_sdio.c **** }
 1333              		.loc 1 987 0
 1334 0588 07F10C07 		add	r7, r7, #12
 1335 058c BD46     		mov	sp, r7
 1336 058e 80BC     		pop	{r7}
 1337 0590 7047     		bx	lr
 1338              		.cfi_endproc
 1339              	.LFE58:
 1341              	.Letext0:
 1342              		.file 2 "c:/cad/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1343              		.file 3 "C:\\workspace\\te_stm32f207_simple\\system/stm32f2xx.h"
 1344              		.file 4 "C:\\workspace\\te_stm32f207_simple\\STM32F2xx_StdPeriph_Driver\\inc/stm32f2xx_sdio.h"
 1345              		.file 5 "C:\\workspace\\te_stm32f207_simple\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_sdio.c
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:17     .text:00000000 $t
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:22     .text:00000000 SDIO_DeInit
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:55     .text:00000020 SDIO_Init
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:133    .text:00000088 SDIO_StructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:188    .text:000000cc SDIO_ClockCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:225    .text:000000ec SDIO_SetPowerState
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:274    .text:00000130 SDIO_GetPowerState
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:306    .text:0000014c SDIO_SendCommand
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:378    .text:000001b4 SDIO_CmdStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:429    .text:000001f0 SDIO_GetCommandResponse
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:461    .text:00000208 SDIO_GetResponse
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:505    .text:00000234 SDIO_DataConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:582    .text:000002a4 SDIO_DataStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:637    .text:000002e8 SDIO_GetDataCounter
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:668    .text:00000300 SDIO_ReadData
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:699    .text:00000318 SDIO_WriteData
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:735    .text:00000338 SDIO_GetFIFOCount
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:766    .text:00000350 SDIO_StartSDIOReadWait
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:803    .text:00000370 SDIO_StopSDIOReadWait
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:840    .text:00000390 SDIO_SetSDIOReadWaitMode
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:876    .text:000003b0 SDIO_SetSDIOOperation
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:913    .text:000003d0 SDIO_SendSDIOSuspendCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:950    .text:000003f0 SDIO_CommandCompletionCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:987    .text:00000410 SDIO_CEATAITCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1029   .text:0000043c SDIO_SendCEATACmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1066   .text:0000045c SDIO_DMACmd
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1103   .text:0000047c SDIO_ITConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1164   .text:000004d4 SDIO_GetFlagStatus
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1219   .text:00000514 SDIO_ClearFlag
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1255   .text:00000534 SDIO_GetITStatus
C:\Users\IARISC~1\AppData\Local\Temp\ccfSOBkE.s:1310   .text:00000574 SDIO_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
