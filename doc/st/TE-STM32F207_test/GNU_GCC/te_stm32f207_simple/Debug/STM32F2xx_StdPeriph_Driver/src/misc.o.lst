   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"misc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	2
  18              		.global	NVIC_PriorityGroupConfig
  19              		.thumb
  20              		.thumb_func
  22              	NVIC_PriorityGroupConfig:
  23              	.LFB29:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/misc.c"
   1:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *          
  10:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * 
  16:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M3 exceptions are managed by CMSIS functions.
  18:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  19:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:../STM32F2xx_StdPeriph_Driver/src/misc.c ****  
  22:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  43:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  45:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  48:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  53:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  55:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  58:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *
  65:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  67:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
  68:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  69:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  70:../STM32F2xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  71:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  72:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
  73:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @{
  74:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
  75:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  76:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  77:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  78:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @{
  79:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
  80:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  81:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  82:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  83:../STM32F2xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  84:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  85:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  86:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  87:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  88:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  89:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  90:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  91:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @{
  92:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
  93:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
  94:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
  95:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  96:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  97:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  98:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  99:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 100:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 101:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 102:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 103:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 104:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 105:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 106:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 107:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 108:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 109:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 110:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 111:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
 112:../STM32F2xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 113:../STM32F2xx_StdPeriph_Driver/src/misc.c **** {
  25              		.loc 1 113 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 114:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 115:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 116:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   
 117:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 118:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  41              		.loc 1 118 0
  42 0008 4FF46D43 		mov	r3, #60672
  43 000c CEF20003 		movt	r3, 57344
  44 0010 7A68     		ldr	r2, [r7, #4]
  45 0012 42F0BE62 		orr	r2, r2, #99614720
  46 0016 42F42022 		orr	r2, r2, #655360
  47 001a DA60     		str	r2, [r3, #12]
 119:../STM32F2xx_StdPeriph_Driver/src/misc.c **** }
  48              		.loc 1 119 0
  49 001c 07F10C07 		add	r7, r7, #12
  50 0020 BD46     		mov	sp, r7
  51 0022 80BC     		pop	{r7}
  52 0024 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE29:
  56 0026 00BF     		.align	2
  57              		.global	NVIC_Init
  58              		.thumb
  59              		.thumb_func
  61              	NVIC_Init:
  62              	.LFB30:
 120:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
 121:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
 122:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 123:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 124:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 125:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 126:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 127:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 128:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 129:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
 130:../STM32F2xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 131:../STM32F2xx_StdPeriph_Driver/src/misc.c **** {
  63              		.loc 1 131 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 16
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0028 80B4     		push	{r7}
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 002a 85B0     		sub	sp, sp, #20
  73              	.LCFI4:
  74              		.cfi_def_cfa_offset 24
  75 002c 00AF     		add	r7, sp, #0
  76              	.LCFI5:
  77              		.cfi_def_cfa_register 7
  78 002e 7860     		str	r0, [r7, #4]
 132:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  79              		.loc 1 132 0
  80 0030 4FF00003 		mov	r3, #0
  81 0034 FB73     		strb	r3, [r7, #15]
  82 0036 4FF00003 		mov	r3, #0
  83 003a BB73     		strb	r3, [r7, #14]
  84 003c 4FF00F03 		mov	r3, #15
  85 0040 7B73     		strb	r3, [r7, #13]
 133:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   
 134:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 135:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 136:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 137:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 138:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     
 139:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  86              		.loc 1 139 0
  87 0042 7B68     		ldr	r3, [r7, #4]
  88 0044 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
  89 0046 002B     		cmp	r3, #0
  90 0048 45D0     		beq	.L3
 140:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 141:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 142:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  91              		.loc 1 142 0
  92 004a 4FF46D43 		mov	r3, #60672
  93 004e CEF20003 		movt	r3, 57344
  94 0052 DB68     		ldr	r3, [r3, #12]
  95 0054 6FEA0303 		mvn	r3, r3
  96 0058 03F4E063 		and	r3, r3, #1792
  97 005c 4FEA1323 		lsr	r3, r3, #8
  98 0060 FB73     		strb	r3, [r7, #15]
 143:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
  99              		.loc 1 143 0
 100 0062 FB7B     		ldrb	r3, [r7, #15]
 101 0064 C3F10403 		rsb	r3, r3, #4
 102 0068 BB73     		strb	r3, [r7, #14]
 144:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 103              		.loc 1 144 0
 104 006a 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 105 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 106 006e 42FA03F3 		asr	r3, r2, r3
 107 0072 7B73     		strb	r3, [r7, #13]
 145:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
 146:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 108              		.loc 1 146 0
 109 0074 7B68     		ldr	r3, [r7, #4]
 110 0076 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 111 0078 1A46     		mov	r2, r3
 112 007a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 113 007c 02FA03F3 		lsl	r3, r2, r3
 114 0080 FB73     		strb	r3, [r7, #15]
 147:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 115              		.loc 1 147 0
 116 0082 7B68     		ldr	r3, [r7, #4]
 117 0084 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 118 0086 7B7B     		ldrb	r3, [r7, #13]
 119 0088 1340     		ands	r3, r3, r2
 120 008a DAB2     		uxtb	r2, r3
 121 008c FB7B     		ldrb	r3, [r7, #15]
 122 008e 1343     		orrs	r3, r3, r2
 123 0090 FB73     		strb	r3, [r7, #15]
 148:../STM32F2xx_StdPeriph_Driver/src/misc.c ****         
 149:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 124              		.loc 1 149 0
 125 0092 FB7B     		ldrb	r3, [r7, #15]
 126 0094 4FEA0313 		lsl	r3, r3, #4
 127 0098 FB73     		strb	r3, [r7, #15]
 150:../STM32F2xx_StdPeriph_Driver/src/misc.c ****         
 151:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 128              		.loc 1 151 0
 129 009a 4FF46143 		mov	r3, #57600
 130 009e CEF20003 		movt	r3, 57344
 131 00a2 7A68     		ldr	r2, [r7, #4]
 132 00a4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 133 00a6 9B18     		adds	r3, r3, r2
 134 00a8 FA7B     		ldrb	r2, [r7, #15]
 135 00aa 83F80023 		strb	r2, [r3, #768]
 152:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     
 153:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 154:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 136              		.loc 1 154 0
 137 00ae 4FF46143 		mov	r3, #57600
 138 00b2 CEF20003 		movt	r3, 57344
 139 00b6 7A68     		ldr	r2, [r7, #4]
 140 00b8 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 141 00ba 4FEA5212 		lsr	r2, r2, #5
 142 00be D2B2     		uxtb	r2, r2
 155:../STM32F2xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 143              		.loc 1 155 0
 144 00c0 7968     		ldr	r1, [r7, #4]
 145 00c2 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 146 00c4 01F01F01 		and	r1, r1, #31
 147 00c8 4FF00100 		mov	r0, #1
 148 00cc 00FA01F1 		lsl	r1, r0, r1
 154:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 149              		.loc 1 154 0
 150 00d0 43F82210 		str	r1, [r3, r2, lsl #2]
 151 00d4 14E0     		b	.L2
 152              	.L3:
 156:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 157:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   else
 158:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 159:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 160:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 153              		.loc 1 160 0
 154 00d6 4FF46143 		mov	r3, #57600
 155 00da CEF20003 		movt	r3, 57344
 156 00de 7A68     		ldr	r2, [r7, #4]
 157 00e0 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 158 00e2 4FEA5212 		lsr	r2, r2, #5
 159 00e6 D2B2     		uxtb	r2, r2
 161:../STM32F2xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 160              		.loc 1 161 0
 161 00e8 7968     		ldr	r1, [r7, #4]
 162 00ea 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 163 00ec 01F01F01 		and	r1, r1, #31
 164 00f0 4FF00100 		mov	r0, #1
 165 00f4 00FA01F1 		lsl	r1, r0, r1
 160:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 166              		.loc 1 160 0
 167 00f8 02F12002 		add	r2, r2, #32
 168 00fc 43F82210 		str	r1, [r3, r2, lsl #2]
 169              	.L2:
 162:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 163:../STM32F2xx_StdPeriph_Driver/src/misc.c **** }
 170              		.loc 1 163 0
 171 0100 07F11407 		add	r7, r7, #20
 172 0104 BD46     		mov	sp, r7
 173 0106 80BC     		pop	{r7}
 174 0108 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE30:
 178 010a 00BF     		.align	2
 179              		.global	NVIC_SetVectorTable
 180              		.thumb
 181              		.thumb_func
 183              	NVIC_SetVectorTable:
 184              	.LFB31:
 164:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
 165:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
 166:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 167:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 168:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 169:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 170:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 171:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 172:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 173:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
 174:../STM32F2xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 175:../STM32F2xx_StdPeriph_Driver/src/misc.c **** { 
 185              		.loc 1 175 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 010c 80B4     		push	{r7}
 191              	.LCFI6:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 7, -4
 194 010e 83B0     		sub	sp, sp, #12
 195              	.LCFI7:
 196              		.cfi_def_cfa_offset 16
 197 0110 00AF     		add	r7, sp, #0
 198              	.LCFI8:
 199              		.cfi_def_cfa_register 7
 200 0112 7860     		str	r0, [r7, #4]
 201 0114 3960     		str	r1, [r7, #0]
 176:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 177:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 178:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 179:../STM32F2xx_StdPeriph_Driver/src/misc.c ****    
 180:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 202              		.loc 1 180 0
 203 0116 4FF46D43 		mov	r3, #60672
 204 011a CEF20003 		movt	r3, 57344
 205 011e 3A68     		ldr	r2, [r7, #0]
 206 0120 22F06042 		bic	r2, r2, #-536870912
 207 0124 22F07F02 		bic	r2, r2, #127
 208 0128 7968     		ldr	r1, [r7, #4]
 209 012a 0A43     		orrs	r2, r2, r1
 210 012c 9A60     		str	r2, [r3, #8]
 181:../STM32F2xx_StdPeriph_Driver/src/misc.c **** }
 211              		.loc 1 181 0
 212 012e 07F10C07 		add	r7, r7, #12
 213 0132 BD46     		mov	sp, r7
 214 0134 80BC     		pop	{r7}
 215 0136 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE31:
 219              		.align	2
 220              		.global	NVIC_SystemLPConfig
 221              		.thumb
 222              		.thumb_func
 224              	NVIC_SystemLPConfig:
 225              	.LFB32:
 182:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
 183:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
 184:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 185:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 186:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 187:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 188:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 189:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 190:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 191:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 192:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
 193:../STM32F2xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 194:../STM32F2xx_StdPeriph_Driver/src/misc.c **** {
 226              		.loc 1 194 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0138 80B4     		push	{r7}
 232              	.LCFI9:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 013a 83B0     		sub	sp, sp, #12
 236              	.LCFI10:
 237              		.cfi_def_cfa_offset 16
 238 013c 00AF     		add	r7, sp, #0
 239              	.LCFI11:
 240              		.cfi_def_cfa_register 7
 241 013e 0246     		mov	r2, r0
 242 0140 0B46     		mov	r3, r1
 243 0142 FA71     		strb	r2, [r7, #7]
 244 0144 BB71     		strb	r3, [r7, #6]
 195:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 196:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 197:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 198:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   
 199:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 245              		.loc 1 199 0
 246 0146 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 247 0148 002B     		cmp	r3, #0
 248 014a 0DD0     		beq	.L7
 200:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 201:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 249              		.loc 1 201 0
 250 014c 4FF46D43 		mov	r3, #60672
 251 0150 CEF20003 		movt	r3, 57344
 252 0154 4FF46D42 		mov	r2, #60672
 253 0158 CEF20002 		movt	r2, 57344
 254 015c 1269     		ldr	r2, [r2, #16]
 255 015e 1146     		mov	r1, r2
 256 0160 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 257 0162 0A43     		orrs	r2, r2, r1
 258 0164 1A61     		str	r2, [r3, #16]
 259 0166 0EE0     		b	.L6
 260              	.L7:
 202:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 203:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   else
 204:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 205:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 261              		.loc 1 205 0
 262 0168 4FF46D43 		mov	r3, #60672
 263 016c CEF20003 		movt	r3, 57344
 264 0170 4FF46D42 		mov	r2, #60672
 265 0174 CEF20002 		movt	r2, 57344
 266 0178 1269     		ldr	r2, [r2, #16]
 267 017a 1146     		mov	r1, r2
 268 017c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 269 017e 6FEA0202 		mvn	r2, r2
 270 0182 0A40     		ands	r2, r2, r1
 271 0184 1A61     		str	r2, [r3, #16]
 272              	.L6:
 206:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 207:../STM32F2xx_StdPeriph_Driver/src/misc.c **** }
 273              		.loc 1 207 0
 274 0186 07F10C07 		add	r7, r7, #12
 275 018a BD46     		mov	sp, r7
 276 018c 80BC     		pop	{r7}
 277 018e 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE32:
 281              		.align	2
 282              		.global	SysTick_CLKSourceConfig
 283              		.thumb
 284              		.thumb_func
 286              	SysTick_CLKSourceConfig:
 287              	.LFB33:
 208:../STM32F2xx_StdPeriph_Driver/src/misc.c **** 
 209:../STM32F2xx_StdPeriph_Driver/src/misc.c **** /**
 210:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 211:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 212:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 213:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 214:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 215:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 216:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   */
 217:../STM32F2xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 218:../STM32F2xx_StdPeriph_Driver/src/misc.c **** {
 288              		.loc 1 218 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 0190 80B4     		push	{r7}
 294              	.LCFI12:
 295              		.cfi_def_cfa_offset 4
 296              		.cfi_offset 7, -4
 297 0192 83B0     		sub	sp, sp, #12
 298              	.LCFI13:
 299              		.cfi_def_cfa_offset 16
 300 0194 00AF     		add	r7, sp, #0
 301              	.LCFI14:
 302              		.cfi_def_cfa_register 7
 303 0196 7860     		str	r0, [r7, #4]
 219:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 220:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 221:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 304              		.loc 1 221 0
 305 0198 7B68     		ldr	r3, [r7, #4]
 306 019a 042B     		cmp	r3, #4
 307 019c 0CD1     		bne	.L10
 222:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 223:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 308              		.loc 1 223 0
 309 019e 4EF21003 		movw	r3, #57360
 310 01a2 CEF20003 		movt	r3, 57344
 311 01a6 4EF21002 		movw	r2, #57360
 312 01aa CEF20002 		movt	r2, 57344
 313 01ae 1268     		ldr	r2, [r2, #0]
 314 01b0 42F00402 		orr	r2, r2, #4
 315 01b4 1A60     		str	r2, [r3, #0]
 316 01b6 0BE0     		b	.L9
 317              	.L10:
 224:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 225:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   else
 226:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   {
 227:../STM32F2xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 318              		.loc 1 227 0
 319 01b8 4EF21003 		movw	r3, #57360
 320 01bc CEF20003 		movt	r3, 57344
 321 01c0 4EF21002 		movw	r2, #57360
 322 01c4 CEF20002 		movt	r2, 57344
 323 01c8 1268     		ldr	r2, [r2, #0]
 324 01ca 22F00402 		bic	r2, r2, #4
 325 01ce 1A60     		str	r2, [r3, #0]
 326              	.L9:
 228:../STM32F2xx_StdPeriph_Driver/src/misc.c ****   }
 229:../STM32F2xx_StdPeriph_Driver/src/misc.c **** }
 327              		.loc 1 229 0
 328 01d0 07F10C07 		add	r7, r7, #12
 329 01d4 BD46     		mov	sp, r7
 330 01d6 80BC     		pop	{r7}
 331 01d8 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE33:
 335              	.Letext0:
 336              		.file 2 "c:/cad/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 337              		.file 3 "C:\\workspace\\te_stm32f207_simple\\system/core_cm3.h"
 338              		.file 4 "C:\\workspace\\te_stm32f207_simple\\system/stm32f2xx.h"
 339              		.file 5 "C:\\workspace\\te_stm32f207_simple\\STM32F2xx_StdPeriph_Driver\\inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:17     .text:00000000 $t
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:22     .text:00000000 NVIC_PriorityGroupConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:61     .text:00000028 NVIC_Init
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:183    .text:0000010c NVIC_SetVectorTable
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:224    .text:00000138 NVIC_SystemLPConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccFfReBk.s:286    .text:00000190 SysTick_CLKSourceConfig
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
