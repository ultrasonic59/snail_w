   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f2xx_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	2
  18              		.global	TIM_DeInit
  19              		.thumb
  20              		.thumb_func
  22              	TIM_DeInit:
  23              	.LFB29:
  24              		.file 1 "../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c"
   1:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
   2:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
   3:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @file    stm32f2xx_tim.c
   4:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @version V1.0.0
   6:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @date    18-April-2011
   7:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - TimeBase management
  10:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Output Compare management
  11:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Input Capture management
  12:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Clocks management
  15:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Synchronization management
  16:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Specific interface management
  17:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *              
  19:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  @verbatim
  20:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  
  21:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          ===================================================================
  22:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                 How to use this driver
  23:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          ===================================================================
  24:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          of all STM32F2xx devices.
  26:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   
  28:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 
  40:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             compare mode: 
  43:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   
  54:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             Input Capture mode:
  57:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   
  62:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                              
  69:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Get flags status
  72:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *              
  77:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         
  82:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
  89:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         
  94:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   
  97:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  @endverbatim
  98:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *    
  99:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
 100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @attention
 101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
 102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
 109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ******************************************************************************
 111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #include "stm32f2xx_tim.h"
 115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #include "stm32f2xx_rcc.h"
 116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
 118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM 
 122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
 158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
 159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
 160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        TimeBase management functions
 161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
 162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
 164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
 166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                     
 170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           with the corresponding configuration
 174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              
 181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
 185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
  25              		.loc 1 195 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 14, -4
  33              		.cfi_offset 7, -8
  34 0002 82B0     		sub	sp, sp, #8
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIMx == TIM1)
  41              		.loc 1 199 0
  42 0008 7A68     		ldr	r2, [r7, #4]
  43 000a 4FF00003 		mov	r3, #0
  44 000e C4F20103 		movt	r3, 16385
  45 0012 9A42     		cmp	r2, r3
  46 0014 0CD1     		bne	.L2
 200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  47              		.loc 1 201 0
  48 0016 4FF00100 		mov	r0, #1
  49 001a 4FF00101 		mov	r1, #1
  50 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  51              		.loc 1 202 0
  52 0022 4FF00100 		mov	r0, #1
  53 0026 4FF00001 		mov	r1, #0
  54 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  55 002e FFE0     		b	.L1
  56              	.L2:
 203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   } 
 204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM2) 
  57              		.loc 1 204 0
  58 0030 7B68     		ldr	r3, [r7, #4]
  59 0032 B3F1804F 		cmp	r3, #1073741824
  60 0036 0CD1     		bne	.L4
 205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {     
 206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  61              		.loc 1 206 0
  62 0038 4FF00100 		mov	r0, #1
  63 003c 4FF00101 		mov	r1, #1
  64 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  65              		.loc 1 207 0
  66 0044 4FF00100 		mov	r0, #1
  67 0048 4FF00001 		mov	r1, #0
  68 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  69 0050 EEE0     		b	.L1
  70              	.L4:
 208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM3)
  71              		.loc 1 209 0
  72 0052 7A68     		ldr	r2, [r7, #4]
  73 0054 4FF48063 		mov	r3, #1024
  74 0058 C4F20003 		movt	r3, 16384
  75 005c 9A42     		cmp	r2, r3
  76 005e 0CD1     		bne	.L5
 210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  77              		.loc 1 211 0
  78 0060 4FF00200 		mov	r0, #2
  79 0064 4FF00101 		mov	r1, #1
  80 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  81              		.loc 1 212 0
  82 006c 4FF00200 		mov	r0, #2
  83 0070 4FF00001 		mov	r1, #0
  84 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  85 0078 DAE0     		b	.L1
  86              	.L5:
 213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM4)
  87              		.loc 1 214 0
  88 007a 7A68     		ldr	r2, [r7, #4]
  89 007c 4FF40063 		mov	r3, #2048
  90 0080 C4F20003 		movt	r3, 16384
  91 0084 9A42     		cmp	r2, r3
  92 0086 0CD1     		bne	.L6
 215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  93              		.loc 1 216 0
  94 0088 4FF00400 		mov	r0, #4
  95 008c 4FF00101 		mov	r1, #1
  96 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  97              		.loc 1 217 0
  98 0094 4FF00400 		mov	r0, #4
  99 0098 4FF00001 		mov	r1, #0
 100 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101 00a0 C6E0     		b	.L1
 102              	.L6:
 218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM5)
 103              		.loc 1 219 0
 104 00a2 7A68     		ldr	r2, [r7, #4]
 105 00a4 4FF44063 		mov	r3, #3072
 106 00a8 C4F20003 		movt	r3, 16384
 107 00ac 9A42     		cmp	r2, r3
 108 00ae 0CD1     		bne	.L7
 220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 109              		.loc 1 221 0
 110 00b0 4FF00800 		mov	r0, #8
 111 00b4 4FF00101 		mov	r1, #1
 112 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 113              		.loc 1 222 0
 114 00bc 4FF00800 		mov	r0, #8
 115 00c0 4FF00001 		mov	r1, #0
 116 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 117 00c8 B2E0     		b	.L1
 118              	.L7:
 223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM6)  
 119              		.loc 1 224 0
 120 00ca 7A68     		ldr	r2, [r7, #4]
 121 00cc 4FF48053 		mov	r3, #4096
 122 00d0 C4F20003 		movt	r3, 16384
 123 00d4 9A42     		cmp	r2, r3
 124 00d6 0CD1     		bne	.L8
 225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {    
 226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 125              		.loc 1 226 0
 126 00d8 4FF01000 		mov	r0, #16
 127 00dc 4FF00101 		mov	r1, #1
 128 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 129              		.loc 1 227 0
 130 00e4 4FF01000 		mov	r0, #16
 131 00e8 4FF00001 		mov	r1, #0
 132 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 133 00f0 9EE0     		b	.L1
 134              	.L8:
 228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM7)
 135              		.loc 1 229 0
 136 00f2 7A68     		ldr	r2, [r7, #4]
 137 00f4 4FF4A053 		mov	r3, #5120
 138 00f8 C4F20003 		movt	r3, 16384
 139 00fc 9A42     		cmp	r2, r3
 140 00fe 0CD1     		bne	.L9
 230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 141              		.loc 1 231 0
 142 0100 4FF02000 		mov	r0, #32
 143 0104 4FF00101 		mov	r1, #1
 144 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 145              		.loc 1 232 0
 146 010c 4FF02000 		mov	r0, #32
 147 0110 4FF00001 		mov	r1, #0
 148 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 149 0118 8AE0     		b	.L1
 150              	.L9:
 233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM8)
 151              		.loc 1 234 0
 152 011a 7A68     		ldr	r2, [r7, #4]
 153 011c 4FF48063 		mov	r3, #1024
 154 0120 C4F20103 		movt	r3, 16385
 155 0124 9A42     		cmp	r2, r3
 156 0126 0CD1     		bne	.L10
 235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 157              		.loc 1 236 0
 158 0128 4FF00200 		mov	r0, #2
 159 012c 4FF00101 		mov	r1, #1
 160 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 161              		.loc 1 237 0
 162 0134 4FF00200 		mov	r0, #2
 163 0138 4FF00001 		mov	r1, #0
 164 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 165 0140 76E0     		b	.L1
 166              	.L10:
 238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM9)
 167              		.loc 1 239 0
 168 0142 7A68     		ldr	r2, [r7, #4]
 169 0144 4FF48043 		mov	r3, #16384
 170 0148 C4F20103 		movt	r3, 16385
 171 014c 9A42     		cmp	r2, r3
 172 014e 0CD1     		bne	.L11
 240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 173              		.loc 1 241 0
 174 0150 4FF48030 		mov	r0, #65536
 175 0154 4FF00101 		mov	r1, #1
 176 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 177              		.loc 1 242 0
 178 015c 4FF48030 		mov	r0, #65536
 179 0160 4FF00001 		mov	r1, #0
 180 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 181 0168 62E0     		b	.L1
 182              	.L11:
 243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    }  
 244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM10)
 183              		.loc 1 244 0
 184 016a 7A68     		ldr	r2, [r7, #4]
 185 016c 4FF48843 		mov	r3, #17408
 186 0170 C4F20103 		movt	r3, 16385
 187 0174 9A42     		cmp	r2, r3
 188 0176 0CD1     		bne	.L12
 245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 189              		.loc 1 246 0
 190 0178 4FF40030 		mov	r0, #131072
 191 017c 4FF00101 		mov	r1, #1
 192 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 193              		.loc 1 247 0
 194 0184 4FF40030 		mov	r0, #131072
 195 0188 4FF00001 		mov	r1, #0
 196 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 197 0190 4EE0     		b	.L1
 198              	.L12:
 248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM11) 
 199              		.loc 1 249 0
 200 0192 7A68     		ldr	r2, [r7, #4]
 201 0194 4FF49043 		mov	r3, #18432
 202 0198 C4F20103 		movt	r3, 16385
 203 019c 9A42     		cmp	r2, r3
 204 019e 0CD1     		bne	.L13
 250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {     
 251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 205              		.loc 1 251 0
 206 01a0 4FF48020 		mov	r0, #262144
 207 01a4 4FF00101 		mov	r1, #1
 208 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 209              		.loc 1 252 0
 210 01ac 4FF48020 		mov	r0, #262144
 211 01b0 4FF00001 		mov	r1, #0
 212 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 213 01b8 3AE0     		b	.L1
 214              	.L13:
 253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM12)
 215              		.loc 1 254 0
 216 01ba 7A68     		ldr	r2, [r7, #4]
 217 01bc 4FF4C053 		mov	r3, #6144
 218 01c0 C4F20003 		movt	r3, 16384
 219 01c4 9A42     		cmp	r2, r3
 220 01c6 0CD1     		bne	.L14
 255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {      
 256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 221              		.loc 1 256 0
 222 01c8 4FF04000 		mov	r0, #64
 223 01cc 4FF00101 		mov	r1, #1
 224 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 225              		.loc 1 257 0
 226 01d4 4FF04000 		mov	r0, #64
 227 01d8 4FF00001 		mov	r1, #0
 228 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 229 01e0 26E0     		b	.L1
 230              	.L14:
 258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIMx == TIM13) 
 231              		.loc 1 259 0
 232 01e2 7A68     		ldr	r2, [r7, #4]
 233 01e4 4FF4E053 		mov	r3, #7168
 234 01e8 C4F20003 		movt	r3, 16384
 235 01ec 9A42     		cmp	r2, r3
 236 01ee 0CD1     		bne	.L15
 260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {       
 261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 237              		.loc 1 261 0
 238 01f0 4FF08000 		mov	r0, #128
 239 01f4 4FF00101 		mov	r1, #1
 240 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 241              		.loc 1 262 0
 242 01fc 4FF08000 		mov	r0, #128
 243 0200 4FF00001 		mov	r1, #0
 244 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 245 0208 12E0     		b	.L1
 246              	.L15:
 263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
 264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
 266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     if (TIMx == TIM14) 
 247              		.loc 1 266 0
 248 020a 7A68     		ldr	r2, [r7, #4]
 249 020c 4FF40053 		mov	r3, #8192
 250 0210 C4F20003 		movt	r3, 16384
 251 0214 9A42     		cmp	r2, r3
 252 0216 0BD1     		bne	.L1
 267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     {     
 268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 253              		.loc 1 268 0
 254 0218 4FF48070 		mov	r0, #256
 255 021c 4FF00101 		mov	r1, #1
 256 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 257              		.loc 1 269 0
 258 0224 4FF48070 		mov	r0, #256
 259 0228 4FF00001 		mov	r1, #0
 260 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 261              	.L1:
 270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     }   
 271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 262              		.loc 1 272 0
 263 0230 07F10807 		add	r7, r7, #8
 264 0234 BD46     		mov	sp, r7
 265 0236 80BD     		pop	{r7, pc}
 266              		.cfi_endproc
 267              	.LFE29:
 269              		.align	2
 270              		.global	TIM_TimeBaseInit
 271              		.thumb
 272              		.thumb_func
 274              	TIM_TimeBaseInit:
 275              	.LFB30:
 273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 276              		.loc 1 283 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 16
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281 0238 80B4     		push	{r7}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 7, -4
 285 023a 85B0     		sub	sp, sp, #20
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 24
 288 023c 00AF     		add	r7, sp, #0
 289              	.LCFI5:
 290              		.cfi_def_cfa_register 7
 291 023e 7860     		str	r0, [r7, #4]
 292 0240 3960     		str	r1, [r7, #0]
 284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpcr1 = 0;
 293              		.loc 1 284 0
 294 0242 4FF00003 		mov	r3, #0
 295 0246 FB81     		strh	r3, [r7, #14]	@ movhi
 285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 296              		.loc 1 291 0
 297 0248 7B68     		ldr	r3, [r7, #4]
 298 024a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 299 024c FB81     		strh	r3, [r7, #14]	@ movhi
 292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 300              		.loc 1 293 0
 301 024e 7A68     		ldr	r2, [r7, #4]
 302 0250 4FF00003 		mov	r3, #0
 303 0254 C4F20103 		movt	r3, 16385
 304 0258 9A42     		cmp	r2, r3
 305 025a 1FD0     		beq	.L17
 306              		.loc 1 293 0 is_stmt 0 discriminator 1
 307 025c 7A68     		ldr	r2, [r7, #4]
 308 025e 4FF48063 		mov	r3, #1024
 309 0262 C4F20103 		movt	r3, 16385
 310 0266 9A42     		cmp	r2, r3
 311 0268 18D0     		beq	.L17
 312 026a 7B68     		ldr	r3, [r7, #4]
 313 026c B3F1804F 		cmp	r3, #1073741824
 314 0270 14D0     		beq	.L17
 294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 315              		.loc 1 294 0 is_stmt 1
 316 0272 7A68     		ldr	r2, [r7, #4]
 317 0274 4FF48063 		mov	r3, #1024
 318 0278 C4F20003 		movt	r3, 16384
 319 027c 9A42     		cmp	r2, r3
 320 027e 0DD0     		beq	.L17
 321              		.loc 1 294 0 is_stmt 0 discriminator 1
 322 0280 7A68     		ldr	r2, [r7, #4]
 323 0282 4FF40063 		mov	r3, #2048
 324 0286 C4F20003 		movt	r3, 16384
 325 028a 9A42     		cmp	r2, r3
 326 028c 06D0     		beq	.L17
 295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 327              		.loc 1 295 0 is_stmt 1
 328 028e 7A68     		ldr	r2, [r7, #4]
 329 0290 4FF44063 		mov	r3, #3072
 330 0294 C4F20003 		movt	r3, 16384
 331 0298 9A42     		cmp	r2, r3
 332 029a 08D1     		bne	.L18
 333              	.L17:
 296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 334              		.loc 1 298 0
 335 029c FB89     		ldrh	r3, [r7, #14]	@ movhi
 336 029e 23F07003 		bic	r3, r3, #112
 337 02a2 FB81     		strh	r3, [r7, #14]	@ movhi
 299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 338              		.loc 1 299 0
 339 02a4 3B68     		ldr	r3, [r7, #0]
 340 02a6 5A88     		ldrh	r2, [r3, #2]
 341 02a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 342 02aa 1343     		orrs	r3, r3, r2
 343 02ac FB81     		strh	r3, [r7, #14]	@ movhi
 344              	.L18:
 300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 345              		.loc 1 302 0
 346 02ae 7A68     		ldr	r2, [r7, #4]
 347 02b0 4FF48053 		mov	r3, #4096
 348 02b4 C4F20003 		movt	r3, 16384
 349 02b8 9A42     		cmp	r2, r3
 350 02ba 0FD0     		beq	.L19
 351              		.loc 1 302 0 is_stmt 0 discriminator 1
 352 02bc 7A68     		ldr	r2, [r7, #4]
 353 02be 4FF4A053 		mov	r3, #5120
 354 02c2 C4F20003 		movt	r3, 16384
 355 02c6 9A42     		cmp	r2, r3
 356 02c8 08D0     		beq	.L19
 303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the clock division */
 305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 357              		.loc 1 305 0 is_stmt 1
 358 02ca FB89     		ldrh	r3, [r7, #14]	@ movhi
 359 02cc 23F44073 		bic	r3, r3, #768
 360 02d0 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 361              		.loc 1 306 0
 362 02d2 3B68     		ldr	r3, [r7, #0]
 363 02d4 1A89     		ldrh	r2, [r3, #8]
 364 02d6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 365 02d8 1343     		orrs	r3, r3, r2
 366 02da FB81     		strh	r3, [r7, #14]	@ movhi
 367              	.L19:
 307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 = tmpcr1;
 368              		.loc 1 309 0
 369 02dc 7B68     		ldr	r3, [r7, #4]
 370 02de FA89     		ldrh	r2, [r7, #14]	@ movhi
 371 02e0 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 372              		.loc 1 312 0
 373 02e2 3B68     		ldr	r3, [r7, #0]
 374 02e4 5A68     		ldr	r2, [r3, #4]
 375 02e6 7B68     		ldr	r3, [r7, #4]
 376 02e8 DA62     		str	r2, [r3, #44]
 313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
 314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 377              		.loc 1 315 0
 378 02ea 3B68     		ldr	r3, [r7, #0]
 379 02ec 1A88     		ldrh	r2, [r3, #0]
 380 02ee 7B68     		ldr	r3, [r7, #4]
 381 02f0 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 382              		.loc 1 317 0
 383 02f2 7A68     		ldr	r2, [r7, #4]
 384 02f4 4FF00003 		mov	r3, #0
 385 02f8 C4F20103 		movt	r3, 16385
 386 02fc 9A42     		cmp	r2, r3
 387 02fe 06D0     		beq	.L20
 388              		.loc 1 317 0 is_stmt 0 discriminator 1
 389 0300 7A68     		ldr	r2, [r7, #4]
 390 0302 4FF48063 		mov	r3, #1024
 391 0306 C4F20103 		movt	r3, 16385
 392 030a 9A42     		cmp	r2, r3
 393 030c 04D1     		bne	.L21
 394              	.L20:
 318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 395              		.loc 1 320 0 is_stmt 1
 396 030e 3B68     		ldr	r3, [r7, #0]
 397 0310 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 398 0312 1A46     		mov	r2, r3
 399 0314 7B68     		ldr	r3, [r7, #4]
 400 0316 1A86     		strh	r2, [r3, #48]	@ movhi
 401              	.L21:
 321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 402              		.loc 1 325 0
 403 0318 7B68     		ldr	r3, [r7, #4]
 404 031a 4FF00102 		mov	r2, #1
 405 031e 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 406              		.loc 1 326 0
 407 0320 07F11407 		add	r7, r7, #20
 408 0324 BD46     		mov	sp, r7
 409 0326 80BC     		pop	{r7}
 410 0328 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE30:
 414 032a 00BF     		.align	2
 415              		.global	TIM_TimeBaseStructInit
 416              		.thumb
 417              		.thumb_func
 419              	TIM_TimeBaseStructInit:
 420              	.LFB31:
 327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 421              		.loc 1 335 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426 032c 80B4     		push	{r7}
 427              	.LCFI6:
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 7, -4
 430 032e 83B0     		sub	sp, sp, #12
 431              	.LCFI7:
 432              		.cfi_def_cfa_offset 16
 433 0330 00AF     		add	r7, sp, #0
 434              	.LCFI8:
 435              		.cfi_def_cfa_register 7
 436 0332 7860     		str	r0, [r7, #4]
 336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
 337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 437              		.loc 1 337 0
 438 0334 7B68     		ldr	r3, [r7, #4]
 439 0336 4FF0FF32 		mov	r2, #-1
 440 033a 5A60     		str	r2, [r3, #4]
 338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 441              		.loc 1 338 0
 442 033c 7B68     		ldr	r3, [r7, #4]
 443 033e 4FF00002 		mov	r2, #0
 444 0342 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 445              		.loc 1 339 0
 446 0344 7B68     		ldr	r3, [r7, #4]
 447 0346 4FF00002 		mov	r2, #0
 448 034a 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 449              		.loc 1 340 0
 450 034c 7B68     		ldr	r3, [r7, #4]
 451 034e 4FF00002 		mov	r2, #0
 452 0352 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 453              		.loc 1 341 0
 454 0354 7B68     		ldr	r3, [r7, #4]
 455 0356 4FF00002 		mov	r2, #0
 456 035a 9A72     		strb	r2, [r3, #10]
 342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 457              		.loc 1 342 0
 458 035c 07F10C07 		add	r7, r7, #12
 459 0360 BD46     		mov	sp, r7
 460 0362 80BC     		pop	{r7}
 461 0364 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE31:
 465 0366 00BF     		.align	2
 466              		.global	TIM_PrescalerConfig
 467              		.thumb
 468              		.thumb_func
 470              	TIM_PrescalerConfig:
 471              	.LFB32:
 343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 472              		.loc 1 355 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0368 80B4     		push	{r7}
 478              	.LCFI9:
 479              		.cfi_def_cfa_offset 4
 480              		.cfi_offset 7, -4
 481 036a 83B0     		sub	sp, sp, #12
 482              	.LCFI10:
 483              		.cfi_def_cfa_offset 16
 484 036c 00AF     		add	r7, sp, #0
 485              	.LCFI11:
 486              		.cfi_def_cfa_register 7
 487 036e 7860     		str	r0, [r7, #4]
 488 0370 1346     		mov	r3, r2
 489 0372 0A46     		mov	r2, r1	@ movhi
 490 0374 7A80     		strh	r2, [r7, #2]	@ movhi
 491 0376 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->PSC = Prescaler;
 492              		.loc 1 360 0
 493 0378 7B68     		ldr	r3, [r7, #4]
 494 037a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 495 037c 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 496              		.loc 1 362 0
 497 037e 7B68     		ldr	r3, [r7, #4]
 498 0380 3A88     		ldrh	r2, [r7, #0]	@ movhi
 499 0382 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 500              		.loc 1 363 0
 501 0384 07F10C07 		add	r7, r7, #12
 502 0388 BD46     		mov	sp, r7
 503 038a 80BC     		pop	{r7}
 504 038c 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE32:
 508 038e 00BF     		.align	2
 509              		.global	TIM_CounterModeConfig
 510              		.thumb
 511              		.thumb_func
 513              	TIM_CounterModeConfig:
 514              	.LFB33:
 364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 515              		.loc 1 378 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 16
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0390 80B4     		push	{r7}
 521              	.LCFI12:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 0392 85B0     		sub	sp, sp, #20
 525              	.LCFI13:
 526              		.cfi_def_cfa_offset 24
 527 0394 00AF     		add	r7, sp, #0
 528              	.LCFI14:
 529              		.cfi_def_cfa_register 7
 530 0396 7860     		str	r0, [r7, #4]
 531 0398 0B46     		mov	r3, r1
 532 039a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpcr1 = 0;
 533              		.loc 1 379 0
 534 039c 4FF00003 		mov	r3, #0
 535 03a0 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 = TIMx->CR1;
 536              		.loc 1 385 0
 537 03a2 7B68     		ldr	r3, [r7, #4]
 538 03a4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 539 03a6 FB81     		strh	r3, [r7, #14]	@ movhi
 386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 540              		.loc 1 388 0
 541 03a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 542 03aa 23F07003 		bic	r3, r3, #112
 543 03ae FB81     		strh	r3, [r7, #14]	@ movhi
 389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 544              		.loc 1 391 0
 545 03b0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 546 03b2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 547 03b4 1343     		orrs	r3, r3, r2
 548 03b6 FB81     		strh	r3, [r7, #14]	@ movhi
 392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 = tmpcr1;
 549              		.loc 1 394 0
 550 03b8 7B68     		ldr	r3, [r7, #4]
 551 03ba FA89     		ldrh	r2, [r7, #14]	@ movhi
 552 03bc 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 553              		.loc 1 395 0
 554 03be 07F11407 		add	r7, r7, #20
 555 03c2 BD46     		mov	sp, r7
 556 03c4 80BC     		pop	{r7}
 557 03c6 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE33:
 561              		.align	2
 562              		.global	TIM_SetCounter
 563              		.thumb
 564              		.thumb_func
 566              	TIM_SetCounter:
 567              	.LFB34:
 396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 568              		.loc 1 404 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573 03c8 80B4     		push	{r7}
 574              	.LCFI15:
 575              		.cfi_def_cfa_offset 4
 576              		.cfi_offset 7, -4
 577 03ca 83B0     		sub	sp, sp, #12
 578              	.LCFI16:
 579              		.cfi_def_cfa_offset 16
 580 03cc 00AF     		add	r7, sp, #0
 581              	.LCFI17:
 582              		.cfi_def_cfa_register 7
 583 03ce 7860     		str	r0, [r7, #4]
 584 03d0 3960     		str	r1, [r7, #0]
 405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CNT = Counter;
 585              		.loc 1 409 0
 586 03d2 7B68     		ldr	r3, [r7, #4]
 587 03d4 3A68     		ldr	r2, [r7, #0]
 588 03d6 5A62     		str	r2, [r3, #36]
 410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 589              		.loc 1 410 0
 590 03d8 07F10C07 		add	r7, r7, #12
 591 03dc BD46     		mov	sp, r7
 592 03de 80BC     		pop	{r7}
 593 03e0 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE34:
 597 03e2 00BF     		.align	2
 598              		.global	TIM_SetAutoreload
 599              		.thumb
 600              		.thumb_func
 602              	TIM_SetAutoreload:
 603              	.LFB35:
 411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 604              		.loc 1 419 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609 03e4 80B4     		push	{r7}
 610              	.LCFI18:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 03e6 83B0     		sub	sp, sp, #12
 614              	.LCFI19:
 615              		.cfi_def_cfa_offset 16
 616 03e8 00AF     		add	r7, sp, #0
 617              	.LCFI20:
 618              		.cfi_def_cfa_register 7
 619 03ea 7860     		str	r0, [r7, #4]
 620 03ec 3960     		str	r1, [r7, #0]
 420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->ARR = Autoreload;
 621              		.loc 1 424 0
 622 03ee 7B68     		ldr	r3, [r7, #4]
 623 03f0 3A68     		ldr	r2, [r7, #0]
 624 03f2 DA62     		str	r2, [r3, #44]
 425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 625              		.loc 1 425 0
 626 03f4 07F10C07 		add	r7, r7, #12
 627 03f8 BD46     		mov	sp, r7
 628 03fa 80BC     		pop	{r7}
 629 03fc 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE35:
 633 03fe 00BF     		.align	2
 634              		.global	TIM_GetCounter
 635              		.thumb
 636              		.thumb_func
 638              	TIM_GetCounter:
 639              	.LFB36:
 426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Counter Register value
 431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 640              		.loc 1 433 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0400 80B4     		push	{r7}
 646              	.LCFI21:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0402 83B0     		sub	sp, sp, #12
 650              	.LCFI22:
 651              		.cfi_def_cfa_offset 16
 652 0404 00AF     		add	r7, sp, #0
 653              	.LCFI23:
 654              		.cfi_def_cfa_register 7
 655 0406 7860     		str	r0, [r7, #4]
 434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CNT;
 656              		.loc 1 438 0
 657 0408 7B68     		ldr	r3, [r7, #4]
 658 040a 5B6A     		ldr	r3, [r3, #36]
 439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 659              		.loc 1 439 0
 660 040c 1846     		mov	r0, r3
 661 040e 07F10C07 		add	r7, r7, #12
 662 0412 BD46     		mov	sp, r7
 663 0414 80BC     		pop	{r7}
 664 0416 7047     		bx	lr
 665              		.cfi_endproc
 666              	.LFE36:
 668              		.align	2
 669              		.global	TIM_GetPrescaler
 670              		.thumb
 671              		.thumb_func
 673              	TIM_GetPrescaler:
 674              	.LFB37:
 440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 675              		.loc 1 447 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 8
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680 0418 80B4     		push	{r7}
 681              	.LCFI24:
 682              		.cfi_def_cfa_offset 4
 683              		.cfi_offset 7, -4
 684 041a 83B0     		sub	sp, sp, #12
 685              	.LCFI25:
 686              		.cfi_def_cfa_offset 16
 687 041c 00AF     		add	r7, sp, #0
 688              	.LCFI26:
 689              		.cfi_def_cfa_register 7
 690 041e 7860     		str	r0, [r7, #4]
 448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->PSC;
 691              		.loc 1 452 0
 692 0420 7B68     		ldr	r3, [r7, #4]
 693 0422 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 694 0424 9BB2     		uxth	r3, r3
 453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 695              		.loc 1 453 0
 696 0426 1846     		mov	r0, r3
 697 0428 07F10C07 		add	r7, r7, #12
 698 042c BD46     		mov	sp, r7
 699 042e 80BC     		pop	{r7}
 700 0430 7047     		bx	lr
 701              		.cfi_endproc
 702              	.LFE37:
 704 0432 00BF     		.align	2
 705              		.global	TIM_UpdateDisableConfig
 706              		.thumb
 707              		.thumb_func
 709              	TIM_UpdateDisableConfig:
 710              	.LFB38:
 454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 711              		.loc 1 463 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 8
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716 0434 80B4     		push	{r7}
 717              	.LCFI27:
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0436 83B0     		sub	sp, sp, #12
 721              	.LCFI28:
 722              		.cfi_def_cfa_offset 16
 723 0438 00AF     		add	r7, sp, #0
 724              	.LCFI29:
 725              		.cfi_def_cfa_register 7
 726 043a 7860     		str	r0, [r7, #4]
 727 043c 0B46     		mov	r3, r1
 728 043e FB70     		strb	r3, [r7, #3]
 464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 729              		.loc 1 468 0
 730 0440 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 731 0442 002B     		cmp	r3, #0
 732 0444 08D0     		beq	.L30
 469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 733              		.loc 1 471 0
 734 0446 7B68     		ldr	r3, [r7, #4]
 735 0448 1B88     		ldrh	r3, [r3, #0]	@ movhi
 736 044a 9BB2     		uxth	r3, r3
 737 044c 43F00203 		orr	r3, r3, #2
 738 0450 9AB2     		uxth	r2, r3
 739 0452 7B68     		ldr	r3, [r7, #4]
 740 0454 1A80     		strh	r2, [r3, #0]	@ movhi
 741 0456 07E0     		b	.L29
 742              	.L30:
 472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 743              		.loc 1 476 0
 744 0458 7B68     		ldr	r3, [r7, #4]
 745 045a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 746 045c 9BB2     		uxth	r3, r3
 747 045e 23F00203 		bic	r3, r3, #2
 748 0462 9AB2     		uxth	r2, r3
 749 0464 7B68     		ldr	r3, [r7, #4]
 750 0466 1A80     		strh	r2, [r3, #0]	@ movhi
 751              	.L29:
 477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 752              		.loc 1 478 0
 753 0468 07F10C07 		add	r7, r7, #12
 754 046c BD46     		mov	sp, r7
 755 046e 80BC     		pop	{r7}
 756 0470 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE38:
 760 0472 00BF     		.align	2
 761              		.global	TIM_UpdateRequestConfig
 762              		.thumb
 763              		.thumb_func
 765              	TIM_UpdateRequestConfig:
 766              	.LFB39:
 479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 767              		.loc 1 492 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 8
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0474 80B4     		push	{r7}
 773              	.LCFI30:
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 7, -4
 776 0476 83B0     		sub	sp, sp, #12
 777              	.LCFI31:
 778              		.cfi_def_cfa_offset 16
 779 0478 00AF     		add	r7, sp, #0
 780              	.LCFI32:
 781              		.cfi_def_cfa_register 7
 782 047a 7860     		str	r0, [r7, #4]
 783 047c 0B46     		mov	r3, r1
 784 047e 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 785              		.loc 1 497 0
 786 0480 7B88     		ldrh	r3, [r7, #2]
 787 0482 002B     		cmp	r3, #0
 788 0484 08D0     		beq	.L33
 498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 789              		.loc 1 500 0
 790 0486 7B68     		ldr	r3, [r7, #4]
 791 0488 1B88     		ldrh	r3, [r3, #0]	@ movhi
 792 048a 9BB2     		uxth	r3, r3
 793 048c 43F00403 		orr	r3, r3, #4
 794 0490 9AB2     		uxth	r2, r3
 795 0492 7B68     		ldr	r3, [r7, #4]
 796 0494 1A80     		strh	r2, [r3, #0]	@ movhi
 797 0496 07E0     		b	.L32
 798              	.L33:
 501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 799              		.loc 1 505 0
 800 0498 7B68     		ldr	r3, [r7, #4]
 801 049a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 802 049c 9BB2     		uxth	r3, r3
 803 049e 23F00403 		bic	r3, r3, #4
 804 04a2 9AB2     		uxth	r2, r3
 805 04a4 7B68     		ldr	r3, [r7, #4]
 806 04a6 1A80     		strh	r2, [r3, #0]	@ movhi
 807              	.L32:
 506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 808              		.loc 1 507 0
 809 04a8 07F10C07 		add	r7, r7, #12
 810 04ac BD46     		mov	sp, r7
 811 04ae 80BC     		pop	{r7}
 812 04b0 7047     		bx	lr
 813              		.cfi_endproc
 814              	.LFE39:
 816 04b2 00BF     		.align	2
 817              		.global	TIM_ARRPreloadConfig
 818              		.thumb
 819              		.thumb_func
 821              	TIM_ARRPreloadConfig:
 822              	.LFB40:
 508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 823              		.loc 1 517 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 8
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828 04b4 80B4     		push	{r7}
 829              	.LCFI33:
 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 7, -4
 832 04b6 83B0     		sub	sp, sp, #12
 833              	.LCFI34:
 834              		.cfi_def_cfa_offset 16
 835 04b8 00AF     		add	r7, sp, #0
 836              	.LCFI35:
 837              		.cfi_def_cfa_register 7
 838 04ba 7860     		str	r0, [r7, #4]
 839 04bc 0B46     		mov	r3, r1
 840 04be FB70     		strb	r3, [r7, #3]
 518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 841              		.loc 1 522 0
 842 04c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 843 04c2 002B     		cmp	r3, #0
 844 04c4 08D0     		beq	.L36
 523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 845              		.loc 1 525 0
 846 04c6 7B68     		ldr	r3, [r7, #4]
 847 04c8 1B88     		ldrh	r3, [r3, #0]	@ movhi
 848 04ca 9BB2     		uxth	r3, r3
 849 04cc 43F08003 		orr	r3, r3, #128
 850 04d0 9AB2     		uxth	r2, r3
 851 04d2 7B68     		ldr	r3, [r7, #4]
 852 04d4 1A80     		strh	r2, [r3, #0]	@ movhi
 853 04d6 07E0     		b	.L35
 854              	.L36:
 526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 855              		.loc 1 530 0
 856 04d8 7B68     		ldr	r3, [r7, #4]
 857 04da 1B88     		ldrh	r3, [r3, #0]	@ movhi
 858 04dc 9BB2     		uxth	r3, r3
 859 04de 23F08003 		bic	r3, r3, #128
 860 04e2 9AB2     		uxth	r2, r3
 861 04e4 7B68     		ldr	r3, [r7, #4]
 862 04e6 1A80     		strh	r2, [r3, #0]	@ movhi
 863              	.L35:
 531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 864              		.loc 1 532 0
 865 04e8 07F10C07 		add	r7, r7, #12
 866 04ec BD46     		mov	sp, r7
 867 04ee 80BC     		pop	{r7}
 868 04f0 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE40:
 872 04f2 00BF     		.align	2
 873              		.global	TIM_SelectOnePulseMode
 874              		.thumb
 875              		.thumb_func
 877              	TIM_SelectOnePulseMode:
 878              	.LFB41:
 533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 879              		.loc 1 544 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 8
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 04f4 80B4     		push	{r7}
 885              	.LCFI36:
 886              		.cfi_def_cfa_offset 4
 887              		.cfi_offset 7, -4
 888 04f6 83B0     		sub	sp, sp, #12
 889              	.LCFI37:
 890              		.cfi_def_cfa_offset 16
 891 04f8 00AF     		add	r7, sp, #0
 892              	.LCFI38:
 893              		.cfi_def_cfa_register 7
 894 04fa 7860     		str	r0, [r7, #4]
 895 04fc 0B46     		mov	r3, r1
 896 04fe 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 897              		.loc 1 550 0
 898 0500 7B68     		ldr	r3, [r7, #4]
 899 0502 1B88     		ldrh	r3, [r3, #0]	@ movhi
 900 0504 9BB2     		uxth	r3, r3
 901 0506 23F00803 		bic	r3, r3, #8
 902 050a 9AB2     		uxth	r2, r3
 903 050c 7B68     		ldr	r3, [r7, #4]
 904 050e 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 905              		.loc 1 553 0
 906 0510 7B68     		ldr	r3, [r7, #4]
 907 0512 1B88     		ldrh	r3, [r3, #0]	@ movhi
 908 0514 9AB2     		uxth	r2, r3
 909 0516 7B88     		ldrh	r3, [r7, #2]	@ movhi
 910 0518 1343     		orrs	r3, r3, r2
 911 051a 9AB2     		uxth	r2, r3
 912 051c 7B68     		ldr	r3, [r7, #4]
 913 051e 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 914              		.loc 1 554 0
 915 0520 07F10C07 		add	r7, r7, #12
 916 0524 BD46     		mov	sp, r7
 917 0526 80BC     		pop	{r7}
 918 0528 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE41:
 922 052a 00BF     		.align	2
 923              		.global	TIM_SetClockDivision
 924              		.thumb
 925              		.thumb_func
 927              	TIM_SetClockDivision:
 928              	.LFB42:
 555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 929              		.loc 1 567 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 052c 80B4     		push	{r7}
 935              	.LCFI39:
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 052e 83B0     		sub	sp, sp, #12
 939              	.LCFI40:
 940              		.cfi_def_cfa_offset 16
 941 0530 00AF     		add	r7, sp, #0
 942              	.LCFI41:
 943              		.cfi_def_cfa_register 7
 944 0532 7860     		str	r0, [r7, #4]
 945 0534 0B46     		mov	r3, r1
 946 0536 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 947              		.loc 1 573 0
 948 0538 7B68     		ldr	r3, [r7, #4]
 949 053a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 950 053c 9BB2     		uxth	r3, r3
 951 053e 23F44073 		bic	r3, r3, #768
 952 0542 9AB2     		uxth	r2, r3
 953 0544 7B68     		ldr	r3, [r7, #4]
 954 0546 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the CKD value */
 576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 955              		.loc 1 576 0
 956 0548 7B68     		ldr	r3, [r7, #4]
 957 054a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 958 054c 9AB2     		uxth	r2, r3
 959 054e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 960 0550 1343     		orrs	r3, r3, r2
 961 0552 9AB2     		uxth	r2, r3
 962 0554 7B68     		ldr	r3, [r7, #4]
 963 0556 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 964              		.loc 1 577 0
 965 0558 07F10C07 		add	r7, r7, #12
 966 055c BD46     		mov	sp, r7
 967 055e 80BC     		pop	{r7}
 968 0560 7047     		bx	lr
 969              		.cfi_endproc
 970              	.LFE42:
 972 0562 00BF     		.align	2
 973              		.global	TIM_Cmd
 974              		.thumb
 975              		.thumb_func
 977              	TIM_Cmd:
 978              	.LFB43:
 578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 979              		.loc 1 587 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984 0564 80B4     		push	{r7}
 985              	.LCFI42:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 7, -4
 988 0566 83B0     		sub	sp, sp, #12
 989              	.LCFI43:
 990              		.cfi_def_cfa_offset 16
 991 0568 00AF     		add	r7, sp, #0
 992              	.LCFI44:
 993              		.cfi_def_cfa_register 7
 994 056a 7860     		str	r0, [r7, #4]
 995 056c 0B46     		mov	r3, r1
 996 056e FB70     		strb	r3, [r7, #3]
 588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 997              		.loc 1 592 0
 998 0570 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 999 0572 002B     		cmp	r3, #0
 1000 0574 08D0     		beq	.L41
 593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1001              		.loc 1 595 0
 1002 0576 7B68     		ldr	r3, [r7, #4]
 1003 0578 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1004 057a 9BB2     		uxth	r3, r3
 1005 057c 43F00103 		orr	r3, r3, #1
 1006 0580 9AB2     		uxth	r2, r3
 1007 0582 7B68     		ldr	r3, [r7, #4]
 1008 0584 1A80     		strh	r2, [r3, #0]	@ movhi
 1009 0586 07E0     		b	.L40
 1010              	.L41:
 596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
 598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1011              		.loc 1 600 0
 1012 0588 7B68     		ldr	r3, [r7, #4]
 1013 058a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1014 058c 9BB2     		uxth	r3, r3
 1015 058e 23F00103 		bic	r3, r3, #1
 1016 0592 9AB2     		uxth	r2, r3
 1017 0594 7B68     		ldr	r3, [r7, #4]
 1018 0596 1A80     		strh	r2, [r3, #0]	@ movhi
 1019              	.L40:
 601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1020              		.loc 1 602 0
 1021 0598 07F10C07 		add	r7, r7, #12
 1022 059c BD46     		mov	sp, r7
 1023 059e 80BC     		pop	{r7}
 1024 05a0 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE43:
 1028 05a2 00BF     		.align	2
 1029              		.global	TIM_OC1Init
 1030              		.thumb
 1031              		.thumb_func
 1033              	TIM_OC1Init:
 1034              	.LFB44:
 603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
 605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
 610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
 611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
 612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                         Output Compare management functions
 613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
 614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
 616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
 618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration
 639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
 642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
 645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               
 648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
 654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
 655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1035              		.loc 1 666 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 16
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 05a4 80B4     		push	{r7}
 1041              	.LCFI45:
 1042              		.cfi_def_cfa_offset 4
 1043              		.cfi_offset 7, -4
 1044 05a6 85B0     		sub	sp, sp, #20
 1045              	.LCFI46:
 1046              		.cfi_def_cfa_offset 24
 1047 05a8 00AF     		add	r7, sp, #0
 1048              	.LCFI47:
 1049              		.cfi_def_cfa_register 7
 1050 05aa 7860     		str	r0, [r7, #4]
 1051 05ac 3960     		str	r1, [r7, #0]
 667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1052              		.loc 1 667 0
 1053 05ae 4FF00003 		mov	r3, #0
 1054 05b2 7B81     		strh	r3, [r7, #10]	@ movhi
 1055 05b4 4FF00003 		mov	r3, #0
 1056 05b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1057 05ba 4FF00003 		mov	r3, #0
 1058 05be BB81     		strh	r3, [r7, #12]	@ movhi
 668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1059              		.loc 1 676 0
 1060 05c0 7B68     		ldr	r3, [r7, #4]
 1061 05c2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1062 05c4 9BB2     		uxth	r3, r3
 1063 05c6 23F00103 		bic	r3, r3, #1
 1064 05ca 9AB2     		uxth	r2, r3
 1065 05cc 7B68     		ldr	r3, [r7, #4]
 1066 05ce 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 1067              		.loc 1 679 0
 1068 05d0 7B68     		ldr	r3, [r7, #4]
 1069 05d2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1070 05d4 FB81     		strh	r3, [r7, #14]	@ movhi
 680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1071              		.loc 1 681 0
 1072 05d6 7B68     		ldr	r3, [r7, #4]
 1073 05d8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1074 05da BB81     		strh	r3, [r7, #12]	@ movhi
 682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1075              		.loc 1 684 0
 1076 05dc 7B68     		ldr	r3, [r7, #4]
 1077 05de 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1078 05e0 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1079              		.loc 1 687 0
 1080 05e2 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1081 05e4 23F07003 		bic	r3, r3, #112
 1082 05e8 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1083              		.loc 1 688 0
 1084 05ea 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1085 05ec 23F00303 		bic	r3, r3, #3
 1086 05f0 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1087              		.loc 1 690 0
 1088 05f2 3B68     		ldr	r3, [r7, #0]
 1089 05f4 1A88     		ldrh	r2, [r3, #0]
 1090 05f6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1091 05f8 1343     		orrs	r3, r3, r2
 1092 05fa 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1093              		.loc 1 693 0
 1094 05fc FB89     		ldrh	r3, [r7, #14]	@ movhi
 1095 05fe 23F00203 		bic	r3, r3, #2
 1096 0602 FB81     		strh	r3, [r7, #14]	@ movhi
 694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1097              		.loc 1 695 0
 1098 0604 3B68     		ldr	r3, [r7, #0]
 1099 0606 9A89     		ldrh	r2, [r3, #12]
 1100 0608 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1101 060a 1343     		orrs	r3, r3, r2
 1102 060c FB81     		strh	r3, [r7, #14]	@ movhi
 696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1103              		.loc 1 698 0
 1104 060e 3B68     		ldr	r3, [r7, #0]
 1105 0610 5A88     		ldrh	r2, [r3, #2]
 1106 0612 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1107 0614 1343     		orrs	r3, r3, r2
 1108 0616 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1109              		.loc 1 700 0
 1110 0618 7A68     		ldr	r2, [r7, #4]
 1111 061a 4FF00003 		mov	r3, #0
 1112 061e C4F20103 		movt	r3, 16385
 1113 0622 9A42     		cmp	r2, r3
 1114 0624 06D0     		beq	.L44
 1115              		.loc 1 700 0 is_stmt 0 discriminator 1
 1116 0626 7A68     		ldr	r2, [r7, #4]
 1117 0628 4FF48063 		mov	r3, #1024
 1118 062c C4F20103 		movt	r3, 16385
 1119 0630 9A42     		cmp	r2, r3
 1120 0632 23D1     		bne	.L45
 1121              	.L44:
 701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1122              		.loc 1 708 0 is_stmt 1
 1123 0634 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1124 0636 23F00803 		bic	r3, r3, #8
 1125 063a FB81     		strh	r3, [r7, #14]	@ movhi
 709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1126              		.loc 1 710 0
 1127 063c 3B68     		ldr	r3, [r7, #0]
 1128 063e DA89     		ldrh	r2, [r3, #14]
 1129 0640 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1130 0642 1343     		orrs	r3, r3, r2
 1131 0644 FB81     		strh	r3, [r7, #14]	@ movhi
 711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1132              		.loc 1 712 0
 1133 0646 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1134 0648 23F00403 		bic	r3, r3, #4
 1135 064c FB81     		strh	r3, [r7, #14]	@ movhi
 713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1136              		.loc 1 715 0
 1137 064e 3B68     		ldr	r3, [r7, #0]
 1138 0650 9A88     		ldrh	r2, [r3, #4]
 1139 0652 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1140 0654 1343     		orrs	r3, r3, r2
 1141 0656 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1142              		.loc 1 717 0
 1143 0658 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1144 065a 23F48073 		bic	r3, r3, #256
 1145 065e BB81     		strh	r3, [r7, #12]	@ movhi
 718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1146              		.loc 1 718 0
 1147 0660 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1148 0662 23F40073 		bic	r3, r3, #512
 1149 0666 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1150              		.loc 1 720 0
 1151 0668 3B68     		ldr	r3, [r7, #0]
 1152 066a 1A8A     		ldrh	r2, [r3, #16]
 1153 066c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1154 066e 1343     		orrs	r3, r3, r2
 1155 0670 BB81     		strh	r3, [r7, #12]	@ movhi
 721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1156              		.loc 1 722 0
 1157 0672 3B68     		ldr	r3, [r7, #0]
 1158 0674 5A8A     		ldrh	r2, [r3, #18]
 1159 0676 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1160 0678 1343     		orrs	r3, r3, r2
 1161 067a BB81     		strh	r3, [r7, #12]	@ movhi
 1162              	.L45:
 723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1163              		.loc 1 725 0
 1164 067c 7B68     		ldr	r3, [r7, #4]
 1165 067e BA89     		ldrh	r2, [r7, #12]	@ movhi
 1166 0680 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1167              		.loc 1 728 0
 1168 0682 7B68     		ldr	r3, [r7, #4]
 1169 0684 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1170 0686 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1171              		.loc 1 731 0
 1172 0688 3B68     		ldr	r3, [r7, #0]
 1173 068a 9A68     		ldr	r2, [r3, #8]
 1174 068c 7B68     		ldr	r3, [r7, #4]
 1175 068e 5A63     		str	r2, [r3, #52]
 732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 1176              		.loc 1 734 0
 1177 0690 7B68     		ldr	r3, [r7, #4]
 1178 0692 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1179 0694 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1180              		.loc 1 735 0
 1181 0696 07F11407 		add	r7, r7, #20
 1182 069a BD46     		mov	sp, r7
 1183 069c 80BC     		pop	{r7}
 1184 069e 7047     		bx	lr
 1185              		.cfi_endproc
 1186              	.LFE44:
 1188              		.align	2
 1189              		.global	TIM_OC2Init
 1190              		.thumb
 1191              		.thumb_func
 1193              	TIM_OC2Init:
 1194              	.LFB45:
 736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
 742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1195              		.loc 1 747 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 16
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 06a0 80B4     		push	{r7}
 1201              	.LCFI48:
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 06a2 85B0     		sub	sp, sp, #20
 1205              	.LCFI49:
 1206              		.cfi_def_cfa_offset 24
 1207 06a4 00AF     		add	r7, sp, #0
 1208              	.LCFI50:
 1209              		.cfi_def_cfa_register 7
 1210 06a6 7860     		str	r0, [r7, #4]
 1211 06a8 3960     		str	r1, [r7, #0]
 748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1212              		.loc 1 748 0
 1213 06aa 4FF00003 		mov	r3, #0
 1214 06ae 7B81     		strh	r3, [r7, #10]	@ movhi
 1215 06b0 4FF00003 		mov	r3, #0
 1216 06b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1217 06b6 4FF00003 		mov	r3, #0
 1218 06ba BB81     		strh	r3, [r7, #12]	@ movhi
 749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1219              		.loc 1 757 0
 1220 06bc 7B68     		ldr	r3, [r7, #4]
 1221 06be 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1222 06c0 9BB2     		uxth	r3, r3
 1223 06c2 23F01003 		bic	r3, r3, #16
 1224 06c6 9AB2     		uxth	r2, r3
 1225 06c8 7B68     		ldr	r3, [r7, #4]
 1226 06ca 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 1227              		.loc 1 760 0
 1228 06cc 7B68     		ldr	r3, [r7, #4]
 1229 06ce 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1230 06d0 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1231              		.loc 1 762 0
 1232 06d2 7B68     		ldr	r3, [r7, #4]
 1233 06d4 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1234 06d6 BB81     		strh	r3, [r7, #12]	@ movhi
 763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1235              		.loc 1 765 0
 1236 06d8 7B68     		ldr	r3, [r7, #4]
 1237 06da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1238 06dc 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1239              		.loc 1 768 0
 1240 06de 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1241 06e0 23F4E043 		bic	r3, r3, #28672
 1242 06e4 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1243              		.loc 1 769 0
 1244 06e6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1245 06e8 23F44073 		bic	r3, r3, #768
 1246 06ec 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1247              		.loc 1 772 0
 1248 06ee 3B68     		ldr	r3, [r7, #0]
 1249 06f0 1B88     		ldrh	r3, [r3, #0]
 1250 06f2 4FEA0323 		lsl	r3, r3, #8
 1251 06f6 9AB2     		uxth	r2, r3
 1252 06f8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1253 06fa 1343     		orrs	r3, r3, r2
 1254 06fc 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1255              		.loc 1 775 0
 1256 06fe FB89     		ldrh	r3, [r7, #14]	@ movhi
 1257 0700 23F02003 		bic	r3, r3, #32
 1258 0704 FB81     		strh	r3, [r7, #14]	@ movhi
 776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1259              		.loc 1 777 0
 1260 0706 3B68     		ldr	r3, [r7, #0]
 1261 0708 9B89     		ldrh	r3, [r3, #12]
 1262 070a 4FEA0313 		lsl	r3, r3, #4
 1263 070e 9AB2     		uxth	r2, r3
 1264 0710 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1265 0712 1343     		orrs	r3, r3, r2
 1266 0714 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1267              		.loc 1 780 0
 1268 0716 3B68     		ldr	r3, [r7, #0]
 1269 0718 5B88     		ldrh	r3, [r3, #2]
 1270 071a 4FEA0313 		lsl	r3, r3, #4
 1271 071e 9AB2     		uxth	r2, r3
 1272 0720 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1273 0722 1343     		orrs	r3, r3, r2
 1274 0724 FB81     		strh	r3, [r7, #14]	@ movhi
 781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1275              		.loc 1 782 0
 1276 0726 7A68     		ldr	r2, [r7, #4]
 1277 0728 4FF00003 		mov	r3, #0
 1278 072c C4F20103 		movt	r3, 16385
 1279 0730 9A42     		cmp	r2, r3
 1280 0732 06D0     		beq	.L47
 1281              		.loc 1 782 0 is_stmt 0 discriminator 1
 1282 0734 7A68     		ldr	r2, [r7, #4]
 1283 0736 4FF48063 		mov	r3, #1024
 1284 073a C4F20103 		movt	r3, 16385
 1285 073e 9A42     		cmp	r2, r3
 1286 0740 2FD1     		bne	.L48
 1287              	.L47:
 783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1288              		.loc 1 790 0 is_stmt 1
 1289 0742 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1290 0744 23F08003 		bic	r3, r3, #128
 1291 0748 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1292              		.loc 1 792 0
 1293 074a 3B68     		ldr	r3, [r7, #0]
 1294 074c DB89     		ldrh	r3, [r3, #14]
 1295 074e 4FEA0313 		lsl	r3, r3, #4
 1296 0752 9AB2     		uxth	r2, r3
 1297 0754 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1298 0756 1343     		orrs	r3, r3, r2
 1299 0758 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1300              		.loc 1 794 0
 1301 075a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1302 075c 23F04003 		bic	r3, r3, #64
 1303 0760 FB81     		strh	r3, [r7, #14]	@ movhi
 795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1304              		.loc 1 797 0
 1305 0762 3B68     		ldr	r3, [r7, #0]
 1306 0764 9B88     		ldrh	r3, [r3, #4]
 1307 0766 4FEA0313 		lsl	r3, r3, #4
 1308 076a 9AB2     		uxth	r2, r3
 1309 076c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1310 076e 1343     		orrs	r3, r3, r2
 1311 0770 FB81     		strh	r3, [r7, #14]	@ movhi
 798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1312              		.loc 1 799 0
 1313 0772 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1314 0774 23F48063 		bic	r3, r3, #1024
 1315 0778 BB81     		strh	r3, [r7, #12]	@ movhi
 800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1316              		.loc 1 800 0
 1317 077a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1318 077c 23F40063 		bic	r3, r3, #2048
 1319 0780 BB81     		strh	r3, [r7, #12]	@ movhi
 801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1320              		.loc 1 802 0
 1321 0782 3B68     		ldr	r3, [r7, #0]
 1322 0784 1B8A     		ldrh	r3, [r3, #16]
 1323 0786 4FEA8303 		lsl	r3, r3, #2
 1324 078a 9AB2     		uxth	r2, r3
 1325 078c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1326 078e 1343     		orrs	r3, r3, r2
 1327 0790 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1328              		.loc 1 804 0
 1329 0792 3B68     		ldr	r3, [r7, #0]
 1330 0794 5B8A     		ldrh	r3, [r3, #18]
 1331 0796 4FEA8303 		lsl	r3, r3, #2
 1332 079a 9AB2     		uxth	r2, r3
 1333 079c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1334 079e 1343     		orrs	r3, r3, r2
 1335 07a0 BB81     		strh	r3, [r7, #12]	@ movhi
 1336              	.L48:
 805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1337              		.loc 1 807 0
 1338 07a2 7B68     		ldr	r3, [r7, #4]
 1339 07a4 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1340 07a6 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1341              		.loc 1 810 0
 1342 07a8 7B68     		ldr	r3, [r7, #4]
 1343 07aa 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1344 07ac 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1345              		.loc 1 813 0
 1346 07ae 3B68     		ldr	r3, [r7, #0]
 1347 07b0 9A68     		ldr	r2, [r3, #8]
 1348 07b2 7B68     		ldr	r3, [r7, #4]
 1349 07b4 9A63     		str	r2, [r3, #56]
 814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 1350              		.loc 1 816 0
 1351 07b6 7B68     		ldr	r3, [r7, #4]
 1352 07b8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1353 07ba 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1354              		.loc 1 817 0
 1355 07bc 07F11407 		add	r7, r7, #20
 1356 07c0 BD46     		mov	sp, r7
 1357 07c2 80BC     		pop	{r7}
 1358 07c4 7047     		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE45:
 1362 07c6 00BF     		.align	2
 1363              		.global	TIM_OC3Init
 1364              		.thumb
 1365              		.thumb_func
 1367              	TIM_OC3Init:
 1368              	.LFB46:
 818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1369              		.loc 1 828 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 16
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 1374 07c8 80B4     		push	{r7}
 1375              	.LCFI51:
 1376              		.cfi_def_cfa_offset 4
 1377              		.cfi_offset 7, -4
 1378 07ca 85B0     		sub	sp, sp, #20
 1379              	.LCFI52:
 1380              		.cfi_def_cfa_offset 24
 1381 07cc 00AF     		add	r7, sp, #0
 1382              	.LCFI53:
 1383              		.cfi_def_cfa_register 7
 1384 07ce 7860     		str	r0, [r7, #4]
 1385 07d0 3960     		str	r1, [r7, #0]
 829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1386              		.loc 1 829 0
 1387 07d2 4FF00003 		mov	r3, #0
 1388 07d6 7B81     		strh	r3, [r7, #10]	@ movhi
 1389 07d8 4FF00003 		mov	r3, #0
 1390 07dc FB81     		strh	r3, [r7, #14]	@ movhi
 1391 07de 4FF00003 		mov	r3, #0
 1392 07e2 BB81     		strh	r3, [r7, #12]	@ movhi
 830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1393              		.loc 1 838 0
 1394 07e4 7B68     		ldr	r3, [r7, #4]
 1395 07e6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1396 07e8 9BB2     		uxth	r3, r3
 1397 07ea 23F48073 		bic	r3, r3, #256
 1398 07ee 9AB2     		uxth	r2, r3
 1399 07f0 7B68     		ldr	r3, [r7, #4]
 1400 07f2 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 1401              		.loc 1 841 0
 1402 07f4 7B68     		ldr	r3, [r7, #4]
 1403 07f6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1404 07f8 FB81     		strh	r3, [r7, #14]	@ movhi
 842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1405              		.loc 1 843 0
 1406 07fa 7B68     		ldr	r3, [r7, #4]
 1407 07fc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1408 07fe BB81     		strh	r3, [r7, #12]	@ movhi
 844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1409              		.loc 1 846 0
 1410 0800 7B68     		ldr	r3, [r7, #4]
 1411 0802 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1412 0804 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1413              		.loc 1 849 0
 1414 0806 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1415 0808 23F07003 		bic	r3, r3, #112
 1416 080c 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1417              		.loc 1 850 0
 1418 080e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1419 0810 23F00303 		bic	r3, r3, #3
 1420 0814 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1421              		.loc 1 852 0
 1422 0816 3B68     		ldr	r3, [r7, #0]
 1423 0818 1A88     		ldrh	r2, [r3, #0]
 1424 081a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1425 081c 1343     		orrs	r3, r3, r2
 1426 081e 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1427              		.loc 1 855 0
 1428 0820 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1429 0822 23F40073 		bic	r3, r3, #512
 1430 0826 FB81     		strh	r3, [r7, #14]	@ movhi
 856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1431              		.loc 1 857 0
 1432 0828 3B68     		ldr	r3, [r7, #0]
 1433 082a 9B89     		ldrh	r3, [r3, #12]
 1434 082c 4FEA0323 		lsl	r3, r3, #8
 1435 0830 9AB2     		uxth	r2, r3
 1436 0832 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1437 0834 1343     		orrs	r3, r3, r2
 1438 0836 FB81     		strh	r3, [r7, #14]	@ movhi
 858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1439              		.loc 1 860 0
 1440 0838 3B68     		ldr	r3, [r7, #0]
 1441 083a 5B88     		ldrh	r3, [r3, #2]
 1442 083c 4FEA0323 		lsl	r3, r3, #8
 1443 0840 9AB2     		uxth	r2, r3
 1444 0842 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1445 0844 1343     		orrs	r3, r3, r2
 1446 0846 FB81     		strh	r3, [r7, #14]	@ movhi
 861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1447              		.loc 1 862 0
 1448 0848 7A68     		ldr	r2, [r7, #4]
 1449 084a 4FF00003 		mov	r3, #0
 1450 084e C4F20103 		movt	r3, 16385
 1451 0852 9A42     		cmp	r2, r3
 1452 0854 06D0     		beq	.L50
 1453              		.loc 1 862 0 is_stmt 0 discriminator 1
 1454 0856 7A68     		ldr	r2, [r7, #4]
 1455 0858 4FF48063 		mov	r3, #1024
 1456 085c C4F20103 		movt	r3, 16385
 1457 0860 9A42     		cmp	r2, r3
 1458 0862 2FD1     		bne	.L51
 1459              	.L50:
 863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1460              		.loc 1 870 0 is_stmt 1
 1461 0864 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1462 0866 23F40063 		bic	r3, r3, #2048
 1463 086a FB81     		strh	r3, [r7, #14]	@ movhi
 871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1464              		.loc 1 872 0
 1465 086c 3B68     		ldr	r3, [r7, #0]
 1466 086e DB89     		ldrh	r3, [r3, #14]
 1467 0870 4FEA0323 		lsl	r3, r3, #8
 1468 0874 9AB2     		uxth	r2, r3
 1469 0876 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1470 0878 1343     		orrs	r3, r3, r2
 1471 087a FB81     		strh	r3, [r7, #14]	@ movhi
 873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1472              		.loc 1 874 0
 1473 087c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1474 087e 23F48063 		bic	r3, r3, #1024
 1475 0882 FB81     		strh	r3, [r7, #14]	@ movhi
 875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N State */
 877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1476              		.loc 1 877 0
 1477 0884 3B68     		ldr	r3, [r7, #0]
 1478 0886 9B88     		ldrh	r3, [r3, #4]
 1479 0888 4FEA0323 		lsl	r3, r3, #8
 1480 088c 9AB2     		uxth	r2, r3
 1481 088e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1482 0890 1343     		orrs	r3, r3, r2
 1483 0892 FB81     		strh	r3, [r7, #14]	@ movhi
 878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1484              		.loc 1 879 0
 1485 0894 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1486 0896 23F48053 		bic	r3, r3, #4096
 1487 089a BB81     		strh	r3, [r7, #12]	@ movhi
 880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1488              		.loc 1 880 0
 1489 089c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1490 089e 23F40053 		bic	r3, r3, #8192
 1491 08a2 BB81     		strh	r3, [r7, #12]	@ movhi
 881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1492              		.loc 1 882 0
 1493 08a4 3B68     		ldr	r3, [r7, #0]
 1494 08a6 1B8A     		ldrh	r3, [r3, #16]
 1495 08a8 4FEA0313 		lsl	r3, r3, #4
 1496 08ac 9AB2     		uxth	r2, r3
 1497 08ae BB89     		ldrh	r3, [r7, #12]	@ movhi
 1498 08b0 1343     		orrs	r3, r3, r2
 1499 08b2 BB81     		strh	r3, [r7, #12]	@ movhi
 883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1500              		.loc 1 884 0
 1501 08b4 3B68     		ldr	r3, [r7, #0]
 1502 08b6 5B8A     		ldrh	r3, [r3, #18]
 1503 08b8 4FEA0313 		lsl	r3, r3, #4
 1504 08bc 9AB2     		uxth	r2, r3
 1505 08be BB89     		ldrh	r3, [r7, #12]	@ movhi
 1506 08c0 1343     		orrs	r3, r3, r2
 1507 08c2 BB81     		strh	r3, [r7, #12]	@ movhi
 1508              	.L51:
 885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1509              		.loc 1 887 0
 1510 08c4 7B68     		ldr	r3, [r7, #4]
 1511 08c6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1512 08c8 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1513              		.loc 1 890 0
 1514 08ca 7B68     		ldr	r3, [r7, #4]
 1515 08cc 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1516 08ce 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1517              		.loc 1 893 0
 1518 08d0 3B68     		ldr	r3, [r7, #0]
 1519 08d2 9A68     		ldr	r2, [r3, #8]
 1520 08d4 7B68     		ldr	r3, [r7, #4]
 1521 08d6 DA63     		str	r2, [r3, #60]
 894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 1522              		.loc 1 896 0
 1523 08d8 7B68     		ldr	r3, [r7, #4]
 1524 08da FA89     		ldrh	r2, [r7, #14]	@ movhi
 1525 08dc 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1526              		.loc 1 897 0
 1527 08de 07F11407 		add	r7, r7, #20
 1528 08e2 BD46     		mov	sp, r7
 1529 08e4 80BC     		pop	{r7}
 1530 08e6 7047     		bx	lr
 1531              		.cfi_endproc
 1532              	.LFE46:
 1534              		.align	2
 1535              		.global	TIM_OC4Init
 1536              		.thumb
 1537              		.thumb_func
 1539              	TIM_OC4Init:
 1540              	.LFB47:
 898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1541              		.loc 1 908 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 16
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545              		@ link register save eliminated.
 1546 08e8 80B4     		push	{r7}
 1547              	.LCFI54:
 1548              		.cfi_def_cfa_offset 4
 1549              		.cfi_offset 7, -4
 1550 08ea 85B0     		sub	sp, sp, #20
 1551              	.LCFI55:
 1552              		.cfi_def_cfa_offset 24
 1553 08ec 00AF     		add	r7, sp, #0
 1554              	.LCFI56:
 1555              		.cfi_def_cfa_register 7
 1556 08ee 7860     		str	r0, [r7, #4]
 1557 08f0 3960     		str	r1, [r7, #0]
 909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1558              		.loc 1 909 0
 1559 08f2 4FF00003 		mov	r3, #0
 1560 08f6 BB81     		strh	r3, [r7, #12]	@ movhi
 1561 08f8 4FF00003 		mov	r3, #0
 1562 08fc 7B81     		strh	r3, [r7, #10]	@ movhi
 1563 08fe 4FF00003 		mov	r3, #0
 1564 0902 FB81     		strh	r3, [r7, #14]	@ movhi
 910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
 911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
 912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1565              		.loc 1 918 0
 1566 0904 7B68     		ldr	r3, [r7, #4]
 1567 0906 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1568 0908 9BB2     		uxth	r3, r3
 1569 090a 23F48053 		bic	r3, r3, #4096
 1570 090e 9AB2     		uxth	r2, r3
 1571 0910 7B68     		ldr	r3, [r7, #4]
 1572 0912 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 1573              		.loc 1 921 0
 1574 0914 7B68     		ldr	r3, [r7, #4]
 1575 0916 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1576 0918 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1577              		.loc 1 923 0
 1578 091a 7B68     		ldr	r3, [r7, #4]
 1579 091c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1580 091e FB81     		strh	r3, [r7, #14]	@ movhi
 924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1581              		.loc 1 926 0
 1582 0920 7B68     		ldr	r3, [r7, #4]
 1583 0922 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1584 0924 BB81     		strh	r3, [r7, #12]	@ movhi
 927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1585              		.loc 1 929 0
 1586 0926 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1587 0928 23F4E043 		bic	r3, r3, #28672
 1588 092c BB81     		strh	r3, [r7, #12]	@ movhi
 930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1589              		.loc 1 930 0
 1590 092e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1591 0930 23F44073 		bic	r3, r3, #768
 1592 0934 BB81     		strh	r3, [r7, #12]	@ movhi
 931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1593              		.loc 1 933 0
 1594 0936 3B68     		ldr	r3, [r7, #0]
 1595 0938 1B88     		ldrh	r3, [r3, #0]
 1596 093a 4FEA0323 		lsl	r3, r3, #8
 1597 093e 9AB2     		uxth	r2, r3
 1598 0940 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1599 0942 1343     		orrs	r3, r3, r2
 1600 0944 BB81     		strh	r3, [r7, #12]	@ movhi
 934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1601              		.loc 1 936 0
 1602 0946 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1603 0948 23F40053 		bic	r3, r3, #8192
 1604 094c 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1605              		.loc 1 938 0
 1606 094e 3B68     		ldr	r3, [r7, #0]
 1607 0950 9B89     		ldrh	r3, [r3, #12]
 1608 0952 4FEA0333 		lsl	r3, r3, #12
 1609 0956 9AB2     		uxth	r2, r3
 1610 0958 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1611 095a 1343     		orrs	r3, r3, r2
 1612 095c 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Output State */
 941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1613              		.loc 1 941 0
 1614 095e 3B68     		ldr	r3, [r7, #0]
 1615 0960 5B88     		ldrh	r3, [r3, #2]
 1616 0962 4FEA0333 		lsl	r3, r3, #12
 1617 0966 9AB2     		uxth	r2, r3
 1618 0968 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1619 096a 1343     		orrs	r3, r3, r2
 1620 096c 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1621              		.loc 1 943 0
 1622 096e 7A68     		ldr	r2, [r7, #4]
 1623 0970 4FF00003 		mov	r3, #0
 1624 0974 C4F20103 		movt	r3, 16385
 1625 0978 9A42     		cmp	r2, r3
 1626 097a 06D0     		beq	.L53
 1627              		.loc 1 943 0 is_stmt 0 discriminator 1
 1628 097c 7A68     		ldr	r2, [r7, #4]
 1629 097e 4FF48063 		mov	r3, #1024
 1630 0982 C4F20103 		movt	r3, 16385
 1631 0986 9A42     		cmp	r2, r3
 1632 0988 0BD1     		bne	.L54
 1633              	.L53:
 944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
 945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1634              		.loc 1 947 0 is_stmt 1
 1635 098a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1636 098c 23F48043 		bic	r3, r3, #16384
 1637 0990 FB81     		strh	r3, [r7, #14]	@ movhi
 948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1638              		.loc 1 949 0
 1639 0992 3B68     		ldr	r3, [r7, #0]
 1640 0994 1B8A     		ldrh	r3, [r3, #16]
 1641 0996 4FEA8313 		lsl	r3, r3, #6
 1642 099a 9AB2     		uxth	r2, r3
 1643 099c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1644 099e 1343     		orrs	r3, r3, r2
 1645 09a0 FB81     		strh	r3, [r7, #14]	@ movhi
 1646              	.L54:
 950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
 951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1647              		.loc 1 952 0
 1648 09a2 7B68     		ldr	r3, [r7, #4]
 1649 09a4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1650 09a6 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1651              		.loc 1 955 0
 1652 09a8 7B68     		ldr	r3, [r7, #4]
 1653 09aa BA89     		ldrh	r2, [r7, #12]	@ movhi
 1654 09ac 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
 957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1655              		.loc 1 958 0
 1656 09ae 3B68     		ldr	r3, [r7, #0]
 1657 09b0 9A68     		ldr	r2, [r3, #8]
 1658 09b2 7B68     		ldr	r3, [r7, #4]
 1659 09b4 1A64     		str	r2, [r3, #64]
 959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
 960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 1660              		.loc 1 961 0
 1661 09b6 7B68     		ldr	r3, [r7, #4]
 1662 09b8 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1663 09ba 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1664              		.loc 1 962 0
 1665 09bc 07F11407 		add	r7, r7, #20
 1666 09c0 BD46     		mov	sp, r7
 1667 09c2 80BC     		pop	{r7}
 1668 09c4 7047     		bx	lr
 1669              		.cfi_endproc
 1670              	.LFE47:
 1672 09c6 00BF     		.align	2
 1673              		.global	TIM_OCStructInit
 1674              		.thumb
 1675              		.thumb_func
 1677              	TIM_OCStructInit:
 1678              	.LFB48:
 963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         be initialized.
 968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
 969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
 970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1679              		.loc 1 971 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 8
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
 1684 09c8 80B4     		push	{r7}
 1685              	.LCFI57:
 1686              		.cfi_def_cfa_offset 4
 1687              		.cfi_offset 7, -4
 1688 09ca 83B0     		sub	sp, sp, #12
 1689              	.LCFI58:
 1690              		.cfi_def_cfa_offset 16
 1691 09cc 00AF     		add	r7, sp, #0
 1692              	.LCFI59:
 1693              		.cfi_def_cfa_register 7
 1694 09ce 7860     		str	r0, [r7, #4]
 972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
 973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1695              		.loc 1 973 0
 1696 09d0 7B68     		ldr	r3, [r7, #4]
 1697 09d2 4FF00002 		mov	r2, #0
 1698 09d6 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1699              		.loc 1 974 0
 1700 09d8 7B68     		ldr	r3, [r7, #4]
 1701 09da 4FF00002 		mov	r2, #0
 1702 09de 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1703              		.loc 1 975 0
 1704 09e0 7B68     		ldr	r3, [r7, #4]
 1705 09e2 4FF00002 		mov	r2, #0
 1706 09e6 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1707              		.loc 1 976 0
 1708 09e8 7B68     		ldr	r3, [r7, #4]
 1709 09ea 4FF00002 		mov	r2, #0
 1710 09ee 9A60     		str	r2, [r3, #8]
 977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1711              		.loc 1 977 0
 1712 09f0 7B68     		ldr	r3, [r7, #4]
 1713 09f2 4FF00002 		mov	r2, #0
 1714 09f6 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1715              		.loc 1 978 0
 1716 09f8 7B68     		ldr	r3, [r7, #4]
 1717 09fa 4FF00002 		mov	r2, #0
 1718 09fe DA81     		strh	r2, [r3, #14]	@ movhi
 979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1719              		.loc 1 979 0
 1720 0a00 7B68     		ldr	r3, [r7, #4]
 1721 0a02 4FF00002 		mov	r2, #0
 1722 0a06 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1723              		.loc 1 980 0
 1724 0a08 7B68     		ldr	r3, [r7, #4]
 1725 0a0a 4FF00002 		mov	r2, #0
 1726 0a0e 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1727              		.loc 1 981 0
 1728 0a10 07F10C07 		add	r7, r7, #12
 1729 0a14 BD46     		mov	sp, r7
 1730 0a16 80BC     		pop	{r7}
 1731 0a18 7047     		bx	lr
 1732              		.cfi_endproc
 1733              	.LFE48:
 1735 0a1a 00BF     		.align	2
 1736              		.global	TIM_SelectOCxM
 1737              		.thumb
 1738              		.thumb_func
 1740              	TIM_SelectOCxM:
 1741              	.LFB49:
 982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
 983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
 984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1742              		.loc 1 1007 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 16
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
 1747 0a1c 80B4     		push	{r7}
 1748              	.LCFI60:
 1749              		.cfi_def_cfa_offset 4
 1750              		.cfi_offset 7, -4
 1751 0a1e 85B0     		sub	sp, sp, #20
 1752              	.LCFI61:
 1753              		.cfi_def_cfa_offset 24
 1754 0a20 00AF     		add	r7, sp, #0
 1755              	.LCFI62:
 1756              		.cfi_def_cfa_register 7
 1757 0a22 7860     		str	r0, [r7, #4]
 1758 0a24 1346     		mov	r3, r2
 1759 0a26 0A46     		mov	r2, r1	@ movhi
 1760 0a28 7A80     		strh	r2, [r7, #2]	@ movhi
 1761 0a2a 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint32_t tmp = 0;
 1762              		.loc 1 1008 0
 1763 0a2c 4FF00003 		mov	r3, #0
 1764 0a30 FB60     		str	r3, [r7, #12]
1009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp1 = 0;
 1765              		.loc 1 1009 0
 1766 0a32 4FF00003 		mov	r3, #0
 1767 0a36 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint32_t) TIMx;
 1768              		.loc 1 1016 0
 1769 0a38 7B68     		ldr	r3, [r7, #4]
 1770 0a3a FB60     		str	r3, [r7, #12]
1017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp += CCMR_OFFSET;
 1771              		.loc 1 1017 0
 1772 0a3c FB68     		ldr	r3, [r7, #12]
 1773 0a3e 03F11803 		add	r3, r3, #24
 1774 0a42 FB60     		str	r3, [r7, #12]
1018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1775              		.loc 1 1019 0
 1776 0a44 7B88     		ldrh	r3, [r7, #2]
 1777 0a46 4FF00102 		mov	r2, #1
 1778 0a4a 02FA03F3 		lsl	r3, r2, r3
 1779 0a4e 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1780              		.loc 1 1022 0
 1781 0a50 7B68     		ldr	r3, [r7, #4]
 1782 0a52 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1783 0a54 9AB2     		uxth	r2, r3
 1784 0a56 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1785 0a58 6FEA0303 		mvn	r3, r3
 1786 0a5c 9BB2     		uxth	r3, r3
 1787 0a5e 1340     		ands	r3, r3, r2
 1788 0a60 9AB2     		uxth	r2, r3
 1789 0a62 7B68     		ldr	r3, [r7, #4]
 1790 0a64 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1791              		.loc 1 1024 0
 1792 0a66 7B88     		ldrh	r3, [r7, #2]
 1793 0a68 002B     		cmp	r3, #0
 1794 0a6a 02D0     		beq	.L57
 1795              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1796 0a6c 7B88     		ldrh	r3, [r7, #2]
 1797 0a6e 082B     		cmp	r3, #8
 1798 0a70 14D1     		bne	.L58
 1799              	.L57:
1025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmp += (TIM_Channel>>1);
 1800              		.loc 1 1026 0 is_stmt 1
 1801 0a72 7B88     		ldrh	r3, [r7, #2]
 1802 0a74 4FEA5303 		lsr	r3, r3, #1
 1803 0a78 9BB2     		uxth	r3, r3
 1804 0a7a FA68     		ldr	r2, [r7, #12]
 1805 0a7c D318     		adds	r3, r2, r3
 1806 0a7e FB60     		str	r3, [r7, #12]
1027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1807              		.loc 1 1029 0
 1808 0a80 FA68     		ldr	r2, [r7, #12]
 1809 0a82 FB68     		ldr	r3, [r7, #12]
 1810 0a84 1968     		ldr	r1, [r3, #0]
 1811 0a86 4FF68F73 		movw	r3, #65423
 1812 0a8a 0B40     		ands	r3, r3, r1
 1813 0a8c 1360     		str	r3, [r2, #0]
1030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1814              		.loc 1 1032 0
 1815 0a8e FB68     		ldr	r3, [r7, #12]
 1816 0a90 FA68     		ldr	r2, [r7, #12]
 1817 0a92 1168     		ldr	r1, [r2, #0]
 1818 0a94 3A88     		ldrh	r2, [r7, #0]
 1819 0a96 0A43     		orrs	r2, r2, r1
 1820 0a98 1A60     		str	r2, [r3, #0]
 1821 0a9a 19E0     		b	.L56
 1822              	.L58:
1033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1823              		.loc 1 1036 0
 1824 0a9c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1825 0a9e A3F10403 		sub	r3, r3, #4
 1826 0aa2 9BB2     		uxth	r3, r3
 1827 0aa4 4FEA5303 		lsr	r3, r3, #1
 1828 0aa8 9BB2     		uxth	r3, r3
 1829 0aaa FA68     		ldr	r2, [r7, #12]
 1830 0aac D318     		adds	r3, r2, r3
 1831 0aae FB60     		str	r3, [r7, #12]
1037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1832              		.loc 1 1039 0
 1833 0ab0 FA68     		ldr	r2, [r7, #12]
 1834 0ab2 FB68     		ldr	r3, [r7, #12]
 1835 0ab4 1968     		ldr	r1, [r3, #0]
 1836 0ab6 48F6FF73 		movw	r3, #36863
 1837 0aba 0B40     		ands	r3, r3, r1
 1838 0abc 1360     		str	r3, [r2, #0]
1040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
1041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1839              		.loc 1 1042 0
 1840 0abe FB68     		ldr	r3, [r7, #12]
 1841 0ac0 FA68     		ldr	r2, [r7, #12]
 1842 0ac2 1168     		ldr	r1, [r2, #0]
 1843 0ac4 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1844 0ac6 4FEA0222 		lsl	r2, r2, #8
 1845 0aca 92B2     		uxth	r2, r2
 1846 0acc 0A43     		orrs	r2, r2, r1
 1847 0ace 1A60     		str	r2, [r3, #0]
 1848              	.L56:
1043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1849              		.loc 1 1044 0
 1850 0ad0 07F11407 		add	r7, r7, #20
 1851 0ad4 BD46     		mov	sp, r7
 1852 0ad6 80BC     		pop	{r7}
 1853 0ad8 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE49:
 1857 0ada 00BF     		.align	2
 1858              		.global	TIM_SetCompare1
 1859              		.thumb
 1860              		.thumb_func
 1862              	TIM_SetCompare1:
 1863              	.LFB50:
1045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1864              		.loc 1 1053 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 8
 1867              		@ frame_needed = 1, uses_anonymous_args = 0
 1868              		@ link register save eliminated.
 1869 0adc 80B4     		push	{r7}
 1870              	.LCFI63:
 1871              		.cfi_def_cfa_offset 4
 1872              		.cfi_offset 7, -4
 1873 0ade 83B0     		sub	sp, sp, #12
 1874              	.LCFI64:
 1875              		.cfi_def_cfa_offset 16
 1876 0ae0 00AF     		add	r7, sp, #0
 1877              	.LCFI65:
 1878              		.cfi_def_cfa_register 7
 1879 0ae2 7860     		str	r0, [r7, #4]
 1880 0ae4 3960     		str	r1, [r7, #0]
1054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR1 = Compare1;
 1881              		.loc 1 1058 0
 1882 0ae6 7B68     		ldr	r3, [r7, #4]
 1883 0ae8 3A68     		ldr	r2, [r7, #0]
 1884 0aea 5A63     		str	r2, [r3, #52]
1059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1885              		.loc 1 1059 0
 1886 0aec 07F10C07 		add	r7, r7, #12
 1887 0af0 BD46     		mov	sp, r7
 1888 0af2 80BC     		pop	{r7}
 1889 0af4 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE50:
 1893 0af6 00BF     		.align	2
 1894              		.global	TIM_SetCompare2
 1895              		.thumb
 1896              		.thumb_func
 1898              	TIM_SetCompare2:
 1899              	.LFB51:
1060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1900              		.loc 1 1069 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 8
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905 0af8 80B4     		push	{r7}
 1906              	.LCFI66:
 1907              		.cfi_def_cfa_offset 4
 1908              		.cfi_offset 7, -4
 1909 0afa 83B0     		sub	sp, sp, #12
 1910              	.LCFI67:
 1911              		.cfi_def_cfa_offset 16
 1912 0afc 00AF     		add	r7, sp, #0
 1913              	.LCFI68:
 1914              		.cfi_def_cfa_register 7
 1915 0afe 7860     		str	r0, [r7, #4]
 1916 0b00 3960     		str	r1, [r7, #0]
1070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR2 = Compare2;
 1917              		.loc 1 1074 0
 1918 0b02 7B68     		ldr	r3, [r7, #4]
 1919 0b04 3A68     		ldr	r2, [r7, #0]
 1920 0b06 9A63     		str	r2, [r3, #56]
1075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1921              		.loc 1 1075 0
 1922 0b08 07F10C07 		add	r7, r7, #12
 1923 0b0c BD46     		mov	sp, r7
 1924 0b0e 80BC     		pop	{r7}
 1925 0b10 7047     		bx	lr
 1926              		.cfi_endproc
 1927              	.LFE51:
 1929 0b12 00BF     		.align	2
 1930              		.global	TIM_SetCompare3
 1931              		.thumb
 1932              		.thumb_func
 1934              	TIM_SetCompare3:
 1935              	.LFB52:
1076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1936              		.loc 1 1084 0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 8
 1939              		@ frame_needed = 1, uses_anonymous_args = 0
 1940              		@ link register save eliminated.
 1941 0b14 80B4     		push	{r7}
 1942              	.LCFI69:
 1943              		.cfi_def_cfa_offset 4
 1944              		.cfi_offset 7, -4
 1945 0b16 83B0     		sub	sp, sp, #12
 1946              	.LCFI70:
 1947              		.cfi_def_cfa_offset 16
 1948 0b18 00AF     		add	r7, sp, #0
 1949              	.LCFI71:
 1950              		.cfi_def_cfa_register 7
 1951 0b1a 7860     		str	r0, [r7, #4]
 1952 0b1c 3960     		str	r1, [r7, #0]
1085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR3 = Compare3;
 1953              		.loc 1 1089 0
 1954 0b1e 7B68     		ldr	r3, [r7, #4]
 1955 0b20 3A68     		ldr	r2, [r7, #0]
 1956 0b22 DA63     		str	r2, [r3, #60]
1090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1957              		.loc 1 1090 0
 1958 0b24 07F10C07 		add	r7, r7, #12
 1959 0b28 BD46     		mov	sp, r7
 1960 0b2a 80BC     		pop	{r7}
 1961 0b2c 7047     		bx	lr
 1962              		.cfi_endproc
 1963              	.LFE52:
 1965 0b2e 00BF     		.align	2
 1966              		.global	TIM_SetCompare4
 1967              		.thumb
 1968              		.thumb_func
 1970              	TIM_SetCompare4:
 1971              	.LFB53:
1091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 1972              		.loc 1 1099 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 8
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 1977 0b30 80B4     		push	{r7}
 1978              	.LCFI72:
 1979              		.cfi_def_cfa_offset 4
 1980              		.cfi_offset 7, -4
 1981 0b32 83B0     		sub	sp, sp, #12
 1982              	.LCFI73:
 1983              		.cfi_def_cfa_offset 16
 1984 0b34 00AF     		add	r7, sp, #0
 1985              	.LCFI74:
 1986              		.cfi_def_cfa_register 7
 1987 0b36 7860     		str	r0, [r7, #4]
 1988 0b38 3960     		str	r1, [r7, #0]
1100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCR4 = Compare4;
 1989              		.loc 1 1104 0
 1990 0b3a 7B68     		ldr	r3, [r7, #4]
 1991 0b3c 3A68     		ldr	r2, [r7, #0]
 1992 0b3e 1A64     		str	r2, [r3, #64]
1105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 1993              		.loc 1 1105 0
 1994 0b40 07F10C07 		add	r7, r7, #12
 1995 0b44 BD46     		mov	sp, r7
 1996 0b46 80BC     		pop	{r7}
 1997 0b48 7047     		bx	lr
 1998              		.cfi_endproc
 1999              	.LFE53:
 2001 0b4a 00BF     		.align	2
 2002              		.global	TIM_ForcedOC1Config
 2003              		.thumb
 2004              		.thumb_func
 2006              	TIM_ForcedOC1Config:
 2007              	.LFB54:
1106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2008              		.loc 1 1117 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 16
 2011              		@ frame_needed = 1, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013 0b4c 80B4     		push	{r7}
 2014              	.LCFI75:
 2015              		.cfi_def_cfa_offset 4
 2016              		.cfi_offset 7, -4
 2017 0b4e 85B0     		sub	sp, sp, #20
 2018              	.LCFI76:
 2019              		.cfi_def_cfa_offset 24
 2020 0b50 00AF     		add	r7, sp, #0
 2021              	.LCFI77:
 2022              		.cfi_def_cfa_register 7
 2023 0b52 7860     		str	r0, [r7, #4]
 2024 0b54 0B46     		mov	r3, r1
 2025 0b56 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2026              		.loc 1 1118 0
 2027 0b58 4FF00003 		mov	r3, #0
 2028 0b5c FB81     		strh	r3, [r7, #14]	@ movhi
1119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2029              		.loc 1 1123 0
 2030 0b5e 7B68     		ldr	r3, [r7, #4]
 2031 0b60 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2032 0b62 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2033              		.loc 1 1126 0
 2034 0b64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2035 0b66 23F07003 		bic	r3, r3, #112
 2036 0b6a FB81     		strh	r3, [r7, #14]	@ movhi
1127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2037              		.loc 1 1129 0
 2038 0b6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2039 0b6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2040 0b70 1343     		orrs	r3, r3, r2
 2041 0b72 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2042              		.loc 1 1132 0
 2043 0b74 7B68     		ldr	r3, [r7, #4]
 2044 0b76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2045 0b78 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2046              		.loc 1 1133 0
 2047 0b7a 07F11407 		add	r7, r7, #20
 2048 0b7e BD46     		mov	sp, r7
 2049 0b80 80BC     		pop	{r7}
 2050 0b82 7047     		bx	lr
 2051              		.cfi_endproc
 2052              	.LFE54:
 2054              		.align	2
 2055              		.global	TIM_ForcedOC2Config
 2056              		.thumb
 2057              		.thumb_func
 2059              	TIM_ForcedOC2Config:
 2060              	.LFB55:
1134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2061              		.loc 1 1146 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 16
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0b84 80B4     		push	{r7}
 2067              	.LCFI78:
 2068              		.cfi_def_cfa_offset 4
 2069              		.cfi_offset 7, -4
 2070 0b86 85B0     		sub	sp, sp, #20
 2071              	.LCFI79:
 2072              		.cfi_def_cfa_offset 24
 2073 0b88 00AF     		add	r7, sp, #0
 2074              	.LCFI80:
 2075              		.cfi_def_cfa_register 7
 2076 0b8a 7860     		str	r0, [r7, #4]
 2077 0b8c 0B46     		mov	r3, r1
 2078 0b8e 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2079              		.loc 1 1147 0
 2080 0b90 4FF00003 		mov	r3, #0
 2081 0b94 FB81     		strh	r3, [r7, #14]	@ movhi
1148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2082              		.loc 1 1152 0
 2083 0b96 7B68     		ldr	r3, [r7, #4]
 2084 0b98 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2085 0b9a FB81     		strh	r3, [r7, #14]	@ movhi
1153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2086              		.loc 1 1155 0
 2087 0b9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2088 0b9e 23F4E043 		bic	r3, r3, #28672
 2089 0ba2 FB81     		strh	r3, [r7, #14]	@ movhi
1156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2090              		.loc 1 1158 0
 2091 0ba4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2092 0ba6 4FEA0323 		lsl	r3, r3, #8
 2093 0baa 9AB2     		uxth	r2, r3
 2094 0bac FB89     		ldrh	r3, [r7, #14]	@ movhi
 2095 0bae 1343     		orrs	r3, r3, r2
 2096 0bb0 FB81     		strh	r3, [r7, #14]	@ movhi
1159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2097              		.loc 1 1161 0
 2098 0bb2 7B68     		ldr	r3, [r7, #4]
 2099 0bb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2100 0bb6 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2101              		.loc 1 1162 0
 2102 0bb8 07F11407 		add	r7, r7, #20
 2103 0bbc BD46     		mov	sp, r7
 2104 0bbe 80BC     		pop	{r7}
 2105 0bc0 7047     		bx	lr
 2106              		.cfi_endproc
 2107              	.LFE55:
 2109 0bc2 00BF     		.align	2
 2110              		.global	TIM_ForcedOC3Config
 2111              		.thumb
 2112              		.thumb_func
 2114              	TIM_ForcedOC3Config:
 2115              	.LFB56:
1163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2116              		.loc 1 1174 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0bc4 80B4     		push	{r7}
 2122              	.LCFI81:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0bc6 85B0     		sub	sp, sp, #20
 2126              	.LCFI82:
 2127              		.cfi_def_cfa_offset 24
 2128 0bc8 00AF     		add	r7, sp, #0
 2129              	.LCFI83:
 2130              		.cfi_def_cfa_register 7
 2131 0bca 7860     		str	r0, [r7, #4]
 2132 0bcc 0B46     		mov	r3, r1
 2133 0bce 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2134              		.loc 1 1175 0
 2135 0bd0 4FF00003 		mov	r3, #0
 2136 0bd4 FB81     		strh	r3, [r7, #14]	@ movhi
1176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2137              		.loc 1 1181 0
 2138 0bd6 7B68     		ldr	r3, [r7, #4]
 2139 0bd8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2140 0bda FB81     		strh	r3, [r7, #14]	@ movhi
1182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2141              		.loc 1 1184 0
 2142 0bdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2143 0bde 23F07003 		bic	r3, r3, #112
 2144 0be2 FB81     		strh	r3, [r7, #14]	@ movhi
1185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2145              		.loc 1 1187 0
 2146 0be4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2147 0be6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2148 0be8 1343     		orrs	r3, r3, r2
 2149 0bea FB81     		strh	r3, [r7, #14]	@ movhi
1188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2150              		.loc 1 1190 0
 2151 0bec 7B68     		ldr	r3, [r7, #4]
 2152 0bee FA89     		ldrh	r2, [r7, #14]	@ movhi
 2153 0bf0 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2154              		.loc 1 1191 0
 2155 0bf2 07F11407 		add	r7, r7, #20
 2156 0bf6 BD46     		mov	sp, r7
 2157 0bf8 80BC     		pop	{r7}
 2158 0bfa 7047     		bx	lr
 2159              		.cfi_endproc
 2160              	.LFE56:
 2162              		.align	2
 2163              		.global	TIM_ForcedOC4Config
 2164              		.thumb
 2165              		.thumb_func
 2167              	TIM_ForcedOC4Config:
 2168              	.LFB57:
1192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2169              		.loc 1 1203 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 16
 2172              		@ frame_needed = 1, uses_anonymous_args = 0
 2173              		@ link register save eliminated.
 2174 0bfc 80B4     		push	{r7}
 2175              	.LCFI84:
 2176              		.cfi_def_cfa_offset 4
 2177              		.cfi_offset 7, -4
 2178 0bfe 85B0     		sub	sp, sp, #20
 2179              	.LCFI85:
 2180              		.cfi_def_cfa_offset 24
 2181 0c00 00AF     		add	r7, sp, #0
 2182              	.LCFI86:
 2183              		.cfi_def_cfa_register 7
 2184 0c02 7860     		str	r0, [r7, #4]
 2185 0c04 0B46     		mov	r3, r1
 2186 0c06 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2187              		.loc 1 1204 0
 2188 0c08 4FF00003 		mov	r3, #0
 2189 0c0c FB81     		strh	r3, [r7, #14]	@ movhi
1205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2190              		.loc 1 1209 0
 2191 0c0e 7B68     		ldr	r3, [r7, #4]
 2192 0c10 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2193 0c12 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2194              		.loc 1 1212 0
 2195 0c14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2196 0c16 23F4E043 		bic	r3, r3, #28672
 2197 0c1a FB81     		strh	r3, [r7, #14]	@ movhi
1213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2198              		.loc 1 1215 0
 2199 0c1c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2200 0c1e 4FEA0323 		lsl	r3, r3, #8
 2201 0c22 9AB2     		uxth	r2, r3
 2202 0c24 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2203 0c26 1343     		orrs	r3, r3, r2
 2204 0c28 FB81     		strh	r3, [r7, #14]	@ movhi
1216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2205              		.loc 1 1218 0
 2206 0c2a 7B68     		ldr	r3, [r7, #4]
 2207 0c2c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2208 0c2e 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2209              		.loc 1 1219 0
 2210 0c30 07F11407 		add	r7, r7, #20
 2211 0c34 BD46     		mov	sp, r7
 2212 0c36 80BC     		pop	{r7}
 2213 0c38 7047     		bx	lr
 2214              		.cfi_endproc
 2215              	.LFE57:
 2217 0c3a 00BF     		.align	2
 2218              		.global	TIM_OC1PreloadConfig
 2219              		.thumb
 2220              		.thumb_func
 2222              	TIM_OC1PreloadConfig:
 2223              	.LFB58:
1220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2224              		.loc 1 1231 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 16
 2227              		@ frame_needed = 1, uses_anonymous_args = 0
 2228              		@ link register save eliminated.
 2229 0c3c 80B4     		push	{r7}
 2230              	.LCFI87:
 2231              		.cfi_def_cfa_offset 4
 2232              		.cfi_offset 7, -4
 2233 0c3e 85B0     		sub	sp, sp, #20
 2234              	.LCFI88:
 2235              		.cfi_def_cfa_offset 24
 2236 0c40 00AF     		add	r7, sp, #0
 2237              	.LCFI89:
 2238              		.cfi_def_cfa_register 7
 2239 0c42 7860     		str	r0, [r7, #4]
 2240 0c44 0B46     		mov	r3, r1
 2241 0c46 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2242              		.loc 1 1232 0
 2243 0c48 4FF00003 		mov	r3, #0
 2244 0c4c FB81     		strh	r3, [r7, #14]	@ movhi
1233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2245              		.loc 1 1238 0
 2246 0c4e 7B68     		ldr	r3, [r7, #4]
 2247 0c50 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2248 0c52 FB81     		strh	r3, [r7, #14]	@ movhi
1239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2249              		.loc 1 1241 0
 2250 0c54 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2251 0c56 23F00803 		bic	r3, r3, #8
 2252 0c5a FB81     		strh	r3, [r7, #14]	@ movhi
1242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2253              		.loc 1 1244 0
 2254 0c5c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2255 0c5e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2256 0c60 1343     		orrs	r3, r3, r2
 2257 0c62 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2258              		.loc 1 1247 0
 2259 0c64 7B68     		ldr	r3, [r7, #4]
 2260 0c66 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2261 0c68 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2262              		.loc 1 1248 0
 2263 0c6a 07F11407 		add	r7, r7, #20
 2264 0c6e BD46     		mov	sp, r7
 2265 0c70 80BC     		pop	{r7}
 2266 0c72 7047     		bx	lr
 2267              		.cfi_endproc
 2268              	.LFE58:
 2270              		.align	2
 2271              		.global	TIM_OC2PreloadConfig
 2272              		.thumb
 2273              		.thumb_func
 2275              	TIM_OC2PreloadConfig:
 2276              	.LFB59:
1249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2277              		.loc 1 1261 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 16
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281              		@ link register save eliminated.
 2282 0c74 80B4     		push	{r7}
 2283              	.LCFI90:
 2284              		.cfi_def_cfa_offset 4
 2285              		.cfi_offset 7, -4
 2286 0c76 85B0     		sub	sp, sp, #20
 2287              	.LCFI91:
 2288              		.cfi_def_cfa_offset 24
 2289 0c78 00AF     		add	r7, sp, #0
 2290              	.LCFI92:
 2291              		.cfi_def_cfa_register 7
 2292 0c7a 7860     		str	r0, [r7, #4]
 2293 0c7c 0B46     		mov	r3, r1
 2294 0c7e 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2295              		.loc 1 1262 0
 2296 0c80 4FF00003 		mov	r3, #0
 2297 0c84 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2298              		.loc 1 1268 0
 2299 0c86 7B68     		ldr	r3, [r7, #4]
 2300 0c88 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2301 0c8a FB81     		strh	r3, [r7, #14]	@ movhi
1269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2302              		.loc 1 1271 0
 2303 0c8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2304 0c8e 23F40063 		bic	r3, r3, #2048
 2305 0c92 FB81     		strh	r3, [r7, #14]	@ movhi
1272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2306              		.loc 1 1274 0
 2307 0c94 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2308 0c96 4FEA0323 		lsl	r3, r3, #8
 2309 0c9a 9AB2     		uxth	r2, r3
 2310 0c9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2311 0c9e 1343     		orrs	r3, r3, r2
 2312 0ca0 FB81     		strh	r3, [r7, #14]	@ movhi
1275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2313              		.loc 1 1277 0
 2314 0ca2 7B68     		ldr	r3, [r7, #4]
 2315 0ca4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2316 0ca6 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2317              		.loc 1 1278 0
 2318 0ca8 07F11407 		add	r7, r7, #20
 2319 0cac BD46     		mov	sp, r7
 2320 0cae 80BC     		pop	{r7}
 2321 0cb0 7047     		bx	lr
 2322              		.cfi_endproc
 2323              	.LFE59:
 2325 0cb2 00BF     		.align	2
 2326              		.global	TIM_OC3PreloadConfig
 2327              		.thumb
 2328              		.thumb_func
 2330              	TIM_OC3PreloadConfig:
 2331              	.LFB60:
1279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2332              		.loc 1 1290 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 16
 2335              		@ frame_needed = 1, uses_anonymous_args = 0
 2336              		@ link register save eliminated.
 2337 0cb4 80B4     		push	{r7}
 2338              	.LCFI93:
 2339              		.cfi_def_cfa_offset 4
 2340              		.cfi_offset 7, -4
 2341 0cb6 85B0     		sub	sp, sp, #20
 2342              	.LCFI94:
 2343              		.cfi_def_cfa_offset 24
 2344 0cb8 00AF     		add	r7, sp, #0
 2345              	.LCFI95:
 2346              		.cfi_def_cfa_register 7
 2347 0cba 7860     		str	r0, [r7, #4]
 2348 0cbc 0B46     		mov	r3, r1
 2349 0cbe 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2350              		.loc 1 1291 0
 2351 0cc0 4FF00003 		mov	r3, #0
 2352 0cc4 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2353              		.loc 1 1297 0
 2354 0cc6 7B68     		ldr	r3, [r7, #4]
 2355 0cc8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2356 0cca FB81     		strh	r3, [r7, #14]	@ movhi
1298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2357              		.loc 1 1300 0
 2358 0ccc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2359 0cce 23F00803 		bic	r3, r3, #8
 2360 0cd2 FB81     		strh	r3, [r7, #14]	@ movhi
1301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2361              		.loc 1 1303 0
 2362 0cd4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2363 0cd6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2364 0cd8 1343     		orrs	r3, r3, r2
 2365 0cda FB81     		strh	r3, [r7, #14]	@ movhi
1304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2366              		.loc 1 1306 0
 2367 0cdc 7B68     		ldr	r3, [r7, #4]
 2368 0cde FA89     		ldrh	r2, [r7, #14]	@ movhi
 2369 0ce0 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2370              		.loc 1 1307 0
 2371 0ce2 07F11407 		add	r7, r7, #20
 2372 0ce6 BD46     		mov	sp, r7
 2373 0ce8 80BC     		pop	{r7}
 2374 0cea 7047     		bx	lr
 2375              		.cfi_endproc
 2376              	.LFE60:
 2378              		.align	2
 2379              		.global	TIM_OC4PreloadConfig
 2380              		.thumb
 2381              		.thumb_func
 2383              	TIM_OC4PreloadConfig:
 2384              	.LFB61:
1308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2385              		.loc 1 1319 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 16
 2388              		@ frame_needed = 1, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390 0cec 80B4     		push	{r7}
 2391              	.LCFI96:
 2392              		.cfi_def_cfa_offset 4
 2393              		.cfi_offset 7, -4
 2394 0cee 85B0     		sub	sp, sp, #20
 2395              	.LCFI97:
 2396              		.cfi_def_cfa_offset 24
 2397 0cf0 00AF     		add	r7, sp, #0
 2398              	.LCFI98:
 2399              		.cfi_def_cfa_register 7
 2400 0cf2 7860     		str	r0, [r7, #4]
 2401 0cf4 0B46     		mov	r3, r1
 2402 0cf6 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2403              		.loc 1 1320 0
 2404 0cf8 4FF00003 		mov	r3, #0
 2405 0cfc FB81     		strh	r3, [r7, #14]	@ movhi
1321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2406              		.loc 1 1326 0
 2407 0cfe 7B68     		ldr	r3, [r7, #4]
 2408 0d00 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2409 0d02 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2410              		.loc 1 1329 0
 2411 0d04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2412 0d06 23F40063 		bic	r3, r3, #2048
 2413 0d0a FB81     		strh	r3, [r7, #14]	@ movhi
1330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2414              		.loc 1 1332 0
 2415 0d0c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2416 0d0e 4FEA0323 		lsl	r3, r3, #8
 2417 0d12 9AB2     		uxth	r2, r3
 2418 0d14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2419 0d16 1343     		orrs	r3, r3, r2
 2420 0d18 FB81     		strh	r3, [r7, #14]	@ movhi
1333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2421              		.loc 1 1335 0
 2422 0d1a 7B68     		ldr	r3, [r7, #4]
 2423 0d1c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2424 0d1e 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2425              		.loc 1 1336 0
 2426 0d20 07F11407 		add	r7, r7, #20
 2427 0d24 BD46     		mov	sp, r7
 2428 0d26 80BC     		pop	{r7}
 2429 0d28 7047     		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE61:
 2433 0d2a 00BF     		.align	2
 2434              		.global	TIM_OC1FastConfig
 2435              		.thumb
 2436              		.thumb_func
 2438              	TIM_OC1FastConfig:
 2439              	.LFB62:
1337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2440              		.loc 1 1348 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 16
 2443              		@ frame_needed = 1, uses_anonymous_args = 0
 2444              		@ link register save eliminated.
 2445 0d2c 80B4     		push	{r7}
 2446              	.LCFI99:
 2447              		.cfi_def_cfa_offset 4
 2448              		.cfi_offset 7, -4
 2449 0d2e 85B0     		sub	sp, sp, #20
 2450              	.LCFI100:
 2451              		.cfi_def_cfa_offset 24
 2452 0d30 00AF     		add	r7, sp, #0
 2453              	.LCFI101:
 2454              		.cfi_def_cfa_register 7
 2455 0d32 7860     		str	r0, [r7, #4]
 2456 0d34 0B46     		mov	r3, r1
 2457 0d36 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2458              		.loc 1 1349 0
 2459 0d38 4FF00003 		mov	r3, #0
 2460 0d3c FB81     		strh	r3, [r7, #14]	@ movhi
1350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2461              		.loc 1 1356 0
 2462 0d3e 7B68     		ldr	r3, [r7, #4]
 2463 0d40 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2464 0d42 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2465              		.loc 1 1359 0
 2466 0d44 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2467 0d46 23F00403 		bic	r3, r3, #4
 2468 0d4a FB81     		strh	r3, [r7, #14]	@ movhi
1360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2469              		.loc 1 1362 0
 2470 0d4c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2471 0d4e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2472 0d50 1343     		orrs	r3, r3, r2
 2473 0d52 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2474              		.loc 1 1365 0
 2475 0d54 7B68     		ldr	r3, [r7, #4]
 2476 0d56 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2477 0d58 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2478              		.loc 1 1366 0
 2479 0d5a 07F11407 		add	r7, r7, #20
 2480 0d5e BD46     		mov	sp, r7
 2481 0d60 80BC     		pop	{r7}
 2482 0d62 7047     		bx	lr
 2483              		.cfi_endproc
 2484              	.LFE62:
 2486              		.align	2
 2487              		.global	TIM_OC2FastConfig
 2488              		.thumb
 2489              		.thumb_func
 2491              	TIM_OC2FastConfig:
 2492              	.LFB63:
1367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2493              		.loc 1 1379 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 16
 2496              		@ frame_needed = 1, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498 0d64 80B4     		push	{r7}
 2499              	.LCFI102:
 2500              		.cfi_def_cfa_offset 4
 2501              		.cfi_offset 7, -4
 2502 0d66 85B0     		sub	sp, sp, #20
 2503              	.LCFI103:
 2504              		.cfi_def_cfa_offset 24
 2505 0d68 00AF     		add	r7, sp, #0
 2506              	.LCFI104:
 2507              		.cfi_def_cfa_register 7
 2508 0d6a 7860     		str	r0, [r7, #4]
 2509 0d6c 0B46     		mov	r3, r1
 2510 0d6e 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2511              		.loc 1 1380 0
 2512 0d70 4FF00003 		mov	r3, #0
 2513 0d74 FB81     		strh	r3, [r7, #14]	@ movhi
1381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2514              		.loc 1 1387 0
 2515 0d76 7B68     		ldr	r3, [r7, #4]
 2516 0d78 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2517 0d7a FB81     		strh	r3, [r7, #14]	@ movhi
1388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2518              		.loc 1 1390 0
 2519 0d7c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2520 0d7e 23F48063 		bic	r3, r3, #1024
 2521 0d82 FB81     		strh	r3, [r7, #14]	@ movhi
1391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2522              		.loc 1 1393 0
 2523 0d84 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2524 0d86 4FEA0323 		lsl	r3, r3, #8
 2525 0d8a 9AB2     		uxth	r2, r3
 2526 0d8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2527 0d8e 1343     		orrs	r3, r3, r2
 2528 0d90 FB81     		strh	r3, [r7, #14]	@ movhi
1394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2529              		.loc 1 1396 0
 2530 0d92 7B68     		ldr	r3, [r7, #4]
 2531 0d94 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2532 0d96 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2533              		.loc 1 1397 0
 2534 0d98 07F11407 		add	r7, r7, #20
 2535 0d9c BD46     		mov	sp, r7
 2536 0d9e 80BC     		pop	{r7}
 2537 0da0 7047     		bx	lr
 2538              		.cfi_endproc
 2539              	.LFE63:
 2541 0da2 00BF     		.align	2
 2542              		.global	TIM_OC3FastConfig
 2543              		.thumb
 2544              		.thumb_func
 2546              	TIM_OC3FastConfig:
 2547              	.LFB64:
1398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2548              		.loc 1 1409 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 16
 2551              		@ frame_needed = 1, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 2553 0da4 80B4     		push	{r7}
 2554              	.LCFI105:
 2555              		.cfi_def_cfa_offset 4
 2556              		.cfi_offset 7, -4
 2557 0da6 85B0     		sub	sp, sp, #20
 2558              	.LCFI106:
 2559              		.cfi_def_cfa_offset 24
 2560 0da8 00AF     		add	r7, sp, #0
 2561              	.LCFI107:
 2562              		.cfi_def_cfa_register 7
 2563 0daa 7860     		str	r0, [r7, #4]
 2564 0dac 0B46     		mov	r3, r1
 2565 0dae 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2566              		.loc 1 1410 0
 2567 0db0 4FF00003 		mov	r3, #0
 2568 0db4 FB81     		strh	r3, [r7, #14]	@ movhi
1411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2569              		.loc 1 1417 0
 2570 0db6 7B68     		ldr	r3, [r7, #4]
 2571 0db8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2572 0dba FB81     		strh	r3, [r7, #14]	@ movhi
1418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2573              		.loc 1 1420 0
 2574 0dbc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2575 0dbe 23F00403 		bic	r3, r3, #4
 2576 0dc2 FB81     		strh	r3, [r7, #14]	@ movhi
1421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2577              		.loc 1 1423 0
 2578 0dc4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2579 0dc6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2580 0dc8 1343     		orrs	r3, r3, r2
 2581 0dca FB81     		strh	r3, [r7, #14]	@ movhi
1424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2582              		.loc 1 1426 0
 2583 0dcc 7B68     		ldr	r3, [r7, #4]
 2584 0dce FA89     		ldrh	r2, [r7, #14]	@ movhi
 2585 0dd0 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2586              		.loc 1 1427 0
 2587 0dd2 07F11407 		add	r7, r7, #20
 2588 0dd6 BD46     		mov	sp, r7
 2589 0dd8 80BC     		pop	{r7}
 2590 0dda 7047     		bx	lr
 2591              		.cfi_endproc
 2592              	.LFE64:
 2594              		.align	2
 2595              		.global	TIM_OC4FastConfig
 2596              		.thumb
 2597              		.thumb_func
 2599              	TIM_OC4FastConfig:
 2600              	.LFB65:
1428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2601              		.loc 1 1439 0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 16
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605              		@ link register save eliminated.
 2606 0ddc 80B4     		push	{r7}
 2607              	.LCFI108:
 2608              		.cfi_def_cfa_offset 4
 2609              		.cfi_offset 7, -4
 2610 0dde 85B0     		sub	sp, sp, #20
 2611              	.LCFI109:
 2612              		.cfi_def_cfa_offset 24
 2613 0de0 00AF     		add	r7, sp, #0
 2614              	.LCFI110:
 2615              		.cfi_def_cfa_register 7
 2616 0de2 7860     		str	r0, [r7, #4]
 2617 0de4 0B46     		mov	r3, r1
 2618 0de6 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2619              		.loc 1 1440 0
 2620 0de8 4FF00003 		mov	r3, #0
 2621 0dec FB81     		strh	r3, [r7, #14]	@ movhi
1441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2622              		.loc 1 1447 0
 2623 0dee 7B68     		ldr	r3, [r7, #4]
 2624 0df0 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2625 0df2 FB81     		strh	r3, [r7, #14]	@ movhi
1448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2626              		.loc 1 1450 0
 2627 0df4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2628 0df6 23F48063 		bic	r3, r3, #1024
 2629 0dfa FB81     		strh	r3, [r7, #14]	@ movhi
1451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2630              		.loc 1 1453 0
 2631 0dfc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2632 0dfe 4FEA0323 		lsl	r3, r3, #8
 2633 0e02 9AB2     		uxth	r2, r3
 2634 0e04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2635 0e06 1343     		orrs	r3, r3, r2
 2636 0e08 FB81     		strh	r3, [r7, #14]	@ movhi
1454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2637              		.loc 1 1456 0
 2638 0e0a 7B68     		ldr	r3, [r7, #4]
 2639 0e0c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2640 0e0e 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2641              		.loc 1 1457 0
 2642 0e10 07F11407 		add	r7, r7, #20
 2643 0e14 BD46     		mov	sp, r7
 2644 0e16 80BC     		pop	{r7}
 2645 0e18 7047     		bx	lr
 2646              		.cfi_endproc
 2647              	.LFE65:
 2649 0e1a 00BF     		.align	2
 2650              		.global	TIM_ClearOC1Ref
 2651              		.thumb
 2652              		.thumb_func
 2654              	TIM_ClearOC1Ref:
 2655              	.LFB66:
1458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2656              		.loc 1 1469 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 16
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660              		@ link register save eliminated.
 2661 0e1c 80B4     		push	{r7}
 2662              	.LCFI111:
 2663              		.cfi_def_cfa_offset 4
 2664              		.cfi_offset 7, -4
 2665 0e1e 85B0     		sub	sp, sp, #20
 2666              	.LCFI112:
 2667              		.cfi_def_cfa_offset 24
 2668 0e20 00AF     		add	r7, sp, #0
 2669              	.LCFI113:
 2670              		.cfi_def_cfa_register 7
 2671 0e22 7860     		str	r0, [r7, #4]
 2672 0e24 0B46     		mov	r3, r1
 2673 0e26 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2674              		.loc 1 1470 0
 2675 0e28 4FF00003 		mov	r3, #0
 2676 0e2c FB81     		strh	r3, [r7, #14]	@ movhi
1471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2677              		.loc 1 1476 0
 2678 0e2e 7B68     		ldr	r3, [r7, #4]
 2679 0e30 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2680 0e32 FB81     		strh	r3, [r7, #14]	@ movhi
1477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2681              		.loc 1 1479 0
 2682 0e34 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2683 0e36 23F08003 		bic	r3, r3, #128
 2684 0e3a FB81     		strh	r3, [r7, #14]	@ movhi
1480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2685              		.loc 1 1482 0
 2686 0e3c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2687 0e3e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2688 0e40 1343     		orrs	r3, r3, r2
 2689 0e42 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2690              		.loc 1 1485 0
 2691 0e44 7B68     		ldr	r3, [r7, #4]
 2692 0e46 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2693 0e48 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2694              		.loc 1 1486 0
 2695 0e4a 07F11407 		add	r7, r7, #20
 2696 0e4e BD46     		mov	sp, r7
 2697 0e50 80BC     		pop	{r7}
 2698 0e52 7047     		bx	lr
 2699              		.cfi_endproc
 2700              	.LFE66:
 2702              		.align	2
 2703              		.global	TIM_ClearOC2Ref
 2704              		.thumb
 2705              		.thumb_func
 2707              	TIM_ClearOC2Ref:
 2708              	.LFB67:
1487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2709              		.loc 1 1499 0
 2710              		.cfi_startproc
 2711              		@ args = 0, pretend = 0, frame = 16
 2712              		@ frame_needed = 1, uses_anonymous_args = 0
 2713              		@ link register save eliminated.
 2714 0e54 80B4     		push	{r7}
 2715              	.LCFI114:
 2716              		.cfi_def_cfa_offset 4
 2717              		.cfi_offset 7, -4
 2718 0e56 85B0     		sub	sp, sp, #20
 2719              	.LCFI115:
 2720              		.cfi_def_cfa_offset 24
 2721 0e58 00AF     		add	r7, sp, #0
 2722              	.LCFI116:
 2723              		.cfi_def_cfa_register 7
 2724 0e5a 7860     		str	r0, [r7, #4]
 2725 0e5c 0B46     		mov	r3, r1
 2726 0e5e 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2727              		.loc 1 1500 0
 2728 0e60 4FF00003 		mov	r3, #0
 2729 0e64 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2730              		.loc 1 1506 0
 2731 0e66 7B68     		ldr	r3, [r7, #4]
 2732 0e68 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2733 0e6a FB81     		strh	r3, [r7, #14]	@ movhi
1507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2734              		.loc 1 1509 0
 2735 0e6c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2736 0e6e 4FEA4343 		lsl	r3, r3, #17
 2737 0e72 4FEA5343 		lsr	r3, r3, #17
 2738 0e76 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2739              		.loc 1 1512 0
 2740 0e78 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2741 0e7a 4FEA0323 		lsl	r3, r3, #8
 2742 0e7e 9AB2     		uxth	r2, r3
 2743 0e80 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2744 0e82 1343     		orrs	r3, r3, r2
 2745 0e84 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2746              		.loc 1 1515 0
 2747 0e86 7B68     		ldr	r3, [r7, #4]
 2748 0e88 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2749 0e8a 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2750              		.loc 1 1516 0
 2751 0e8c 07F11407 		add	r7, r7, #20
 2752 0e90 BD46     		mov	sp, r7
 2753 0e92 80BC     		pop	{r7}
 2754 0e94 7047     		bx	lr
 2755              		.cfi_endproc
 2756              	.LFE67:
 2758 0e96 00BF     		.align	2
 2759              		.global	TIM_ClearOC3Ref
 2760              		.thumb
 2761              		.thumb_func
 2763              	TIM_ClearOC3Ref:
 2764              	.LFB68:
1517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2765              		.loc 1 1528 0
 2766              		.cfi_startproc
 2767              		@ args = 0, pretend = 0, frame = 16
 2768              		@ frame_needed = 1, uses_anonymous_args = 0
 2769              		@ link register save eliminated.
 2770 0e98 80B4     		push	{r7}
 2771              	.LCFI117:
 2772              		.cfi_def_cfa_offset 4
 2773              		.cfi_offset 7, -4
 2774 0e9a 85B0     		sub	sp, sp, #20
 2775              	.LCFI118:
 2776              		.cfi_def_cfa_offset 24
 2777 0e9c 00AF     		add	r7, sp, #0
 2778              	.LCFI119:
 2779              		.cfi_def_cfa_register 7
 2780 0e9e 7860     		str	r0, [r7, #4]
 2781 0ea0 0B46     		mov	r3, r1
 2782 0ea2 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2783              		.loc 1 1529 0
 2784 0ea4 4FF00003 		mov	r3, #0
 2785 0ea8 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2786              		.loc 1 1535 0
 2787 0eaa 7B68     		ldr	r3, [r7, #4]
 2788 0eac 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2789 0eae FB81     		strh	r3, [r7, #14]	@ movhi
1536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2790              		.loc 1 1538 0
 2791 0eb0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2792 0eb2 23F08003 		bic	r3, r3, #128
 2793 0eb6 FB81     		strh	r3, [r7, #14]	@ movhi
1539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2794              		.loc 1 1541 0
 2795 0eb8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2796 0eba 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2797 0ebc 1343     		orrs	r3, r3, r2
 2798 0ebe FB81     		strh	r3, [r7, #14]	@ movhi
1542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2799              		.loc 1 1544 0
 2800 0ec0 7B68     		ldr	r3, [r7, #4]
 2801 0ec2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2802 0ec4 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2803              		.loc 1 1545 0
 2804 0ec6 07F11407 		add	r7, r7, #20
 2805 0eca BD46     		mov	sp, r7
 2806 0ecc 80BC     		pop	{r7}
 2807 0ece 7047     		bx	lr
 2808              		.cfi_endproc
 2809              	.LFE68:
 2811              		.align	2
 2812              		.global	TIM_ClearOC4Ref
 2813              		.thumb
 2814              		.thumb_func
 2816              	TIM_ClearOC4Ref:
 2817              	.LFB69:
1546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2818              		.loc 1 1557 0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 16
 2821              		@ frame_needed = 1, uses_anonymous_args = 0
 2822              		@ link register save eliminated.
 2823 0ed0 80B4     		push	{r7}
 2824              	.LCFI120:
 2825              		.cfi_def_cfa_offset 4
 2826              		.cfi_offset 7, -4
 2827 0ed2 85B0     		sub	sp, sp, #20
 2828              	.LCFI121:
 2829              		.cfi_def_cfa_offset 24
 2830 0ed4 00AF     		add	r7, sp, #0
 2831              	.LCFI122:
 2832              		.cfi_def_cfa_register 7
 2833 0ed6 7860     		str	r0, [r7, #4]
 2834 0ed8 0B46     		mov	r3, r1
 2835 0eda 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2836              		.loc 1 1558 0
 2837 0edc 4FF00003 		mov	r3, #0
 2838 0ee0 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2839              		.loc 1 1564 0
 2840 0ee2 7B68     		ldr	r3, [r7, #4]
 2841 0ee4 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2842 0ee6 FB81     		strh	r3, [r7, #14]	@ movhi
1565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2843              		.loc 1 1567 0
 2844 0ee8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2845 0eea 4FEA4343 		lsl	r3, r3, #17
 2846 0eee 4FEA5343 		lsr	r3, r3, #17
 2847 0ef2 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2848              		.loc 1 1570 0
 2849 0ef4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2850 0ef6 4FEA0323 		lsl	r3, r3, #8
 2851 0efa 9AB2     		uxth	r2, r3
 2852 0efc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2853 0efe 1343     		orrs	r3, r3, r2
 2854 0f00 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2855              		.loc 1 1573 0
 2856 0f02 7B68     		ldr	r3, [r7, #4]
 2857 0f04 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2858 0f06 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2859              		.loc 1 1574 0
 2860 0f08 07F11407 		add	r7, r7, #20
 2861 0f0c BD46     		mov	sp, r7
 2862 0f0e 80BC     		pop	{r7}
 2863 0f10 7047     		bx	lr
 2864              		.cfi_endproc
 2865              	.LFE69:
 2867 0f12 00BF     		.align	2
 2868              		.global	TIM_OC1PolarityConfig
 2869              		.thumb
 2870              		.thumb_func
 2872              	TIM_OC1PolarityConfig:
 2873              	.LFB70:
1575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2874              		.loc 1 1586 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 16
 2877              		@ frame_needed = 1, uses_anonymous_args = 0
 2878              		@ link register save eliminated.
 2879 0f14 80B4     		push	{r7}
 2880              	.LCFI123:
 2881              		.cfi_def_cfa_offset 4
 2882              		.cfi_offset 7, -4
 2883 0f16 85B0     		sub	sp, sp, #20
 2884              	.LCFI124:
 2885              		.cfi_def_cfa_offset 24
 2886 0f18 00AF     		add	r7, sp, #0
 2887              	.LCFI125:
 2888              		.cfi_def_cfa_register 7
 2889 0f1a 7860     		str	r0, [r7, #4]
 2890 0f1c 0B46     		mov	r3, r1
 2891 0f1e 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 2892              		.loc 1 1587 0
 2893 0f20 4FF00003 		mov	r3, #0
 2894 0f24 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 2895              		.loc 1 1593 0
 2896 0f26 7B68     		ldr	r3, [r7, #4]
 2897 0f28 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2898 0f2a FB81     		strh	r3, [r7, #14]	@ movhi
1594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2899              		.loc 1 1596 0
 2900 0f2c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2901 0f2e 23F00203 		bic	r3, r3, #2
 2902 0f32 FB81     		strh	r3, [r7, #14]	@ movhi
1597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2903              		.loc 1 1597 0
 2904 0f34 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2905 0f36 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2906 0f38 1343     		orrs	r3, r3, r2
 2907 0f3a FB81     		strh	r3, [r7, #14]	@ movhi
1598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 2908              		.loc 1 1600 0
 2909 0f3c 7B68     		ldr	r3, [r7, #4]
 2910 0f3e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2911 0f40 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2912              		.loc 1 1601 0
 2913 0f42 07F11407 		add	r7, r7, #20
 2914 0f46 BD46     		mov	sp, r7
 2915 0f48 80BC     		pop	{r7}
 2916 0f4a 7047     		bx	lr
 2917              		.cfi_endproc
 2918              	.LFE70:
 2920              		.align	2
 2921              		.global	TIM_OC1NPolarityConfig
 2922              		.thumb
 2923              		.thumb_func
 2925              	TIM_OC1NPolarityConfig:
 2926              	.LFB71:
1602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2927              		.loc 1 1613 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 16
 2930              		@ frame_needed = 1, uses_anonymous_args = 0
 2931              		@ link register save eliminated.
 2932 0f4c 80B4     		push	{r7}
 2933              	.LCFI126:
 2934              		.cfi_def_cfa_offset 4
 2935              		.cfi_offset 7, -4
 2936 0f4e 85B0     		sub	sp, sp, #20
 2937              	.LCFI127:
 2938              		.cfi_def_cfa_offset 24
 2939 0f50 00AF     		add	r7, sp, #0
 2940              	.LCFI128:
 2941              		.cfi_def_cfa_register 7
 2942 0f52 7860     		str	r0, [r7, #4]
 2943 0f54 0B46     		mov	r3, r1
 2944 0f56 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 2945              		.loc 1 1614 0
 2946 0f58 4FF00003 		mov	r3, #0
 2947 0f5c FB81     		strh	r3, [r7, #14]	@ movhi
1615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 2948              		.loc 1 1619 0
 2949 0f5e 7B68     		ldr	r3, [r7, #4]
 2950 0f60 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2951 0f62 FB81     		strh	r3, [r7, #14]	@ movhi
1620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2952              		.loc 1 1622 0
 2953 0f64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2954 0f66 23F00803 		bic	r3, r3, #8
 2955 0f6a FB81     		strh	r3, [r7, #14]	@ movhi
1623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2956              		.loc 1 1623 0
 2957 0f6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2958 0f6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2959 0f70 1343     		orrs	r3, r3, r2
 2960 0f72 FB81     		strh	r3, [r7, #14]	@ movhi
1624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 2961              		.loc 1 1626 0
 2962 0f74 7B68     		ldr	r3, [r7, #4]
 2963 0f76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2964 0f78 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 2965              		.loc 1 1627 0
 2966 0f7a 07F11407 		add	r7, r7, #20
 2967 0f7e BD46     		mov	sp, r7
 2968 0f80 80BC     		pop	{r7}
 2969 0f82 7047     		bx	lr
 2970              		.cfi_endproc
 2971              	.LFE71:
 2973              		.align	2
 2974              		.global	TIM_OC2PolarityConfig
 2975              		.thumb
 2976              		.thumb_func
 2978              	TIM_OC2PolarityConfig:
 2979              	.LFB72:
1628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 2980              		.loc 1 1640 0
 2981              		.cfi_startproc
 2982              		@ args = 0, pretend = 0, frame = 16
 2983              		@ frame_needed = 1, uses_anonymous_args = 0
 2984              		@ link register save eliminated.
 2985 0f84 80B4     		push	{r7}
 2986              	.LCFI129:
 2987              		.cfi_def_cfa_offset 4
 2988              		.cfi_offset 7, -4
 2989 0f86 85B0     		sub	sp, sp, #20
 2990              	.LCFI130:
 2991              		.cfi_def_cfa_offset 24
 2992 0f88 00AF     		add	r7, sp, #0
 2993              	.LCFI131:
 2994              		.cfi_def_cfa_register 7
 2995 0f8a 7860     		str	r0, [r7, #4]
 2996 0f8c 0B46     		mov	r3, r1
 2997 0f8e 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 2998              		.loc 1 1641 0
 2999 0f90 4FF00003 		mov	r3, #0
 3000 0f94 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 3001              		.loc 1 1647 0
 3002 0f96 7B68     		ldr	r3, [r7, #4]
 3003 0f98 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3004 0f9a FB81     		strh	r3, [r7, #14]	@ movhi
1648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3005              		.loc 1 1650 0
 3006 0f9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3007 0f9e 23F02003 		bic	r3, r3, #32
 3008 0fa2 FB81     		strh	r3, [r7, #14]	@ movhi
1651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3009              		.loc 1 1651 0
 3010 0fa4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3011 0fa6 4FEA0313 		lsl	r3, r3, #4
 3012 0faa 9AB2     		uxth	r2, r3
 3013 0fac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3014 0fae 1343     		orrs	r3, r3, r2
 3015 0fb0 FB81     		strh	r3, [r7, #14]	@ movhi
1652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 3016              		.loc 1 1654 0
 3017 0fb2 7B68     		ldr	r3, [r7, #4]
 3018 0fb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3019 0fb6 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3020              		.loc 1 1655 0
 3021 0fb8 07F11407 		add	r7, r7, #20
 3022 0fbc BD46     		mov	sp, r7
 3023 0fbe 80BC     		pop	{r7}
 3024 0fc0 7047     		bx	lr
 3025              		.cfi_endproc
 3026              	.LFE72:
 3028 0fc2 00BF     		.align	2
 3029              		.global	TIM_OC2NPolarityConfig
 3030              		.thumb
 3031              		.thumb_func
 3033              	TIM_OC2NPolarityConfig:
 3034              	.LFB73:
1656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3035              		.loc 1 1667 0
 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 16
 3038              		@ frame_needed = 1, uses_anonymous_args = 0
 3039              		@ link register save eliminated.
 3040 0fc4 80B4     		push	{r7}
 3041              	.LCFI132:
 3042              		.cfi_def_cfa_offset 4
 3043              		.cfi_offset 7, -4
 3044 0fc6 85B0     		sub	sp, sp, #20
 3045              	.LCFI133:
 3046              		.cfi_def_cfa_offset 24
 3047 0fc8 00AF     		add	r7, sp, #0
 3048              	.LCFI134:
 3049              		.cfi_def_cfa_register 7
 3050 0fca 7860     		str	r0, [r7, #4]
 3051 0fcc 0B46     		mov	r3, r1
 3052 0fce 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 3053              		.loc 1 1668 0
 3054 0fd0 4FF00003 		mov	r3, #0
 3055 0fd4 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 3056              		.loc 1 1674 0
 3057 0fd6 7B68     		ldr	r3, [r7, #4]
 3058 0fd8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3059 0fda FB81     		strh	r3, [r7, #14]	@ movhi
1675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3060              		.loc 1 1677 0
 3061 0fdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 3062 0fde 23F08003 		bic	r3, r3, #128
 3063 0fe2 FB81     		strh	r3, [r7, #14]	@ movhi
1678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3064              		.loc 1 1678 0
 3065 0fe4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3066 0fe6 4FEA0313 		lsl	r3, r3, #4
 3067 0fea 9AB2     		uxth	r2, r3
 3068 0fec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3069 0fee 1343     		orrs	r3, r3, r2
 3070 0ff0 FB81     		strh	r3, [r7, #14]	@ movhi
1679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 3071              		.loc 1 1681 0
 3072 0ff2 7B68     		ldr	r3, [r7, #4]
 3073 0ff4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3074 0ff6 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3075              		.loc 1 1682 0
 3076 0ff8 07F11407 		add	r7, r7, #20
 3077 0ffc BD46     		mov	sp, r7
 3078 0ffe 80BC     		pop	{r7}
 3079 1000 7047     		bx	lr
 3080              		.cfi_endproc
 3081              	.LFE73:
 3083 1002 00BF     		.align	2
 3084              		.global	TIM_OC3PolarityConfig
 3085              		.thumb
 3086              		.thumb_func
 3088              	TIM_OC3PolarityConfig:
 3089              	.LFB74:
1683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3090              		.loc 1 1694 0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 16
 3093              		@ frame_needed = 1, uses_anonymous_args = 0
 3094              		@ link register save eliminated.
 3095 1004 80B4     		push	{r7}
 3096              	.LCFI135:
 3097              		.cfi_def_cfa_offset 4
 3098              		.cfi_offset 7, -4
 3099 1006 85B0     		sub	sp, sp, #20
 3100              	.LCFI136:
 3101              		.cfi_def_cfa_offset 24
 3102 1008 00AF     		add	r7, sp, #0
 3103              	.LCFI137:
 3104              		.cfi_def_cfa_register 7
 3105 100a 7860     		str	r0, [r7, #4]
 3106 100c 0B46     		mov	r3, r1
 3107 100e 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 3108              		.loc 1 1695 0
 3109 1010 4FF00003 		mov	r3, #0
 3110 1014 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 3111              		.loc 1 1701 0
 3112 1016 7B68     		ldr	r3, [r7, #4]
 3113 1018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3114 101a FB81     		strh	r3, [r7, #14]	@ movhi
1702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3115              		.loc 1 1704 0
 3116 101c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3117 101e 23F40073 		bic	r3, r3, #512
 3118 1022 FB81     		strh	r3, [r7, #14]	@ movhi
1705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3119              		.loc 1 1705 0
 3120 1024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3121 1026 4FEA0323 		lsl	r3, r3, #8
 3122 102a 9AB2     		uxth	r2, r3
 3123 102c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3124 102e 1343     		orrs	r3, r3, r2
 3125 1030 FB81     		strh	r3, [r7, #14]	@ movhi
1706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 3126              		.loc 1 1708 0
 3127 1032 7B68     		ldr	r3, [r7, #4]
 3128 1034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3129 1036 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3130              		.loc 1 1709 0
 3131 1038 07F11407 		add	r7, r7, #20
 3132 103c BD46     		mov	sp, r7
 3133 103e 80BC     		pop	{r7}
 3134 1040 7047     		bx	lr
 3135              		.cfi_endproc
 3136              	.LFE74:
 3138 1042 00BF     		.align	2
 3139              		.global	TIM_OC3NPolarityConfig
 3140              		.thumb
 3141              		.thumb_func
 3143              	TIM_OC3NPolarityConfig:
 3144              	.LFB75:
1710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3145              		.loc 1 1721 0
 3146              		.cfi_startproc
 3147              		@ args = 0, pretend = 0, frame = 16
 3148              		@ frame_needed = 1, uses_anonymous_args = 0
 3149              		@ link register save eliminated.
 3150 1044 80B4     		push	{r7}
 3151              	.LCFI138:
 3152              		.cfi_def_cfa_offset 4
 3153              		.cfi_offset 7, -4
 3154 1046 85B0     		sub	sp, sp, #20
 3155              	.LCFI139:
 3156              		.cfi_def_cfa_offset 24
 3157 1048 00AF     		add	r7, sp, #0
 3158              	.LCFI140:
 3159              		.cfi_def_cfa_register 7
 3160 104a 7860     		str	r0, [r7, #4]
 3161 104c 0B46     		mov	r3, r1
 3162 104e 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 3163              		.loc 1 1722 0
 3164 1050 4FF00003 		mov	r3, #0
 3165 1054 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
1724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
1728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 3166              		.loc 1 1728 0
 3167 1056 7B68     		ldr	r3, [r7, #4]
 3168 1058 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3169 105a FB81     		strh	r3, [r7, #14]	@ movhi
1729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3170              		.loc 1 1731 0
 3171 105c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3172 105e 23F40063 		bic	r3, r3, #2048
 3173 1062 FB81     		strh	r3, [r7, #14]	@ movhi
1732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3174              		.loc 1 1732 0
 3175 1064 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3176 1066 4FEA0323 		lsl	r3, r3, #8
 3177 106a 9AB2     		uxth	r2, r3
 3178 106c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3179 106e 1343     		orrs	r3, r3, r2
 3180 1070 FB81     		strh	r3, [r7, #14]	@ movhi
1733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 3181              		.loc 1 1735 0
 3182 1072 7B68     		ldr	r3, [r7, #4]
 3183 1074 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3184 1076 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3185              		.loc 1 1736 0
 3186 1078 07F11407 		add	r7, r7, #20
 3187 107c BD46     		mov	sp, r7
 3188 107e 80BC     		pop	{r7}
 3189 1080 7047     		bx	lr
 3190              		.cfi_endproc
 3191              	.LFE75:
 3193 1082 00BF     		.align	2
 3194              		.global	TIM_OC4PolarityConfig
 3195              		.thumb
 3196              		.thumb_func
 3198              	TIM_OC4PolarityConfig:
 3199              	.LFB76:
1737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3200              		.loc 1 1748 0
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 16
 3203              		@ frame_needed = 1, uses_anonymous_args = 0
 3204              		@ link register save eliminated.
 3205 1084 80B4     		push	{r7}
 3206              	.LCFI141:
 3207              		.cfi_def_cfa_offset 4
 3208              		.cfi_offset 7, -4
 3209 1086 85B0     		sub	sp, sp, #20
 3210              	.LCFI142:
 3211              		.cfi_def_cfa_offset 24
 3212 1088 00AF     		add	r7, sp, #0
 3213              	.LCFI143:
 3214              		.cfi_def_cfa_register 7
 3215 108a 7860     		str	r0, [r7, #4]
 3216 108c 0B46     		mov	r3, r1
 3217 108e 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 3218              		.loc 1 1749 0
 3219 1090 4FF00003 		mov	r3, #0
 3220 1094 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 3221              		.loc 1 1755 0
 3222 1096 7B68     		ldr	r3, [r7, #4]
 3223 1098 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3224 109a FB81     		strh	r3, [r7, #14]	@ movhi
1756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3225              		.loc 1 1758 0
 3226 109c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3227 109e 23F40053 		bic	r3, r3, #8192
 3228 10a2 FB81     		strh	r3, [r7, #14]	@ movhi
1759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3229              		.loc 1 1759 0
 3230 10a4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3231 10a6 4FEA0333 		lsl	r3, r3, #12
 3232 10aa 9AB2     		uxth	r2, r3
 3233 10ac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3234 10ae 1343     		orrs	r3, r3, r2
 3235 10b0 FB81     		strh	r3, [r7, #14]	@ movhi
1760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 3236              		.loc 1 1762 0
 3237 10b2 7B68     		ldr	r3, [r7, #4]
 3238 10b4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3239 10b6 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3240              		.loc 1 1763 0
 3241 10b8 07F11407 		add	r7, r7, #20
 3242 10bc BD46     		mov	sp, r7
 3243 10be 80BC     		pop	{r7}
 3244 10c0 7047     		bx	lr
 3245              		.cfi_endproc
 3246              	.LFE76:
 3248 10c2 00BF     		.align	2
 3249              		.global	TIM_CCxCmd
 3250              		.thumb
 3251              		.thumb_func
 3253              	TIM_CCxCmd:
 3254              	.LFB77:
1764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3255              		.loc 1 1779 0
 3256              		.cfi_startproc
 3257              		@ args = 0, pretend = 0, frame = 16
 3258              		@ frame_needed = 1, uses_anonymous_args = 0
 3259              		@ link register save eliminated.
 3260 10c4 80B4     		push	{r7}
 3261              	.LCFI144:
 3262              		.cfi_def_cfa_offset 4
 3263              		.cfi_offset 7, -4
 3264 10c6 85B0     		sub	sp, sp, #20
 3265              	.LCFI145:
 3266              		.cfi_def_cfa_offset 24
 3267 10c8 00AF     		add	r7, sp, #0
 3268              	.LCFI146:
 3269              		.cfi_def_cfa_register 7
 3270 10ca 7860     		str	r0, [r7, #4]
 3271 10cc 1346     		mov	r3, r2
 3272 10ce 0A46     		mov	r2, r1	@ movhi
 3273 10d0 7A80     		strh	r2, [r7, #2]	@ movhi
 3274 10d2 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp = 0;
 3275              		.loc 1 1780 0
 3276 10d4 4FF00003 		mov	r3, #0
 3277 10d8 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3278              		.loc 1 1787 0
 3279 10da 7B88     		ldrh	r3, [r7, #2]
 3280 10dc 4FF00102 		mov	r2, #1
 3281 10e0 02FA03F3 		lsl	r3, r2, r3
 3282 10e4 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3283              		.loc 1 1790 0
 3284 10e6 7B68     		ldr	r3, [r7, #4]
 3285 10e8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3286 10ea 9AB2     		uxth	r2, r3
 3287 10ec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3288 10ee 6FEA0303 		mvn	r3, r3
 3289 10f2 9BB2     		uxth	r3, r3
 3290 10f4 1340     		ands	r3, r3, r2
 3291 10f6 9AB2     		uxth	r2, r3
 3292 10f8 7B68     		ldr	r3, [r7, #4]
 3293 10fa 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3294              		.loc 1 1793 0
 3295 10fc 7B68     		ldr	r3, [r7, #4]
 3296 10fe 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3297 1100 9AB2     		uxth	r2, r3
 3298 1102 3988     		ldrh	r1, [r7, #0]
 3299 1104 7B88     		ldrh	r3, [r7, #2]
 3300 1106 01FA03F3 		lsl	r3, r1, r3
 3301 110a 9BB2     		uxth	r3, r3
 3302 110c 1343     		orrs	r3, r3, r2
 3303 110e 9AB2     		uxth	r2, r3
 3304 1110 7B68     		ldr	r3, [r7, #4]
 3305 1112 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3306              		.loc 1 1794 0
 3307 1114 07F11407 		add	r7, r7, #20
 3308 1118 BD46     		mov	sp, r7
 3309 111a 80BC     		pop	{r7}
 3310 111c 7047     		bx	lr
 3311              		.cfi_endproc
 3312              	.LFE77:
 3314 111e 00BF     		.align	2
 3315              		.global	TIM_CCxNCmd
 3316              		.thumb
 3317              		.thumb_func
 3319              	TIM_CCxNCmd:
 3320              	.LFB78:
1795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3321              		.loc 1 1809 0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 16
 3324              		@ frame_needed = 1, uses_anonymous_args = 0
 3325              		@ link register save eliminated.
 3326 1120 80B4     		push	{r7}
 3327              	.LCFI147:
 3328              		.cfi_def_cfa_offset 4
 3329              		.cfi_offset 7, -4
 3330 1122 85B0     		sub	sp, sp, #20
 3331              	.LCFI148:
 3332              		.cfi_def_cfa_offset 24
 3333 1124 00AF     		add	r7, sp, #0
 3334              	.LCFI149:
 3335              		.cfi_def_cfa_register 7
 3336 1126 7860     		str	r0, [r7, #4]
 3337 1128 1346     		mov	r3, r2
 3338 112a 0A46     		mov	r2, r1	@ movhi
 3339 112c 7A80     		strh	r2, [r7, #2]	@ movhi
 3340 112e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmp = 0;
 3341              		.loc 1 1810 0
 3342 1130 4FF00003 		mov	r3, #0
 3343 1134 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3344              		.loc 1 1817 0
 3345 1136 7B88     		ldrh	r3, [r7, #2]
 3346 1138 4FF00402 		mov	r2, #4
 3347 113c 02FA03F3 		lsl	r3, r2, r3
 3348 1140 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3349              		.loc 1 1820 0
 3350 1142 7B68     		ldr	r3, [r7, #4]
 3351 1144 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3352 1146 9AB2     		uxth	r2, r3
 3353 1148 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3354 114a 6FEA0303 		mvn	r3, r3
 3355 114e 9BB2     		uxth	r3, r3
 3356 1150 1340     		ands	r3, r3, r2
 3357 1152 9AB2     		uxth	r2, r3
 3358 1154 7B68     		ldr	r3, [r7, #4]
 3359 1156 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3360              		.loc 1 1823 0
 3361 1158 7B68     		ldr	r3, [r7, #4]
 3362 115a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3363 115c 9AB2     		uxth	r2, r3
 3364 115e 3988     		ldrh	r1, [r7, #0]
 3365 1160 7B88     		ldrh	r3, [r7, #2]
 3366 1162 01FA03F3 		lsl	r3, r1, r3
 3367 1166 9BB2     		uxth	r3, r3
 3368 1168 1343     		orrs	r3, r3, r2
 3369 116a 9AB2     		uxth	r2, r3
 3370 116c 7B68     		ldr	r3, [r7, #4]
 3371 116e 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3372              		.loc 1 1824 0
 3373 1170 07F11407 		add	r7, r7, #20
 3374 1174 BD46     		mov	sp, r7
 3375 1176 80BC     		pop	{r7}
 3376 1178 7047     		bx	lr
 3377              		.cfi_endproc
 3378              	.LFE78:
 3380 117a 00BF     		.align	2
 3381              		.global	TIM_ICInit
 3382              		.thumb
 3383              		.thumb_func
 3385              	TIM_ICInit:
 3386              	.LFB79:
1825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
1827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
1832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
1833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
1834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                       Input Capture management functions
1835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
1836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
1837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
1838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
1840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           or,
1863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
1868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        
1875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
1879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
1880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3387              		.loc 1 1891 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 8
 3390              		@ frame_needed = 1, uses_anonymous_args = 0
 3391 117c 80B5     		push	{r7, lr}
 3392              	.LCFI150:
 3393              		.cfi_def_cfa_offset 8
 3394              		.cfi_offset 14, -4
 3395              		.cfi_offset 7, -8
 3396 117e 82B0     		sub	sp, sp, #8
 3397              	.LCFI151:
 3398              		.cfi_def_cfa_offset 16
 3399 1180 00AF     		add	r7, sp, #0
 3400              	.LCFI152:
 3401              		.cfi_def_cfa_register 7
 3402 1182 7860     		str	r0, [r7, #4]
 3403 1184 3960     		str	r1, [r7, #0]
1892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
1899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3404              		.loc 1 1899 0
 3405 1186 3B68     		ldr	r3, [r7, #0]
 3406 1188 1B88     		ldrh	r3, [r3, #0]
 3407 118a 002B     		cmp	r3, #0
 3408 118c 0FD1     		bne	.L90
1900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3409              		.loc 1 1902 0
 3410 118e 3B68     		ldr	r3, [r7, #0]
 3411 1190 5988     		ldrh	r1, [r3, #2]
1903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3412              		.loc 1 1903 0
 3413 1192 3B68     		ldr	r3, [r7, #0]
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3414              		.loc 1 1902 0
 3415 1194 9A88     		ldrh	r2, [r3, #4]
1904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3416              		.loc 1 1904 0
 3417 1196 3B68     		ldr	r3, [r7, #0]
1902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3418              		.loc 1 1902 0
 3419 1198 1B89     		ldrh	r3, [r3, #8]
 3420 119a 7868     		ldr	r0, [r7, #4]
 3421 119c 00F0C4FC 		bl	TI1_Config
1905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3422              		.loc 1 1906 0
 3423 11a0 3B68     		ldr	r3, [r7, #0]
 3424 11a2 DB88     		ldrh	r3, [r3, #6]
 3425 11a4 7868     		ldr	r0, [r7, #4]
 3426 11a6 1946     		mov	r1, r3
 3427 11a8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3428 11ac 36E0     		b	.L89
 3429              	.L90:
1907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3430              		.loc 1 1908 0
 3431 11ae 3B68     		ldr	r3, [r7, #0]
 3432 11b0 1B88     		ldrh	r3, [r3, #0]
 3433 11b2 042B     		cmp	r3, #4
 3434 11b4 0FD1     		bne	.L92
1909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3435              		.loc 1 1911 0
 3436 11b6 3B68     		ldr	r3, [r7, #0]
 3437 11b8 5988     		ldrh	r1, [r3, #2]
1912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3438              		.loc 1 1912 0
 3439 11ba 3B68     		ldr	r3, [r7, #0]
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3440              		.loc 1 1911 0
 3441 11bc 9A88     		ldrh	r2, [r3, #4]
1913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3442              		.loc 1 1913 0
 3443 11be 3B68     		ldr	r3, [r7, #0]
1911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3444              		.loc 1 1911 0
 3445 11c0 1B89     		ldrh	r3, [r3, #8]
 3446 11c2 7868     		ldr	r0, [r7, #4]
 3447 11c4 00F0F0FC 		bl	TI2_Config
1914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3448              		.loc 1 1915 0
 3449 11c8 3B68     		ldr	r3, [r7, #0]
 3450 11ca DB88     		ldrh	r3, [r3, #6]
 3451 11cc 7868     		ldr	r0, [r7, #4]
 3452 11ce 1946     		mov	r1, r3
 3453 11d0 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3454 11d4 22E0     		b	.L89
 3455              	.L92:
1916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3456              		.loc 1 1917 0
 3457 11d6 3B68     		ldr	r3, [r7, #0]
 3458 11d8 1B88     		ldrh	r3, [r3, #0]
 3459 11da 082B     		cmp	r3, #8
 3460 11dc 0FD1     		bne	.L93
1918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI3 Configuration */
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3461              		.loc 1 1920 0
 3462 11de 3B68     		ldr	r3, [r7, #0]
 3463 11e0 5988     		ldrh	r1, [r3, #2]
1921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3464              		.loc 1 1921 0
 3465 11e2 3B68     		ldr	r3, [r7, #0]
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3466              		.loc 1 1920 0
 3467 11e4 9A88     		ldrh	r2, [r3, #4]
1922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3468              		.loc 1 1922 0
 3469 11e6 3B68     		ldr	r3, [r7, #0]
1920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3470              		.loc 1 1920 0
 3471 11e8 1B89     		ldrh	r3, [r3, #8]
 3472 11ea 7868     		ldr	r0, [r7, #4]
 3473 11ec 00F02AFD 		bl	TI3_Config
1923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3474              		.loc 1 1924 0
 3475 11f0 3B68     		ldr	r3, [r7, #0]
 3476 11f2 DB88     		ldrh	r3, [r3, #6]
 3477 11f4 7868     		ldr	r0, [r7, #4]
 3478 11f6 1946     		mov	r1, r3
 3479 11f8 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3480 11fc 0EE0     		b	.L89
 3481              	.L93:
1925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI4 Configuration */
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3482              		.loc 1 1929 0
 3483 11fe 3B68     		ldr	r3, [r7, #0]
 3484 1200 5988     		ldrh	r1, [r3, #2]
1930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3485              		.loc 1 1930 0
 3486 1202 3B68     		ldr	r3, [r7, #0]
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3487              		.loc 1 1929 0
 3488 1204 9A88     		ldrh	r2, [r3, #4]
1931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3489              		.loc 1 1931 0
 3490 1206 3B68     		ldr	r3, [r7, #0]
1929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3491              		.loc 1 1929 0
 3492 1208 1B89     		ldrh	r3, [r3, #8]
 3493 120a 7868     		ldr	r0, [r7, #4]
 3494 120c 00F060FD 		bl	TI4_Config
1932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3495              		.loc 1 1933 0
 3496 1210 3B68     		ldr	r3, [r7, #0]
 3497 1212 DB88     		ldrh	r3, [r3, #6]
 3498 1214 7868     		ldr	r0, [r7, #4]
 3499 1216 1946     		mov	r1, r3
 3500 1218 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3501              	.L89:
1934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3502              		.loc 1 1935 0
 3503 121c 07F10807 		add	r7, r7, #8
 3504 1220 BD46     		mov	sp, r7
 3505 1222 80BD     		pop	{r7, pc}
 3506              		.cfi_endproc
 3507              	.LFE79:
 3509              		.align	2
 3510              		.global	TIM_ICStructInit
 3511              		.thumb
 3512              		.thumb_func
 3514              	TIM_ICStructInit:
 3515              	.LFB80:
1936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         be initialized.
1941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3516              		.loc 1 1944 0
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 8
 3519              		@ frame_needed = 1, uses_anonymous_args = 0
 3520              		@ link register save eliminated.
 3521 1224 80B4     		push	{r7}
 3522              	.LCFI153:
 3523              		.cfi_def_cfa_offset 4
 3524              		.cfi_offset 7, -4
 3525 1226 83B0     		sub	sp, sp, #12
 3526              	.LCFI154:
 3527              		.cfi_def_cfa_offset 16
 3528 1228 00AF     		add	r7, sp, #0
 3529              	.LCFI155:
 3530              		.cfi_def_cfa_register 7
 3531 122a 7860     		str	r0, [r7, #4]
1945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
1946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3532              		.loc 1 1946 0
 3533 122c 7B68     		ldr	r3, [r7, #4]
 3534 122e 4FF00002 		mov	r2, #0
 3535 1232 1A80     		strh	r2, [r3, #0]	@ movhi
1947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3536              		.loc 1 1947 0
 3537 1234 7B68     		ldr	r3, [r7, #4]
 3538 1236 4FF00002 		mov	r2, #0
 3539 123a 5A80     		strh	r2, [r3, #2]	@ movhi
1948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3540              		.loc 1 1948 0
 3541 123c 7B68     		ldr	r3, [r7, #4]
 3542 123e 4FF00102 		mov	r2, #1
 3543 1242 9A80     		strh	r2, [r3, #4]	@ movhi
1949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3544              		.loc 1 1949 0
 3545 1244 7B68     		ldr	r3, [r7, #4]
 3546 1246 4FF00002 		mov	r2, #0
 3547 124a DA80     		strh	r2, [r3, #6]	@ movhi
1950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3548              		.loc 1 1950 0
 3549 124c 7B68     		ldr	r3, [r7, #4]
 3550 124e 4FF00002 		mov	r2, #0
 3551 1252 1A81     		strh	r2, [r3, #8]	@ movhi
1951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3552              		.loc 1 1951 0
 3553 1254 07F10C07 		add	r7, r7, #12
 3554 1258 BD46     		mov	sp, r7
 3555 125a 80BC     		pop	{r7}
 3556 125c 7047     		bx	lr
 3557              		.cfi_endproc
 3558              	.LFE80:
 3560 125e 00BF     		.align	2
 3561              		.global	TIM_PWMIConfig
 3562              		.thumb
 3563              		.thumb_func
 3565              	TIM_PWMIConfig:
 3566              	.LFB81:
1952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
1954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
1958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
1961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
1962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3567              		.loc 1 1963 0
 3568              		.cfi_startproc
 3569              		@ args = 0, pretend = 0, frame = 16
 3570              		@ frame_needed = 1, uses_anonymous_args = 0
 3571 1260 80B5     		push	{r7, lr}
 3572              	.LCFI156:
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 14, -4
 3575              		.cfi_offset 7, -8
 3576 1262 84B0     		sub	sp, sp, #16
 3577              	.LCFI157:
 3578              		.cfi_def_cfa_offset 24
 3579 1264 00AF     		add	r7, sp, #0
 3580              	.LCFI158:
 3581              		.cfi_def_cfa_register 7
 3582 1266 7860     		str	r0, [r7, #4]
 3583 1268 3960     		str	r1, [r7, #0]
1964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3584              		.loc 1 1964 0
 3585 126a 4FF00003 		mov	r3, #0
 3586 126e FB81     		strh	r3, [r7, #14]	@ movhi
1965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3587              		.loc 1 1965 0
 3588 1270 4FF00103 		mov	r3, #1
 3589 1274 BB81     		strh	r3, [r7, #12]	@ movhi
1966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
1968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
1970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3590              		.loc 1 1971 0
 3591 1276 3B68     		ldr	r3, [r7, #0]
 3592 1278 5B88     		ldrh	r3, [r3, #2]
 3593 127a 002B     		cmp	r3, #0
 3594 127c 03D1     		bne	.L96
1972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3595              		.loc 1 1973 0
 3596 127e 4FF00203 		mov	r3, #2
 3597 1282 FB81     		strh	r3, [r7, #14]	@ movhi
 3598 1284 02E0     		b	.L97
 3599              	.L96:
1974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3600              		.loc 1 1977 0
 3601 1286 4FF00003 		mov	r3, #0
 3602 128a FB81     		strh	r3, [r7, #14]	@ movhi
 3603              	.L97:
1978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Opposite Input */
1980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3604              		.loc 1 1980 0
 3605 128c 3B68     		ldr	r3, [r7, #0]
 3606 128e 9B88     		ldrh	r3, [r3, #4]
 3607 1290 012B     		cmp	r3, #1
 3608 1292 03D1     		bne	.L98
1981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3609              		.loc 1 1982 0
 3610 1294 4FF00203 		mov	r3, #2
 3611 1298 BB81     		strh	r3, [r7, #12]	@ movhi
 3612 129a 02E0     		b	.L99
 3613              	.L98:
1983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
1985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3614              		.loc 1 1986 0
 3615 129c 4FF00103 		mov	r3, #1
 3616 12a0 BB81     		strh	r3, [r7, #12]	@ movhi
 3617              	.L99:
1987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
1988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3618              		.loc 1 1988 0
 3619 12a2 3B68     		ldr	r3, [r7, #0]
 3620 12a4 1B88     		ldrh	r3, [r3, #0]
 3621 12a6 002B     		cmp	r3, #0
 3622 12a8 1CD1     		bne	.L100
1989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
1990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
1991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3623              		.loc 1 1991 0
 3624 12aa 3B68     		ldr	r3, [r7, #0]
 3625 12ac 5988     		ldrh	r1, [r3, #2]
 3626 12ae 3B68     		ldr	r3, [r7, #0]
 3627 12b0 9A88     		ldrh	r2, [r3, #4]
1992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3628              		.loc 1 1992 0
 3629 12b2 3B68     		ldr	r3, [r7, #0]
1991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3630              		.loc 1 1991 0
 3631 12b4 1B89     		ldrh	r3, [r3, #8]
 3632 12b6 7868     		ldr	r0, [r7, #4]
 3633 12b8 00F036FC 		bl	TI1_Config
1993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3634              		.loc 1 1994 0
 3635 12bc 3B68     		ldr	r3, [r7, #0]
 3636 12be DB88     		ldrh	r3, [r3, #6]
 3637 12c0 7868     		ldr	r0, [r7, #4]
 3638 12c2 1946     		mov	r1, r3
 3639 12c4 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
1996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3640              		.loc 1 1996 0
 3641 12c8 3B68     		ldr	r3, [r7, #0]
 3642 12ca 1B89     		ldrh	r3, [r3, #8]
 3643 12cc F989     		ldrh	r1, [r7, #14]
 3644 12ce BA89     		ldrh	r2, [r7, #12]
 3645 12d0 7868     		ldr	r0, [r7, #4]
 3646 12d2 00F069FC 		bl	TI2_Config
1997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3647              		.loc 1 1998 0
 3648 12d6 3B68     		ldr	r3, [r7, #0]
 3649 12d8 DB88     		ldrh	r3, [r3, #6]
 3650 12da 7868     		ldr	r0, [r7, #4]
 3651 12dc 1946     		mov	r1, r3
 3652 12de FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3653 12e2 1BE0     		b	.L95
 3654              	.L100:
1999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   { 
2002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI2 Configuration */
2003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3655              		.loc 1 2003 0
 3656 12e4 3B68     		ldr	r3, [r7, #0]
 3657 12e6 5988     		ldrh	r1, [r3, #2]
 3658 12e8 3B68     		ldr	r3, [r7, #0]
 3659 12ea 9A88     		ldrh	r2, [r3, #4]
2004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3660              		.loc 1 2004 0
 3661 12ec 3B68     		ldr	r3, [r7, #0]
2003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3662              		.loc 1 2003 0
 3663 12ee 1B89     		ldrh	r3, [r3, #8]
 3664 12f0 7868     		ldr	r0, [r7, #4]
 3665 12f2 00F059FC 		bl	TI2_Config
2005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3666              		.loc 1 2006 0
 3667 12f6 3B68     		ldr	r3, [r7, #0]
 3668 12f8 DB88     		ldrh	r3, [r3, #6]
 3669 12fa 7868     		ldr	r0, [r7, #4]
 3670 12fc 1946     		mov	r1, r3
 3671 12fe FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* TI1 Configuration */
2008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3672              		.loc 1 2008 0
 3673 1302 3B68     		ldr	r3, [r7, #0]
 3674 1304 1B89     		ldrh	r3, [r3, #8]
 3675 1306 F989     		ldrh	r1, [r7, #14]
 3676 1308 BA89     		ldrh	r2, [r7, #12]
 3677 130a 7868     		ldr	r0, [r7, #4]
 3678 130c 00F00CFC 		bl	TI1_Config
2009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3679              		.loc 1 2010 0
 3680 1310 3B68     		ldr	r3, [r7, #0]
 3681 1312 DB88     		ldrh	r3, [r3, #6]
 3682 1314 7868     		ldr	r0, [r7, #4]
 3683 1316 1946     		mov	r1, r3
 3684 1318 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3685              	.L95:
2011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3686              		.loc 1 2012 0
 3687 131c 07F11007 		add	r7, r7, #16
 3688 1320 BD46     		mov	sp, r7
 3689 1322 80BD     		pop	{r7, pc}
 3690              		.cfi_endproc
 3691              	.LFE81:
 3693              		.align	2
 3694              		.global	TIM_GetCapture1
 3695              		.thumb
 3696              		.thumb_func
 3698              	TIM_GetCapture1:
 3699              	.LFB82:
2013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3700              		.loc 1 2020 0
 3701              		.cfi_startproc
 3702              		@ args = 0, pretend = 0, frame = 8
 3703              		@ frame_needed = 1, uses_anonymous_args = 0
 3704              		@ link register save eliminated.
 3705 1324 80B4     		push	{r7}
 3706              	.LCFI159:
 3707              		.cfi_def_cfa_offset 4
 3708              		.cfi_offset 7, -4
 3709 1326 83B0     		sub	sp, sp, #12
 3710              	.LCFI160:
 3711              		.cfi_def_cfa_offset 16
 3712 1328 00AF     		add	r7, sp, #0
 3713              	.LCFI161:
 3714              		.cfi_def_cfa_register 7
 3715 132a 7860     		str	r0, [r7, #4]
2021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 1 Register value */
2025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR1;
 3716              		.loc 1 2025 0
 3717 132c 7B68     		ldr	r3, [r7, #4]
 3718 132e 5B6B     		ldr	r3, [r3, #52]
2026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3719              		.loc 1 2026 0
 3720 1330 1846     		mov	r0, r3
 3721 1332 07F10C07 		add	r7, r7, #12
 3722 1336 BD46     		mov	sp, r7
 3723 1338 80BC     		pop	{r7}
 3724 133a 7047     		bx	lr
 3725              		.cfi_endproc
 3726              	.LFE82:
 3728              		.align	2
 3729              		.global	TIM_GetCapture2
 3730              		.thumb
 3731              		.thumb_func
 3733              	TIM_GetCapture2:
 3734              	.LFB83:
2027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3735              		.loc 1 2035 0
 3736              		.cfi_startproc
 3737              		@ args = 0, pretend = 0, frame = 8
 3738              		@ frame_needed = 1, uses_anonymous_args = 0
 3739              		@ link register save eliminated.
 3740 133c 80B4     		push	{r7}
 3741              	.LCFI162:
 3742              		.cfi_def_cfa_offset 4
 3743              		.cfi_offset 7, -4
 3744 133e 83B0     		sub	sp, sp, #12
 3745              	.LCFI163:
 3746              		.cfi_def_cfa_offset 16
 3747 1340 00AF     		add	r7, sp, #0
 3748              	.LCFI164:
 3749              		.cfi_def_cfa_register 7
 3750 1342 7860     		str	r0, [r7, #4]
2036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 2 Register value */
2040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR2;
 3751              		.loc 1 2040 0
 3752 1344 7B68     		ldr	r3, [r7, #4]
 3753 1346 9B6B     		ldr	r3, [r3, #56]
2041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3754              		.loc 1 2041 0
 3755 1348 1846     		mov	r0, r3
 3756 134a 07F10C07 		add	r7, r7, #12
 3757 134e BD46     		mov	sp, r7
 3758 1350 80BC     		pop	{r7}
 3759 1352 7047     		bx	lr
 3760              		.cfi_endproc
 3761              	.LFE83:
 3763              		.align	2
 3764              		.global	TIM_GetCapture3
 3765              		.thumb
 3766              		.thumb_func
 3768              	TIM_GetCapture3:
 3769              	.LFB84:
2042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3770              		.loc 1 2049 0
 3771              		.cfi_startproc
 3772              		@ args = 0, pretend = 0, frame = 8
 3773              		@ frame_needed = 1, uses_anonymous_args = 0
 3774              		@ link register save eliminated.
 3775 1354 80B4     		push	{r7}
 3776              	.LCFI165:
 3777              		.cfi_def_cfa_offset 4
 3778              		.cfi_offset 7, -4
 3779 1356 83B0     		sub	sp, sp, #12
 3780              	.LCFI166:
 3781              		.cfi_def_cfa_offset 16
 3782 1358 00AF     		add	r7, sp, #0
 3783              	.LCFI167:
 3784              		.cfi_def_cfa_register 7
 3785 135a 7860     		str	r0, [r7, #4]
2050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 3 Register value */
2054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR3;
 3786              		.loc 1 2054 0
 3787 135c 7B68     		ldr	r3, [r7, #4]
 3788 135e DB6B     		ldr	r3, [r3, #60]
2055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3789              		.loc 1 2055 0
 3790 1360 1846     		mov	r0, r3
 3791 1362 07F10C07 		add	r7, r7, #12
 3792 1366 BD46     		mov	sp, r7
 3793 1368 80BC     		pop	{r7}
 3794 136a 7047     		bx	lr
 3795              		.cfi_endproc
 3796              	.LFE84:
 3798              		.align	2
 3799              		.global	TIM_GetCapture4
 3800              		.thumb
 3801              		.thumb_func
 3803              	TIM_GetCapture4:
 3804              	.LFB85:
2056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3805              		.loc 1 2063 0
 3806              		.cfi_startproc
 3807              		@ args = 0, pretend = 0, frame = 8
 3808              		@ frame_needed = 1, uses_anonymous_args = 0
 3809              		@ link register save eliminated.
 3810 136c 80B4     		push	{r7}
 3811              	.LCFI168:
 3812              		.cfi_def_cfa_offset 4
 3813              		.cfi_offset 7, -4
 3814 136e 83B0     		sub	sp, sp, #12
 3815              	.LCFI169:
 3816              		.cfi_def_cfa_offset 16
 3817 1370 00AF     		add	r7, sp, #0
 3818              	.LCFI170:
 3819              		.cfi_def_cfa_register 7
 3820 1372 7860     		str	r0, [r7, #4]
2064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the Capture 4 Register value */
2068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return TIMx->CCR4;
 3821              		.loc 1 2068 0
 3822 1374 7B68     		ldr	r3, [r7, #4]
 3823 1376 1B6C     		ldr	r3, [r3, #64]
2069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3824              		.loc 1 2069 0
 3825 1378 1846     		mov	r0, r3
 3826 137a 07F10C07 		add	r7, r7, #12
 3827 137e BD46     		mov	sp, r7
 3828 1380 80BC     		pop	{r7}
 3829 1382 7047     		bx	lr
 3830              		.cfi_endproc
 3831              	.LFE85:
 3833              		.align	2
 3834              		.global	TIM_SetIC1Prescaler
 3835              		.thumb
 3836              		.thumb_func
 3838              	TIM_SetIC1Prescaler:
 3839              	.LFB86:
2070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3840              		.loc 1 2083 0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 8
 3843              		@ frame_needed = 1, uses_anonymous_args = 0
 3844              		@ link register save eliminated.
 3845 1384 80B4     		push	{r7}
 3846              	.LCFI171:
 3847              		.cfi_def_cfa_offset 4
 3848              		.cfi_offset 7, -4
 3849 1386 83B0     		sub	sp, sp, #12
 3850              	.LCFI172:
 3851              		.cfi_def_cfa_offset 16
 3852 1388 00AF     		add	r7, sp, #0
 3853              	.LCFI173:
 3854              		.cfi_def_cfa_register 7
 3855 138a 7860     		str	r0, [r7, #4]
 3856 138c 0B46     		mov	r3, r1
 3857 138e 7B80     		strh	r3, [r7, #2]	@ movhi
2084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3858              		.loc 1 2089 0
 3859 1390 7B68     		ldr	r3, [r7, #4]
 3860 1392 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3861 1394 9BB2     		uxth	r3, r3
 3862 1396 23F00C03 		bic	r3, r3, #12
 3863 139a 9AB2     		uxth	r2, r3
 3864 139c 7B68     		ldr	r3, [r7, #4]
 3865 139e 1A83     		strh	r2, [r3, #24]	@ movhi
2090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC1PSC value */
2092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3866              		.loc 1 2092 0
 3867 13a0 7B68     		ldr	r3, [r7, #4]
 3868 13a2 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3869 13a4 9AB2     		uxth	r2, r3
 3870 13a6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3871 13a8 1343     		orrs	r3, r3, r2
 3872 13aa 9AB2     		uxth	r2, r3
 3873 13ac 7B68     		ldr	r3, [r7, #4]
 3874 13ae 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3875              		.loc 1 2093 0
 3876 13b0 07F10C07 		add	r7, r7, #12
 3877 13b4 BD46     		mov	sp, r7
 3878 13b6 80BC     		pop	{r7}
 3879 13b8 7047     		bx	lr
 3880              		.cfi_endproc
 3881              	.LFE86:
 3883 13ba 00BF     		.align	2
 3884              		.global	TIM_SetIC2Prescaler
 3885              		.thumb
 3886              		.thumb_func
 3888              	TIM_SetIC2Prescaler:
 3889              	.LFB87:
2094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3890              		.loc 1 2108 0
 3891              		.cfi_startproc
 3892              		@ args = 0, pretend = 0, frame = 8
 3893              		@ frame_needed = 1, uses_anonymous_args = 0
 3894              		@ link register save eliminated.
 3895 13bc 80B4     		push	{r7}
 3896              	.LCFI174:
 3897              		.cfi_def_cfa_offset 4
 3898              		.cfi_offset 7, -4
 3899 13be 83B0     		sub	sp, sp, #12
 3900              	.LCFI175:
 3901              		.cfi_def_cfa_offset 16
 3902 13c0 00AF     		add	r7, sp, #0
 3903              	.LCFI176:
 3904              		.cfi_def_cfa_register 7
 3905 13c2 7860     		str	r0, [r7, #4]
 3906 13c4 0B46     		mov	r3, r1
 3907 13c6 7B80     		strh	r3, [r7, #2]	@ movhi
2109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3908              		.loc 1 2114 0
 3909 13c8 7B68     		ldr	r3, [r7, #4]
 3910 13ca 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3911 13cc 9BB2     		uxth	r3, r3
 3912 13ce 23F44063 		bic	r3, r3, #3072
 3913 13d2 9AB2     		uxth	r2, r3
 3914 13d4 7B68     		ldr	r3, [r7, #4]
 3915 13d6 1A83     		strh	r2, [r3, #24]	@ movhi
2115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC2PSC value */
2117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3916              		.loc 1 2117 0
 3917 13d8 7B68     		ldr	r3, [r7, #4]
 3918 13da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3919 13dc 9AB2     		uxth	r2, r3
 3920 13de 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3921 13e0 4FEA0323 		lsl	r3, r3, #8
 3922 13e4 9BB2     		uxth	r3, r3
 3923 13e6 1343     		orrs	r3, r3, r2
 3924 13e8 9AB2     		uxth	r2, r3
 3925 13ea 7B68     		ldr	r3, [r7, #4]
 3926 13ec 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3927              		.loc 1 2118 0
 3928 13ee 07F10C07 		add	r7, r7, #12
 3929 13f2 BD46     		mov	sp, r7
 3930 13f4 80BC     		pop	{r7}
 3931 13f6 7047     		bx	lr
 3932              		.cfi_endproc
 3933              	.LFE87:
 3935              		.align	2
 3936              		.global	TIM_SetIC3Prescaler
 3937              		.thumb
 3938              		.thumb_func
 3940              	TIM_SetIC3Prescaler:
 3941              	.LFB88:
2119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 3942              		.loc 1 2132 0
 3943              		.cfi_startproc
 3944              		@ args = 0, pretend = 0, frame = 8
 3945              		@ frame_needed = 1, uses_anonymous_args = 0
 3946              		@ link register save eliminated.
 3947 13f8 80B4     		push	{r7}
 3948              	.LCFI177:
 3949              		.cfi_def_cfa_offset 4
 3950              		.cfi_offset 7, -4
 3951 13fa 83B0     		sub	sp, sp, #12
 3952              	.LCFI178:
 3953              		.cfi_def_cfa_offset 16
 3954 13fc 00AF     		add	r7, sp, #0
 3955              	.LCFI179:
 3956              		.cfi_def_cfa_register 7
 3957 13fe 7860     		str	r0, [r7, #4]
 3958 1400 0B46     		mov	r3, r1
 3959 1402 7B80     		strh	r3, [r7, #2]	@ movhi
2133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 3960              		.loc 1 2138 0
 3961 1404 7B68     		ldr	r3, [r7, #4]
 3962 1406 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3963 1408 9BB2     		uxth	r3, r3
 3964 140a 23F00C03 		bic	r3, r3, #12
 3965 140e 9AB2     		uxth	r2, r3
 3966 1410 7B68     		ldr	r3, [r7, #4]
 3967 1412 9A83     		strh	r2, [r3, #28]	@ movhi
2139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC3PSC value */
2141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 3968              		.loc 1 2141 0
 3969 1414 7B68     		ldr	r3, [r7, #4]
 3970 1416 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3971 1418 9AB2     		uxth	r2, r3
 3972 141a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3973 141c 1343     		orrs	r3, r3, r2
 3974 141e 9AB2     		uxth	r2, r3
 3975 1420 7B68     		ldr	r3, [r7, #4]
 3976 1422 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 3977              		.loc 1 2142 0
 3978 1424 07F10C07 		add	r7, r7, #12
 3979 1428 BD46     		mov	sp, r7
 3980 142a 80BC     		pop	{r7}
 3981 142c 7047     		bx	lr
 3982              		.cfi_endproc
 3983              	.LFE88:
 3985 142e 00BF     		.align	2
 3986              		.global	TIM_SetIC4Prescaler
 3987              		.thumb
 3988              		.thumb_func
 3990              	TIM_SetIC4Prescaler:
 3991              	.LFB89:
2143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 3992              		.loc 1 2156 0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 8
 3995              		@ frame_needed = 1, uses_anonymous_args = 0
 3996              		@ link register save eliminated.
 3997 1430 80B4     		push	{r7}
 3998              	.LCFI180:
 3999              		.cfi_def_cfa_offset 4
 4000              		.cfi_offset 7, -4
 4001 1432 83B0     		sub	sp, sp, #12
 4002              	.LCFI181:
 4003              		.cfi_def_cfa_offset 16
 4004 1434 00AF     		add	r7, sp, #0
 4005              	.LCFI182:
 4006              		.cfi_def_cfa_register 7
 4007 1436 7860     		str	r0, [r7, #4]
 4008 1438 0B46     		mov	r3, r1
 4009 143a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4010              		.loc 1 2162 0
 4011 143c 7B68     		ldr	r3, [r7, #4]
 4012 143e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4013 1440 9BB2     		uxth	r3, r3
 4014 1442 23F44063 		bic	r3, r3, #3072
 4015 1446 9AB2     		uxth	r2, r3
 4016 1448 7B68     		ldr	r3, [r7, #4]
 4017 144a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the IC4PSC value */
2165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4018              		.loc 1 2165 0
 4019 144c 7B68     		ldr	r3, [r7, #4]
 4020 144e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4021 1450 9AB2     		uxth	r2, r3
 4022 1452 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4023 1454 4FEA0323 		lsl	r3, r3, #8
 4024 1458 9BB2     		uxth	r3, r3
 4025 145a 1343     		orrs	r3, r3, r2
 4026 145c 9AB2     		uxth	r2, r3
 4027 145e 7B68     		ldr	r3, [r7, #4]
 4028 1460 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4029              		.loc 1 2166 0
 4030 1462 07F10C07 		add	r7, r7, #12
 4031 1466 BD46     		mov	sp, r7
 4032 1468 80BC     		pop	{r7}
 4033 146a 7047     		bx	lr
 4034              		.cfi_endproc
 4035              	.LFE89:
 4037              		.align	2
 4038              		.global	TIM_BDTRConfig
 4039              		.thumb
 4040              		.thumb_func
 4042              	TIM_BDTRConfig:
 4043              	.LFB90:
2167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
2180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use the Break feature
2181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
2182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                          
2184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           AOE(automatic output enable).
2187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                
2188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           state or in a known state (according to the configuration made in
2194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           TIM_BDTRConfig() function).
2195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         and the AOE(automatic output enable).
2203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4044              		.loc 1 2209 0
 4045              		.cfi_startproc
 4046              		@ args = 0, pretend = 0, frame = 8
 4047              		@ frame_needed = 1, uses_anonymous_args = 0
 4048              		@ link register save eliminated.
 4049 146c 80B4     		push	{r7}
 4050              	.LCFI183:
 4051              		.cfi_def_cfa_offset 4
 4052              		.cfi_offset 7, -4
 4053 146e 83B0     		sub	sp, sp, #12
 4054              	.LCFI184:
 4055              		.cfi_def_cfa_offset 16
 4056 1470 00AF     		add	r7, sp, #0
 4057              	.LCFI185:
 4058              		.cfi_def_cfa_register 7
 4059 1472 7860     		str	r0, [r7, #4]
 4060 1474 3960     		str	r1, [r7, #0]
2210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4061              		.loc 1 2221 0
 4062 1476 3B68     		ldr	r3, [r7, #0]
 4063 1478 1A88     		ldrh	r2, [r3, #0]
 4064 147a 3B68     		ldr	r3, [r7, #0]
 4065 147c 5B88     		ldrh	r3, [r3, #2]
 4066 147e 1343     		orrs	r3, r3, r2
 4067 1480 9AB2     		uxth	r2, r3
2222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4068              		.loc 1 2222 0
 4069 1482 3B68     		ldr	r3, [r7, #0]
 4070 1484 9B88     		ldrh	r3, [r3, #4]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4071              		.loc 1 2221 0
 4072 1486 1343     		orrs	r3, r3, r2
 4073 1488 9AB2     		uxth	r2, r3
 4074              		.loc 1 2222 0
 4075 148a 3B68     		ldr	r3, [r7, #0]
 4076 148c DB88     		ldrh	r3, [r3, #6]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4077              		.loc 1 2221 0
 4078 148e 1343     		orrs	r3, r3, r2
 4079 1490 9AB2     		uxth	r2, r3
2223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4080              		.loc 1 2223 0
 4081 1492 3B68     		ldr	r3, [r7, #0]
 4082 1494 1B89     		ldrh	r3, [r3, #8]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4083              		.loc 1 2221 0
 4084 1496 1343     		orrs	r3, r3, r2
 4085 1498 9AB2     		uxth	r2, r3
 4086              		.loc 1 2223 0
 4087 149a 3B68     		ldr	r3, [r7, #0]
 4088 149c 5B89     		ldrh	r3, [r3, #10]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4089              		.loc 1 2221 0
 4090 149e 1343     		orrs	r3, r3, r2
 4091 14a0 9AB2     		uxth	r2, r3
2224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4092              		.loc 1 2224 0
 4093 14a2 3B68     		ldr	r3, [r7, #0]
 4094 14a4 9B89     		ldrh	r3, [r3, #12]
2221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4095              		.loc 1 2221 0
 4096 14a6 1343     		orrs	r3, r3, r2
 4097 14a8 9AB2     		uxth	r2, r3
 4098 14aa 7B68     		ldr	r3, [r7, #4]
 4099 14ac A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4100              		.loc 1 2225 0
 4101 14b0 07F10C07 		add	r7, r7, #12
 4102 14b4 BD46     		mov	sp, r7
 4103 14b6 80BC     		pop	{r7}
 4104 14b8 7047     		bx	lr
 4105              		.cfi_endproc
 4106              	.LFE90:
 4108 14ba 00BF     		.align	2
 4109              		.global	TIM_BDTRStructInit
 4110              		.thumb
 4111              		.thumb_func
 4113              	TIM_BDTRStructInit:
 4114              	.LFB91:
2226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         will be initialized.
2231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4115              		.loc 1 2234 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 8
 4118              		@ frame_needed = 1, uses_anonymous_args = 0
 4119              		@ link register save eliminated.
 4120 14bc 80B4     		push	{r7}
 4121              	.LCFI186:
 4122              		.cfi_def_cfa_offset 4
 4123              		.cfi_offset 7, -4
 4124 14be 83B0     		sub	sp, sp, #12
 4125              	.LCFI187:
 4126              		.cfi_def_cfa_offset 16
 4127 14c0 00AF     		add	r7, sp, #0
 4128              	.LCFI188:
 4129              		.cfi_def_cfa_register 7
 4130 14c2 7860     		str	r0, [r7, #4]
2235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the default configuration */
2236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4131              		.loc 1 2236 0
 4132 14c4 7B68     		ldr	r3, [r7, #4]
 4133 14c6 4FF00002 		mov	r2, #0
 4134 14ca 1A80     		strh	r2, [r3, #0]	@ movhi
2237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4135              		.loc 1 2237 0
 4136 14cc 7B68     		ldr	r3, [r7, #4]
 4137 14ce 4FF00002 		mov	r2, #0
 4138 14d2 5A80     		strh	r2, [r3, #2]	@ movhi
2238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4139              		.loc 1 2238 0
 4140 14d4 7B68     		ldr	r3, [r7, #4]
 4141 14d6 4FF00002 		mov	r2, #0
 4142 14da 9A80     		strh	r2, [r3, #4]	@ movhi
2239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4143              		.loc 1 2239 0
 4144 14dc 7B68     		ldr	r3, [r7, #4]
 4145 14de 4FF00002 		mov	r2, #0
 4146 14e2 DA80     		strh	r2, [r3, #6]	@ movhi
2240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4147              		.loc 1 2240 0
 4148 14e4 7B68     		ldr	r3, [r7, #4]
 4149 14e6 4FF00002 		mov	r2, #0
 4150 14ea 1A81     		strh	r2, [r3, #8]	@ movhi
2241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4151              		.loc 1 2241 0
 4152 14ec 7B68     		ldr	r3, [r7, #4]
 4153 14ee 4FF00002 		mov	r2, #0
 4154 14f2 5A81     		strh	r2, [r3, #10]	@ movhi
2242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4155              		.loc 1 2242 0
 4156 14f4 7B68     		ldr	r3, [r7, #4]
 4157 14f6 4FF00002 		mov	r2, #0
 4158 14fa 9A81     		strh	r2, [r3, #12]	@ movhi
2243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4159              		.loc 1 2243 0
 4160 14fc 07F10C07 		add	r7, r7, #12
 4161 1500 BD46     		mov	sp, r7
 4162 1502 80BC     		pop	{r7}
 4163 1504 7047     		bx	lr
 4164              		.cfi_endproc
 4165              	.LFE91:
 4167 1506 00BF     		.align	2
 4168              		.global	TIM_CtrlPWMOutputs
 4169              		.thumb
 4170              		.thumb_func
 4172              	TIM_CtrlPWMOutputs:
 4173              	.LFB92:
2244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4174              		.loc 1 2253 0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 8
 4177              		@ frame_needed = 1, uses_anonymous_args = 0
 4178              		@ link register save eliminated.
 4179 1508 80B4     		push	{r7}
 4180              	.LCFI189:
 4181              		.cfi_def_cfa_offset 4
 4182              		.cfi_offset 7, -4
 4183 150a 83B0     		sub	sp, sp, #12
 4184              	.LCFI190:
 4185              		.cfi_def_cfa_offset 16
 4186 150c 00AF     		add	r7, sp, #0
 4187              	.LCFI191:
 4188              		.cfi_def_cfa_register 7
 4189 150e 7860     		str	r0, [r7, #4]
 4190 1510 0B46     		mov	r3, r1
 4191 1512 FB70     		strb	r3, [r7, #3]
2254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4192              		.loc 1 2258 0
 4193 1514 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4194 1516 002B     		cmp	r3, #0
 4195 1518 0CD0     		beq	.L113
2259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the TIM Main Output */
2261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4196              		.loc 1 2261 0
 4197 151a 7B68     		ldr	r3, [r7, #4]
 4198 151c B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4199 1520 9BB2     		uxth	r3, r3
 4200 1522 6FEA4343 		mvn	r3, r3, lsl #17
 4201 1526 6FEA5343 		mvn	r3, r3, lsr #17
 4202 152a 9AB2     		uxth	r2, r3
 4203 152c 7B68     		ldr	r3, [r7, #4]
 4204 152e A3F84420 		strh	r2, [r3, #68]	@ movhi
 4205 1532 0BE0     		b	.L112
 4206              	.L113:
2262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the TIM Main Output */
2266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4207              		.loc 1 2266 0
 4208 1534 7B68     		ldr	r3, [r7, #4]
 4209 1536 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4210 153a 9BB2     		uxth	r3, r3
 4211 153c 4FEA4343 		lsl	r3, r3, #17
 4212 1540 4FEA5343 		lsr	r3, r3, #17
 4213 1544 9AB2     		uxth	r2, r3
 4214 1546 7B68     		ldr	r3, [r7, #4]
 4215 1548 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4216              	.L112:
2267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }  
2268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4217              		.loc 1 2268 0
 4218 154c 07F10C07 		add	r7, r7, #12
 4219 1550 BD46     		mov	sp, r7
 4220 1552 80BC     		pop	{r7}
 4221 1554 7047     		bx	lr
 4222              		.cfi_endproc
 4223              	.LFE92:
 4225 1556 00BF     		.align	2
 4226              		.global	TIM_SelectCOM
 4227              		.thumb
 4228              		.thumb_func
 4230              	TIM_SelectCOM:
 4231              	.LFB93:
2269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4232              		.loc 1 2278 0
 4233              		.cfi_startproc
 4234              		@ args = 0, pretend = 0, frame = 8
 4235              		@ frame_needed = 1, uses_anonymous_args = 0
 4236              		@ link register save eliminated.
 4237 1558 80B4     		push	{r7}
 4238              	.LCFI192:
 4239              		.cfi_def_cfa_offset 4
 4240              		.cfi_offset 7, -4
 4241 155a 83B0     		sub	sp, sp, #12
 4242              	.LCFI193:
 4243              		.cfi_def_cfa_offset 16
 4244 155c 00AF     		add	r7, sp, #0
 4245              	.LCFI194:
 4246              		.cfi_def_cfa_register 7
 4247 155e 7860     		str	r0, [r7, #4]
 4248 1560 0B46     		mov	r3, r1
 4249 1562 FB70     		strb	r3, [r7, #3]
2279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4250              		.loc 1 2283 0
 4251 1564 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4252 1566 002B     		cmp	r3, #0
 4253 1568 08D0     		beq	.L116
2284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the COM Bit */
2286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4254              		.loc 1 2286 0
 4255 156a 7B68     		ldr	r3, [r7, #4]
 4256 156c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4257 156e 9BB2     		uxth	r3, r3
 4258 1570 43F00403 		orr	r3, r3, #4
 4259 1574 9AB2     		uxth	r2, r3
 4260 1576 7B68     		ldr	r3, [r7, #4]
 4261 1578 9A80     		strh	r2, [r3, #4]	@ movhi
 4262 157a 07E0     		b	.L115
 4263              	.L116:
2287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the COM Bit */
2291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4264              		.loc 1 2291 0
 4265 157c 7B68     		ldr	r3, [r7, #4]
 4266 157e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4267 1580 9BB2     		uxth	r3, r3
 4268 1582 23F00403 		bic	r3, r3, #4
 4269 1586 9AB2     		uxth	r2, r3
 4270 1588 7B68     		ldr	r3, [r7, #4]
 4271 158a 9A80     		strh	r2, [r3, #4]	@ movhi
 4272              	.L115:
2292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4273              		.loc 1 2293 0
 4274 158c 07F10C07 		add	r7, r7, #12
 4275 1590 BD46     		mov	sp, r7
 4276 1592 80BC     		pop	{r7}
 4277 1594 7047     		bx	lr
 4278              		.cfi_endproc
 4279              	.LFE93:
 4281 1596 00BF     		.align	2
 4282              		.global	TIM_CCPreloadControl
 4283              		.thumb
 4284              		.thumb_func
 4286              	TIM_CCPreloadControl:
 4287              	.LFB94:
2294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 4288              		.loc 1 2303 0
 4289              		.cfi_startproc
 4290              		@ args = 0, pretend = 0, frame = 8
 4291              		@ frame_needed = 1, uses_anonymous_args = 0
 4292              		@ link register save eliminated.
 4293 1598 80B4     		push	{r7}
 4294              	.LCFI195:
 4295              		.cfi_def_cfa_offset 4
 4296              		.cfi_offset 7, -4
 4297 159a 83B0     		sub	sp, sp, #12
 4298              	.LCFI196:
 4299              		.cfi_def_cfa_offset 16
 4300 159c 00AF     		add	r7, sp, #0
 4301              	.LCFI197:
 4302              		.cfi_def_cfa_register 7
 4303 159e 7860     		str	r0, [r7, #4]
 4304 15a0 0B46     		mov	r3, r1
 4305 15a2 FB70     		strb	r3, [r7, #3]
2304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4306              		.loc 1 2307 0
 4307 15a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4308 15a6 002B     		cmp	r3, #0
 4309 15a8 08D0     		beq	.L119
2308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the CCPC Bit */
2310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4310              		.loc 1 2310 0
 4311 15aa 7B68     		ldr	r3, [r7, #4]
 4312 15ac 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4313 15ae 9BB2     		uxth	r3, r3
 4314 15b0 43F00103 		orr	r3, r3, #1
 4315 15b4 9AB2     		uxth	r2, r3
 4316 15b6 7B68     		ldr	r3, [r7, #4]
 4317 15b8 9A80     		strh	r2, [r3, #4]	@ movhi
 4318 15ba 07E0     		b	.L118
 4319              	.L119:
2311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the CCPC Bit */
2315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4320              		.loc 1 2315 0
 4321 15bc 7B68     		ldr	r3, [r7, #4]
 4322 15be 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4323 15c0 9BB2     		uxth	r3, r3
 4324 15c2 23F00103 		bic	r3, r3, #1
 4325 15c6 9AB2     		uxth	r2, r3
 4326 15c8 7B68     		ldr	r3, [r7, #4]
 4327 15ca 9A80     		strh	r2, [r3, #4]	@ movhi
 4328              	.L118:
2316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4329              		.loc 1 2317 0
 4330 15cc 07F10C07 		add	r7, r7, #12
 4331 15d0 BD46     		mov	sp, r7
 4332 15d2 80BC     		pop	{r7}
 4333 15d4 7047     		bx	lr
 4334              		.cfi_endproc
 4335              	.LFE94:
 4337 15d6 00BF     		.align	2
 4338              		.global	TIM_ITConfig
 4339              		.thumb
 4340              		.thumb_func
 4342              	TIM_ITConfig:
 4343              	.LFB95:
2318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  
2348:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *        
2355:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2358:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2359:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 4344              		.loc 1 2360 0
 4345              		.cfi_startproc
 4346              		@ args = 0, pretend = 0, frame = 8
 4347              		@ frame_needed = 1, uses_anonymous_args = 0
 4348              		@ link register save eliminated.
 4349 15d8 80B4     		push	{r7}
 4350              	.LCFI198:
 4351              		.cfi_def_cfa_offset 4
 4352              		.cfi_offset 7, -4
 4353 15da 83B0     		sub	sp, sp, #12
 4354              	.LCFI199:
 4355              		.cfi_def_cfa_offset 16
 4356 15dc 00AF     		add	r7, sp, #0
 4357              	.LCFI200:
 4358              		.cfi_def_cfa_register 7
 4359 15de 7860     		str	r0, [r7, #4]
 4360 15e0 1346     		mov	r3, r2
 4361 15e2 0A46     		mov	r2, r1	@ movhi
 4362 15e4 7A80     		strh	r2, [r7, #2]	@ movhi
 4363 15e6 7B70     		strb	r3, [r7, #1]
2361:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2362:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2366:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4364              		.loc 1 2366 0
 4365 15e8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4366 15ea 002B     		cmp	r3, #0
 4367 15ec 08D0     		beq	.L122
2367:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2368:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the Interrupt sources */
2369:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4368              		.loc 1 2369 0
 4369 15ee 7B68     		ldr	r3, [r7, #4]
 4370 15f0 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4371 15f2 9AB2     		uxth	r2, r3
 4372 15f4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4373 15f6 1343     		orrs	r3, r3, r2
 4374 15f8 9AB2     		uxth	r2, r3
 4375 15fa 7B68     		ldr	r3, [r7, #4]
 4376 15fc 9A81     		strh	r2, [r3, #12]	@ movhi
 4377 15fe 0AE0     		b	.L121
 4378              	.L122:
2370:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2371:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2372:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2373:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the Interrupt sources */
2374:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4379              		.loc 1 2374 0
 4380 1600 7B68     		ldr	r3, [r7, #4]
 4381 1602 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4382 1604 9AB2     		uxth	r2, r3
 4383 1606 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4384 1608 6FEA0303 		mvn	r3, r3
 4385 160c 9BB2     		uxth	r3, r3
 4386 160e 1340     		ands	r3, r3, r2
 4387 1610 9AB2     		uxth	r2, r3
 4388 1612 7B68     		ldr	r3, [r7, #4]
 4389 1614 9A81     		strh	r2, [r3, #12]	@ movhi
 4390              	.L121:
2375:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2376:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4391              		.loc 1 2376 0
 4392 1616 07F10C07 		add	r7, r7, #12
 4393 161a BD46     		mov	sp, r7
 4394 161c 80BC     		pop	{r7}
 4395 161e 7047     		bx	lr
 4396              		.cfi_endproc
 4397              	.LFE95:
 4399              		.align	2
 4400              		.global	TIM_GenerateEvent
 4401              		.thumb
 4402              		.thumb_func
 4404              	TIM_GenerateEvent:
 4405              	.LFB96:
2377:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2378:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2379:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * 
2392:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *        
2395:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2396:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2397:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 4406              		.loc 1 2398 0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 8
 4409              		@ frame_needed = 1, uses_anonymous_args = 0
 4410              		@ link register save eliminated.
 4411 1620 80B4     		push	{r7}
 4412              	.LCFI201:
 4413              		.cfi_def_cfa_offset 4
 4414              		.cfi_offset 7, -4
 4415 1622 83B0     		sub	sp, sp, #12
 4416              	.LCFI202:
 4417              		.cfi_def_cfa_offset 16
 4418 1624 00AF     		add	r7, sp, #0
 4419              	.LCFI203:
 4420              		.cfi_def_cfa_register 7
 4421 1626 7860     		str	r0, [r7, #4]
 4422 1628 0B46     		mov	r3, r1
 4423 162a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2400:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  
2403:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the event sources */
2404:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4424              		.loc 1 2404 0
 4425 162c 7B68     		ldr	r3, [r7, #4]
 4426 162e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4427 1630 9A82     		strh	r2, [r3, #20]	@ movhi
2405:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4428              		.loc 1 2405 0
 4429 1632 07F10C07 		add	r7, r7, #12
 4430 1636 BD46     		mov	sp, r7
 4431 1638 80BC     		pop	{r7}
 4432 163a 7047     		bx	lr
 4433              		.cfi_endproc
 4434              	.LFE96:
 4436              		.align	2
 4437              		.global	TIM_GetFlagStatus
 4438              		.thumb
 4439              		.thumb_func
 4441              	TIM_GetFlagStatus:
 4442              	.LFB97:
2406:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2407:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2408:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2412:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2425:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2428:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2430:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 4443              		.loc 1 2431 0
 4444              		.cfi_startproc
 4445              		@ args = 0, pretend = 0, frame = 16
 4446              		@ frame_needed = 1, uses_anonymous_args = 0
 4447              		@ link register save eliminated.
 4448 163c 80B4     		push	{r7}
 4449              	.LCFI204:
 4450              		.cfi_def_cfa_offset 4
 4451              		.cfi_offset 7, -4
 4452 163e 85B0     		sub	sp, sp, #20
 4453              	.LCFI205:
 4454              		.cfi_def_cfa_offset 24
 4455 1640 00AF     		add	r7, sp, #0
 4456              	.LCFI206:
 4457              		.cfi_def_cfa_register 7
 4458 1642 7860     		str	r0, [r7, #4]
 4459 1644 0B46     		mov	r3, r1
 4460 1646 7B80     		strh	r3, [r7, #2]	@ movhi
2432:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ITStatus bitstatus = RESET;  
 4461              		.loc 1 2432 0
 4462 1648 4FF00003 		mov	r3, #0
 4463 164c FB73     		strb	r3, [r7, #15]
2433:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2434:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2437:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2438:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4464              		.loc 1 2438 0
 4465 164e 7B68     		ldr	r3, [r7, #4]
 4466 1650 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4467 1652 9AB2     		uxth	r2, r3
 4468 1654 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4469 1656 1340     		ands	r3, r3, r2
 4470 1658 9BB2     		uxth	r3, r3
 4471 165a 002B     		cmp	r3, #0
 4472 165c 03D0     		beq	.L126
2439:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2440:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = SET;
 4473              		.loc 1 2440 0
 4474 165e 4FF00103 		mov	r3, #1
 4475 1662 FB73     		strb	r3, [r7, #15]
 4476 1664 02E0     		b	.L127
 4477              	.L126:
2441:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2442:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2443:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2444:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = RESET;
 4478              		.loc 1 2444 0
 4479 1666 4FF00003 		mov	r3, #0
 4480 166a FB73     		strb	r3, [r7, #15]
 4481              	.L127:
2445:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2446:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return bitstatus;
 4482              		.loc 1 2446 0
 4483 166c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4484              		.loc 1 2447 0
 4485 166e 1846     		mov	r0, r3
 4486 1670 07F11407 		add	r7, r7, #20
 4487 1674 BD46     		mov	sp, r7
 4488 1676 80BC     		pop	{r7}
 4489 1678 7047     		bx	lr
 4490              		.cfi_endproc
 4491              	.LFE97:
 4493 167a 00BF     		.align	2
 4494              		.global	TIM_ClearFlag
 4495              		.thumb
 4496              		.thumb_func
 4498              	TIM_ClearFlag:
 4499              	.LFB98:
2448:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2449:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2450:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2467:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *    
2470:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2471:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2472:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {  
 4500              		.loc 1 2473 0
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 8
 4503              		@ frame_needed = 1, uses_anonymous_args = 0
 4504              		@ link register save eliminated.
 4505 167c 80B4     		push	{r7}
 4506              	.LCFI207:
 4507              		.cfi_def_cfa_offset 4
 4508              		.cfi_offset 7, -4
 4509 167e 83B0     		sub	sp, sp, #12
 4510              	.LCFI208:
 4511              		.cfi_def_cfa_offset 16
 4512 1680 00AF     		add	r7, sp, #0
 4513              	.LCFI209:
 4514              		.cfi_def_cfa_register 7
 4515 1682 7860     		str	r0, [r7, #4]
 4516 1684 0B46     		mov	r3, r1
 4517 1686 7B80     		strh	r3, [r7, #2]	@ movhi
2474:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2475:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
2477:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Clear the flags */
2478:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4518              		.loc 1 2478 0
 4519 1688 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4520 168a 6FEA0303 		mvn	r3, r3
 4521 168e 9AB2     		uxth	r2, r3
 4522 1690 7B68     		ldr	r3, [r7, #4]
 4523 1692 1A82     		strh	r2, [r3, #16]	@ movhi
2479:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4524              		.loc 1 2479 0
 4525 1694 07F10C07 		add	r7, r7, #12
 4526 1698 BD46     		mov	sp, r7
 4527 169a 80BC     		pop	{r7}
 4528 169c 7047     		bx	lr
 4529              		.cfi_endproc
 4530              	.LFE98:
 4532 169e 00BF     		.align	2
 4533              		.global	TIM_GetITStatus
 4534              		.thumb
 4535              		.thumb_func
 4537              	TIM_GetITStatus:
 4538              	.LFB99:
2480:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2481:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2482:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2486:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2495:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
2498:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2500:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4539              		.loc 1 2501 0
 4540              		.cfi_startproc
 4541              		@ args = 0, pretend = 0, frame = 16
 4542              		@ frame_needed = 1, uses_anonymous_args = 0
 4543              		@ link register save eliminated.
 4544 16a0 80B4     		push	{r7}
 4545              	.LCFI210:
 4546              		.cfi_def_cfa_offset 4
 4547              		.cfi_offset 7, -4
 4548 16a2 85B0     		sub	sp, sp, #20
 4549              	.LCFI211:
 4550              		.cfi_def_cfa_offset 24
 4551 16a4 00AF     		add	r7, sp, #0
 4552              	.LCFI212:
 4553              		.cfi_def_cfa_register 7
 4554 16a6 7860     		str	r0, [r7, #4]
 4555 16a8 0B46     		mov	r3, r1
 4556 16aa 7B80     		strh	r3, [r7, #2]	@ movhi
2502:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   ITStatus bitstatus = RESET;  
 4557              		.loc 1 2502 0
 4558 16ac 4FF00003 		mov	r3, #0
 4559 16b0 FB73     		strb	r3, [r7, #15]
2503:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4560              		.loc 1 2503 0
 4561 16b2 4FF00003 		mov	r3, #0
 4562 16b6 BB81     		strh	r3, [r7, #12]	@ movhi
 4563 16b8 4FF00003 		mov	r3, #0
 4564 16bc 7B81     		strh	r3, [r7, #10]	@ movhi
2504:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2505:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****    
2508:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4565              		.loc 1 2508 0
 4566 16be 7B68     		ldr	r3, [r7, #4]
 4567 16c0 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4568 16c2 9AB2     		uxth	r2, r3
 4569 16c4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4570 16c6 1340     		ands	r3, r3, r2
 4571 16c8 BB81     		strh	r3, [r7, #12]	@ movhi
2509:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2510:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4572              		.loc 1 2510 0
 4573 16ca 7B68     		ldr	r3, [r7, #4]
 4574 16cc 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4575 16ce 9AB2     		uxth	r2, r3
 4576 16d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4577 16d2 1340     		ands	r3, r3, r2
 4578 16d4 7B81     		strh	r3, [r7, #10]	@ movhi
2511:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4579              		.loc 1 2511 0
 4580 16d6 BB89     		ldrh	r3, [r7, #12]
 4581 16d8 002B     		cmp	r3, #0
 4582 16da 06D0     		beq	.L130
 4583              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4584 16dc 7B89     		ldrh	r3, [r7, #10]
 4585 16de 002B     		cmp	r3, #0
 4586 16e0 03D0     		beq	.L130
2512:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2513:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = SET;
 4587              		.loc 1 2513 0 is_stmt 1
 4588 16e2 4FF00103 		mov	r3, #1
 4589 16e6 FB73     		strb	r3, [r7, #15]
 4590 16e8 02E0     		b	.L131
 4591              	.L130:
2514:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2515:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2516:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2517:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     bitstatus = RESET;
 4592              		.loc 1 2517 0
 4593 16ea 4FF00003 		mov	r3, #0
 4594 16ee FB73     		strb	r3, [r7, #15]
 4595              	.L131:
2518:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2519:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   return bitstatus;
 4596              		.loc 1 2519 0
 4597 16f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4598              		.loc 1 2520 0
 4599 16f2 1846     		mov	r0, r3
 4600 16f4 07F11407 		add	r7, r7, #20
 4601 16f8 BD46     		mov	sp, r7
 4602 16fa 80BC     		pop	{r7}
 4603 16fc 7047     		bx	lr
 4604              		.cfi_endproc
 4605              	.LFE99:
 4607 16fe 00BF     		.align	2
 4608              		.global	TIM_ClearITPendingBit
 4609              		.thumb
 4610              		.thumb_func
 4612              	TIM_ClearITPendingBit:
 4613              	.LFB100:
2521:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2522:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2523:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2536:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *      
2539:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2540:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2541:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4614              		.loc 1 2542 0
 4615              		.cfi_startproc
 4616              		@ args = 0, pretend = 0, frame = 8
 4617              		@ frame_needed = 1, uses_anonymous_args = 0
 4618              		@ link register save eliminated.
 4619 1700 80B4     		push	{r7}
 4620              	.LCFI213:
 4621              		.cfi_def_cfa_offset 4
 4622              		.cfi_offset 7, -4
 4623 1702 83B0     		sub	sp, sp, #12
 4624              	.LCFI214:
 4625              		.cfi_def_cfa_offset 16
 4626 1704 00AF     		add	r7, sp, #0
 4627              	.LCFI215:
 4628              		.cfi_def_cfa_register 7
 4629 1706 7860     		str	r0, [r7, #4]
 4630 1708 0B46     		mov	r3, r1
 4631 170a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2544:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2546:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Clear the IT pending Bit */
2547:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4632              		.loc 1 2547 0
 4633 170c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4634 170e 6FEA0303 		mvn	r3, r3
 4635 1712 9AB2     		uxth	r2, r3
 4636 1714 7B68     		ldr	r3, [r7, #4]
 4637 1716 1A82     		strh	r2, [r3, #16]	@ movhi
2548:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4638              		.loc 1 2548 0
 4639 1718 07F10C07 		add	r7, r7, #12
 4640 171c BD46     		mov	sp, r7
 4641 171e 80BC     		pop	{r7}
 4642 1720 7047     		bx	lr
 4643              		.cfi_endproc
 4644              	.LFE100:
 4646 1722 00BF     		.align	2
 4647              		.global	TIM_DMAConfig
 4648              		.thumb
 4649              		.thumb_func
 4651              	TIM_DMAConfig:
 4652              	.LFB101:
2549:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2550:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2551:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2555:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2577:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2578:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4653              		.loc 1 2579 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 8
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657              		@ link register save eliminated.
 4658 1724 80B4     		push	{r7}
 4659              	.LCFI216:
 4660              		.cfi_def_cfa_offset 4
 4661              		.cfi_offset 7, -4
 4662 1726 83B0     		sub	sp, sp, #12
 4663              	.LCFI217:
 4664              		.cfi_def_cfa_offset 16
 4665 1728 00AF     		add	r7, sp, #0
 4666              	.LCFI218:
 4667              		.cfi_def_cfa_register 7
 4668 172a 7860     		str	r0, [r7, #4]
 4669 172c 1346     		mov	r3, r2
 4670 172e 0A46     		mov	r2, r1	@ movhi
 4671 1730 7A80     		strh	r2, [r7, #2]	@ movhi
 4672 1732 3B80     		strh	r3, [r7, #0]	@ movhi
2580:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2581:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2585:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4673              		.loc 1 2586 0
 4674 1734 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4675 1736 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4676 1738 1343     		orrs	r3, r3, r2
 4677 173a 9AB2     		uxth	r2, r3
 4678 173c 7B68     		ldr	r3, [r7, #4]
 4679 173e A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4680              		.loc 1 2587 0
 4681 1742 07F10C07 		add	r7, r7, #12
 4682 1746 BD46     		mov	sp, r7
 4683 1748 80BC     		pop	{r7}
 4684 174a 7047     		bx	lr
 4685              		.cfi_endproc
 4686              	.LFE101:
 4688              		.align	2
 4689              		.global	TIM_DMACmd
 4690              		.thumb
 4691              		.thumb_func
 4693              	TIM_DMACmd:
 4694              	.LFB102:
2588:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2589:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2590:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2604:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2605:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** { 
 4695              		.loc 1 2606 0
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 8
 4698              		@ frame_needed = 1, uses_anonymous_args = 0
 4699              		@ link register save eliminated.
 4700 174c 80B4     		push	{r7}
 4701              	.LCFI219:
 4702              		.cfi_def_cfa_offset 4
 4703              		.cfi_offset 7, -4
 4704 174e 83B0     		sub	sp, sp, #12
 4705              	.LCFI220:
 4706              		.cfi_def_cfa_offset 16
 4707 1750 00AF     		add	r7, sp, #0
 4708              	.LCFI221:
 4709              		.cfi_def_cfa_register 7
 4710 1752 7860     		str	r0, [r7, #4]
 4711 1754 1346     		mov	r3, r2
 4712 1756 0A46     		mov	r2, r1	@ movhi
 4713 1758 7A80     		strh	r2, [r7, #2]	@ movhi
 4714 175a 7B70     		strb	r3, [r7, #1]
2607:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2608:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2612:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4715              		.loc 1 2612 0
 4716 175c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4717 175e 002B     		cmp	r3, #0
 4718 1760 08D0     		beq	.L135
2613:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2614:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Enable the DMA sources */
2615:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4719              		.loc 1 2615 0
 4720 1762 7B68     		ldr	r3, [r7, #4]
 4721 1764 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4722 1766 9AB2     		uxth	r2, r3
 4723 1768 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4724 176a 1343     		orrs	r3, r3, r2
 4725 176c 9AB2     		uxth	r2, r3
 4726 176e 7B68     		ldr	r3, [r7, #4]
 4727 1770 9A81     		strh	r2, [r3, #12]	@ movhi
 4728 1772 0AE0     		b	.L134
 4729              	.L135:
2616:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2617:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2618:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2619:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Disable the DMA sources */
2620:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4730              		.loc 1 2620 0
 4731 1774 7B68     		ldr	r3, [r7, #4]
 4732 1776 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4733 1778 9AB2     		uxth	r2, r3
 4734 177a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4735 177c 6FEA0303 		mvn	r3, r3
 4736 1780 9BB2     		uxth	r3, r3
 4737 1782 1340     		ands	r3, r3, r2
 4738 1784 9AB2     		uxth	r2, r3
 4739 1786 7B68     		ldr	r3, [r7, #4]
 4740 1788 9A81     		strh	r2, [r3, #12]	@ movhi
 4741              	.L134:
2621:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2622:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4742              		.loc 1 2622 0
 4743 178a 07F10C07 		add	r7, r7, #12
 4744 178e BD46     		mov	sp, r7
 4745 1790 80BC     		pop	{r7}
 4746 1792 7047     		bx	lr
 4747              		.cfi_endproc
 4748              	.LFE102:
 4750              		.align	2
 4751              		.global	TIM_SelectCCDMA
 4752              		.thumb
 4753              		.thumb_func
 4755              	TIM_SelectCCDMA:
 4756              	.LFB103:
2623:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2624:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2625:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2630:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2631:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4757              		.loc 1 2632 0
 4758              		.cfi_startproc
 4759              		@ args = 0, pretend = 0, frame = 8
 4760              		@ frame_needed = 1, uses_anonymous_args = 0
 4761              		@ link register save eliminated.
 4762 1794 80B4     		push	{r7}
 4763              	.LCFI222:
 4764              		.cfi_def_cfa_offset 4
 4765              		.cfi_offset 7, -4
 4766 1796 83B0     		sub	sp, sp, #12
 4767              	.LCFI223:
 4768              		.cfi_def_cfa_offset 16
 4769 1798 00AF     		add	r7, sp, #0
 4770              	.LCFI224:
 4771              		.cfi_def_cfa_register 7
 4772 179a 7860     		str	r0, [r7, #4]
 4773 179c 0B46     		mov	r3, r1
 4774 179e FB70     		strb	r3, [r7, #3]
2633:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2634:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2637:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 4775              		.loc 1 2637 0
 4776 17a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4777 17a2 002B     		cmp	r3, #0
 4778 17a4 08D0     		beq	.L138
2638:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2639:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the CCDS Bit */
2640:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4779              		.loc 1 2640 0
 4780 17a6 7B68     		ldr	r3, [r7, #4]
 4781 17a8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4782 17aa 9BB2     		uxth	r3, r3
 4783 17ac 43F00803 		orr	r3, r3, #8
 4784 17b0 9AB2     		uxth	r2, r3
 4785 17b2 7B68     		ldr	r3, [r7, #4]
 4786 17b4 9A80     		strh	r2, [r3, #4]	@ movhi
 4787 17b6 07E0     		b	.L137
 4788              	.L138:
2641:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2642:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2643:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2644:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the CCDS Bit */
2645:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4789              		.loc 1 2645 0
 4790 17b8 7B68     		ldr	r3, [r7, #4]
 4791 17ba 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4792 17bc 9BB2     		uxth	r3, r3
 4793 17be 23F00803 		bic	r3, r3, #8
 4794 17c2 9AB2     		uxth	r2, r3
 4795 17c4 7B68     		ldr	r3, [r7, #4]
 4796 17c6 9A80     		strh	r2, [r3, #4]	@ movhi
 4797              	.L137:
2646:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2647:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4798              		.loc 1 2647 0
 4799 17c8 07F10C07 		add	r7, r7, #12
 4800 17cc BD46     		mov	sp, r7
 4801 17ce 80BC     		pop	{r7}
 4802 17d0 7047     		bx	lr
 4803              		.cfi_endproc
 4804              	.LFE103:
 4806 17d2 00BF     		.align	2
 4807              		.global	TIM_InternalClockConfig
 4808              		.thumb
 4809              		.thumb_func
 4811              	TIM_InternalClockConfig:
 4812              	.LFB104:
2648:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2649:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2650:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2651:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2652:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Clocks management functions
2654:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2655:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2656:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2657:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                          Clocks management functions
2658:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2659:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2660:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2661:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2662:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2663:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2664:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2665:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2668:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2669:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2670:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4813              		.loc 1 2671 0
 4814              		.cfi_startproc
 4815              		@ args = 0, pretend = 0, frame = 8
 4816              		@ frame_needed = 1, uses_anonymous_args = 0
 4817              		@ link register save eliminated.
 4818 17d4 80B4     		push	{r7}
 4819              	.LCFI225:
 4820              		.cfi_def_cfa_offset 4
 4821              		.cfi_offset 7, -4
 4822 17d6 83B0     		sub	sp, sp, #12
 4823              	.LCFI226:
 4824              		.cfi_def_cfa_offset 16
 4825 17d8 00AF     		add	r7, sp, #0
 4826              	.LCFI227:
 4827              		.cfi_def_cfa_register 7
 4828 17da 7860     		str	r0, [r7, #4]
2672:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2673:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2675:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4829              		.loc 1 2676 0
 4830 17dc 7B68     		ldr	r3, [r7, #4]
 4831 17de 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4832 17e0 9BB2     		uxth	r3, r3
 4833 17e2 23F00703 		bic	r3, r3, #7
 4834 17e6 9AB2     		uxth	r2, r3
 4835 17e8 7B68     		ldr	r3, [r7, #4]
 4836 17ea 1A81     		strh	r2, [r3, #8]	@ movhi
2677:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4837              		.loc 1 2677 0
 4838 17ec 07F10C07 		add	r7, r7, #12
 4839 17f0 BD46     		mov	sp, r7
 4840 17f2 80BC     		pop	{r7}
 4841 17f4 7047     		bx	lr
 4842              		.cfi_endproc
 4843              	.LFE104:
 4845 17f6 00BF     		.align	2
 4846              		.global	TIM_ITRxExternalClockConfig
 4847              		.thumb
 4848              		.thumb_func
 4850              	TIM_ITRxExternalClockConfig:
 4851              	.LFB105:
2678:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2679:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2680:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
2683:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2685:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2690:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2691:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4852              		.loc 1 2692 0
 4853              		.cfi_startproc
 4854              		@ args = 0, pretend = 0, frame = 8
 4855              		@ frame_needed = 1, uses_anonymous_args = 0
 4856 17f8 80B5     		push	{r7, lr}
 4857              	.LCFI228:
 4858              		.cfi_def_cfa_offset 8
 4859              		.cfi_offset 14, -4
 4860              		.cfi_offset 7, -8
 4861 17fa 82B0     		sub	sp, sp, #8
 4862              	.LCFI229:
 4863              		.cfi_def_cfa_offset 16
 4864 17fc 00AF     		add	r7, sp, #0
 4865              	.LCFI230:
 4866              		.cfi_def_cfa_register 7
 4867 17fe 7860     		str	r0, [r7, #4]
 4868 1800 0B46     		mov	r3, r1
 4869 1802 7B80     		strh	r3, [r7, #2]	@ movhi
2693:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2694:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2697:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Internal Trigger */
2698:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4870              		.loc 1 2698 0
 4871 1804 7B88     		ldrh	r3, [r7, #2]
 4872 1806 7868     		ldr	r0, [r7, #4]
 4873 1808 1946     		mov	r1, r3
 4874 180a FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2700:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2701:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4875              		.loc 1 2701 0
 4876 180e 7B68     		ldr	r3, [r7, #4]
 4877 1810 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4878 1812 9BB2     		uxth	r3, r3
 4879 1814 43F00703 		orr	r3, r3, #7
 4880 1818 9AB2     		uxth	r2, r3
 4881 181a 7B68     		ldr	r3, [r7, #4]
 4882 181c 1A81     		strh	r2, [r3, #8]	@ movhi
2702:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4883              		.loc 1 2702 0
 4884 181e 07F10807 		add	r7, r7, #8
 4885 1822 BD46     		mov	sp, r7
 4886 1824 80BD     		pop	{r7, pc}
 4887              		.cfi_endproc
 4888              	.LFE105:
 4890 1826 00BF     		.align	2
 4891              		.global	TIM_TIxExternalClockConfig
 4892              		.thumb
 4893              		.thumb_func
 4895              	TIM_TIxExternalClockConfig:
 4896              	.LFB106:
2703:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2704:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2705:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
2708:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2710:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2715:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2720:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2721:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4897              		.loc 1 2723 0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 16
 4900              		@ frame_needed = 1, uses_anonymous_args = 0
 4901 1828 80B5     		push	{r7, lr}
 4902              	.LCFI231:
 4903              		.cfi_def_cfa_offset 8
 4904              		.cfi_offset 14, -4
 4905              		.cfi_offset 7, -8
 4906 182a 84B0     		sub	sp, sp, #16
 4907              	.LCFI232:
 4908              		.cfi_def_cfa_offset 24
 4909 182c 00AF     		add	r7, sp, #0
 4910              	.LCFI233:
 4911              		.cfi_def_cfa_register 7
 4912 182e F860     		str	r0, [r7, #12]
 4913 1830 7981     		strh	r1, [r7, #10]	@ movhi
 4914 1832 3A81     		strh	r2, [r7, #8]	@ movhi
 4915 1834 FB80     		strh	r3, [r7, #6]	@ movhi
2724:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2725:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2729:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4916              		.loc 1 2730 0
 4917 1836 7B89     		ldrh	r3, [r7, #10]
 4918 1838 602B     		cmp	r3, #96
 4919 183a 08D1     		bne	.L143
2731:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2732:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4920              		.loc 1 2732 0
 4921 183c 3A89     		ldrh	r2, [r7, #8]
 4922 183e FB88     		ldrh	r3, [r7, #6]
 4923 1840 F868     		ldr	r0, [r7, #12]
 4924 1842 1146     		mov	r1, r2
 4925 1844 4FF00102 		mov	r2, #1
 4926 1848 00F0AEF9 		bl	TI2_Config
 4927 184c 07E0     		b	.L144
 4928              	.L143:
2733:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2734:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
2735:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
2736:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4929              		.loc 1 2736 0
 4930 184e 3A89     		ldrh	r2, [r7, #8]
 4931 1850 FB88     		ldrh	r3, [r7, #6]
 4932 1852 F868     		ldr	r0, [r7, #12]
 4933 1854 1146     		mov	r1, r2
 4934 1856 4FF00102 		mov	r2, #1
 4935 185a 00F065F9 		bl	TI1_Config
 4936              	.L144:
2737:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
2738:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Trigger source */
2739:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 4937              		.loc 1 2739 0
 4938 185e 7B89     		ldrh	r3, [r7, #10]
 4939 1860 F868     		ldr	r0, [r7, #12]
 4940 1862 1946     		mov	r1, r3
 4941 1864 FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2741:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4942              		.loc 1 2741 0
 4943 1868 FB68     		ldr	r3, [r7, #12]
 4944 186a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4945 186c 9BB2     		uxth	r3, r3
 4946 186e 43F00703 		orr	r3, r3, #7
 4947 1872 9AB2     		uxth	r2, r3
 4948 1874 FB68     		ldr	r3, [r7, #12]
 4949 1876 1A81     		strh	r2, [r3, #8]	@ movhi
2742:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 4950              		.loc 1 2742 0
 4951 1878 07F11007 		add	r7, r7, #16
 4952 187c BD46     		mov	sp, r7
 4953 187e 80BD     		pop	{r7, pc}
 4954              		.cfi_endproc
 4955              	.LFE106:
 4957              		.align	2
 4958              		.global	TIM_ETRClockMode1Config
 4959              		.thumb
 4960              		.thumb_func
 4962              	TIM_ETRClockMode1Config:
 4963              	.LFB107:
2743:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2744:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2745:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2749:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2755:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2760:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2761:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 4964              		.loc 1 2763 0
 4965              		.cfi_startproc
 4966              		@ args = 0, pretend = 0, frame = 24
 4967              		@ frame_needed = 1, uses_anonymous_args = 0
 4968 1880 80B5     		push	{r7, lr}
 4969              	.LCFI234:
 4970              		.cfi_def_cfa_offset 8
 4971              		.cfi_offset 14, -4
 4972              		.cfi_offset 7, -8
 4973 1882 86B0     		sub	sp, sp, #24
 4974              	.LCFI235:
 4975              		.cfi_def_cfa_offset 32
 4976 1884 00AF     		add	r7, sp, #0
 4977              	.LCFI236:
 4978              		.cfi_def_cfa_register 7
 4979 1886 F860     		str	r0, [r7, #12]
 4980 1888 7981     		strh	r1, [r7, #10]	@ movhi
 4981 188a 3A81     		strh	r2, [r7, #8]	@ movhi
 4982 188c FB80     		strh	r3, [r7, #6]	@ movhi
2764:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 4983              		.loc 1 2764 0
 4984 188e 4FF00003 		mov	r3, #0
 4985 1892 FB82     		strh	r3, [r7, #22]	@ movhi
2765:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2766:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2767:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the ETR Clock source */
2772:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 4986              		.loc 1 2772 0
 4987 1894 7989     		ldrh	r1, [r7, #10]
 4988 1896 3A89     		ldrh	r2, [r7, #8]
 4989 1898 FB88     		ldrh	r3, [r7, #6]
 4990 189a F868     		ldr	r0, [r7, #12]
 4991 189c FFF7FEFF 		bl	TIM_ETRConfig
2773:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2774:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 4992              		.loc 1 2775 0
 4993 18a0 FB68     		ldr	r3, [r7, #12]
 4994 18a2 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4995 18a4 FB82     		strh	r3, [r7, #22]	@ movhi
2776:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2777:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the SMS Bits */
2778:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 4996              		.loc 1 2778 0
 4997 18a6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4998 18a8 23F00703 		bic	r3, r3, #7
 4999 18ac FB82     		strh	r3, [r7, #22]	@ movhi
2779:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2780:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the External clock mode1 */
2781:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5000              		.loc 1 2781 0
 5001 18ae FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5002 18b0 43F00703 		orr	r3, r3, #7
 5003 18b4 FB82     		strh	r3, [r7, #22]	@ movhi
2782:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2783:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5004              		.loc 1 2784 0
 5005 18b6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5006 18b8 23F07003 		bic	r3, r3, #112
 5007 18bc FB82     		strh	r3, [r7, #22]	@ movhi
2785:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5008              		.loc 1 2785 0
 5009 18be FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5010 18c0 43F07003 		orr	r3, r3, #112
 5011 18c4 FB82     		strh	r3, [r7, #22]	@ movhi
2786:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2787:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
2788:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5012              		.loc 1 2788 0
 5013 18c6 FB68     		ldr	r3, [r7, #12]
 5014 18c8 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5015 18ca 1A81     		strh	r2, [r3, #8]	@ movhi
2789:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5016              		.loc 1 2789 0
 5017 18cc 07F11807 		add	r7, r7, #24
 5018 18d0 BD46     		mov	sp, r7
 5019 18d2 80BD     		pop	{r7, pc}
 5020              		.cfi_endproc
 5021              	.LFE107:
 5023              		.align	2
 5024              		.global	TIM_ETRClockMode2Config
 5025              		.thumb
 5026              		.thumb_func
 5028              	TIM_ETRClockMode2Config:
 5029              	.LFB108:
2790:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2791:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2792:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2796:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2802:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2807:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2808:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5030              		.loc 1 2810 0
 5031              		.cfi_startproc
 5032              		@ args = 0, pretend = 0, frame = 16
 5033              		@ frame_needed = 1, uses_anonymous_args = 0
 5034 18d4 80B5     		push	{r7, lr}
 5035              	.LCFI237:
 5036              		.cfi_def_cfa_offset 8
 5037              		.cfi_offset 14, -4
 5038              		.cfi_offset 7, -8
 5039 18d6 84B0     		sub	sp, sp, #16
 5040              	.LCFI238:
 5041              		.cfi_def_cfa_offset 24
 5042 18d8 00AF     		add	r7, sp, #0
 5043              	.LCFI239:
 5044              		.cfi_def_cfa_register 7
 5045 18da F860     		str	r0, [r7, #12]
 5046 18dc 7981     		strh	r1, [r7, #10]	@ movhi
 5047 18de 3A81     		strh	r2, [r7, #8]	@ movhi
 5048 18e0 FB80     		strh	r3, [r7, #6]	@ movhi
2811:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2812:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2817:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Configure the ETR Clock source */
2818:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5049              		.loc 1 2818 0
 5050 18e2 7989     		ldrh	r1, [r7, #10]
 5051 18e4 3A89     		ldrh	r2, [r7, #8]
 5052 18e6 FB88     		ldrh	r3, [r7, #6]
 5053 18e8 F868     		ldr	r0, [r7, #12]
 5054 18ea FFF7FEFF 		bl	TIM_ETRConfig
2819:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2820:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Enable the External clock mode2 */
2821:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5055              		.loc 1 2821 0
 5056 18ee FB68     		ldr	r3, [r7, #12]
 5057 18f0 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5058 18f2 9BB2     		uxth	r3, r3
 5059 18f4 43F48043 		orr	r3, r3, #16384
 5060 18f8 9AB2     		uxth	r2, r3
 5061 18fa FB68     		ldr	r3, [r7, #12]
 5062 18fc 1A81     		strh	r2, [r3, #8]	@ movhi
2822:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5063              		.loc 1 2822 0
 5064 18fe 07F11007 		add	r7, r7, #16
 5065 1902 BD46     		mov	sp, r7
 5066 1904 80BD     		pop	{r7, pc}
 5067              		.cfi_endproc
 5068              	.LFE108:
 5070 1906 00BF     		.align	2
 5071              		.global	TIM_SelectInputTrigger
 5072              		.thumb
 5073              		.thumb_func
 5075              	TIM_SelectInputTrigger:
 5076              	.LFB109:
2823:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2824:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
2825:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2826:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2827:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Synchronization management functions 
2829:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
2830:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
2831:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
2832:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        Synchronization management functions
2833:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
2834:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    
2835:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ===================================================================      
2836:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        =================================================================== 
2838:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Case of two/several Timers
2839:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        **************************
2840:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           
2847:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        ********************************************       
2849:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        1. Configure the External trigger using this function:
2850:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2856:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
2857:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
2858:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2859:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2860:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2861:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
2864:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2866:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2875:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2876:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5077              		.loc 1 2877 0
 5078              		.cfi_startproc
 5079              		@ args = 0, pretend = 0, frame = 16
 5080              		@ frame_needed = 1, uses_anonymous_args = 0
 5081              		@ link register save eliminated.
 5082 1908 80B4     		push	{r7}
 5083              	.LCFI240:
 5084              		.cfi_def_cfa_offset 4
 5085              		.cfi_offset 7, -4
 5086 190a 85B0     		sub	sp, sp, #20
 5087              	.LCFI241:
 5088              		.cfi_def_cfa_offset 24
 5089 190c 00AF     		add	r7, sp, #0
 5090              	.LCFI242:
 5091              		.cfi_def_cfa_register 7
 5092 190e 7860     		str	r0, [r7, #4]
 5093 1910 0B46     		mov	r3, r1
 5094 1912 7B80     		strh	r3, [r7, #2]	@ movhi
2878:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 5095              		.loc 1 2878 0
 5096 1914 4FF00003 		mov	r3, #0
 5097 1918 FB81     		strh	r3, [r7, #14]	@ movhi
2879:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2880:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2881:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2884:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5098              		.loc 1 2885 0
 5099 191a 7B68     		ldr	r3, [r7, #4]
 5100 191c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5101 191e FB81     		strh	r3, [r7, #14]	@ movhi
2886:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2887:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the TS Bits */
2888:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5102              		.loc 1 2888 0
 5103 1920 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5104 1922 23F07003 		bic	r3, r3, #112
 5105 1926 FB81     		strh	r3, [r7, #14]	@ movhi
2889:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2890:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Input Trigger source */
2891:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5106              		.loc 1 2891 0
 5107 1928 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5108 192a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5109 192c 1343     		orrs	r3, r3, r2
 5110 192e FB81     		strh	r3, [r7, #14]	@ movhi
2892:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2893:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
2894:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5111              		.loc 1 2894 0
 5112 1930 7B68     		ldr	r3, [r7, #4]
 5113 1932 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5114 1934 1A81     		strh	r2, [r3, #8]	@ movhi
2895:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5115              		.loc 1 2895 0
 5116 1936 07F11407 		add	r7, r7, #20
 5117 193a BD46     		mov	sp, r7
 5118 193c 80BC     		pop	{r7}
 5119 193e 7047     		bx	lr
 5120              		.cfi_endproc
 5121              	.LFE109:
 5123              		.align	2
 5124              		.global	TIM_SelectOutputTrigger
 5125              		.thumb
 5126              		.thumb_func
 5128              	TIM_SelectOutputTrigger:
 5129              	.LFB110:
2896:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2897:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2898:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *     
2901:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *   This parameter can be one of the following values:
2903:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2904:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  - For all TIMx
2905:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2909:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *
2917:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2918:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2919:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5130              		.loc 1 2920 0
 5131              		.cfi_startproc
 5132              		@ args = 0, pretend = 0, frame = 8
 5133              		@ frame_needed = 1, uses_anonymous_args = 0
 5134              		@ link register save eliminated.
 5135 1940 80B4     		push	{r7}
 5136              	.LCFI243:
 5137              		.cfi_def_cfa_offset 4
 5138              		.cfi_offset 7, -4
 5139 1942 83B0     		sub	sp, sp, #12
 5140              	.LCFI244:
 5141              		.cfi_def_cfa_offset 16
 5142 1944 00AF     		add	r7, sp, #0
 5143              	.LCFI245:
 5144              		.cfi_def_cfa_register 7
 5145 1946 7860     		str	r0, [r7, #4]
 5146 1948 0B46     		mov	r3, r1
 5147 194a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2922:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2925:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the MMS Bits */
2926:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5148              		.loc 1 2926 0
 5149 194c 7B68     		ldr	r3, [r7, #4]
 5150 194e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5151 1950 9BB2     		uxth	r3, r3
 5152 1952 23F07003 		bic	r3, r3, #112
 5153 1956 9AB2     		uxth	r2, r3
 5154 1958 7B68     		ldr	r3, [r7, #4]
 5155 195a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the TRGO source */
2928:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5156              		.loc 1 2928 0
 5157 195c 7B68     		ldr	r3, [r7, #4]
 5158 195e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5159 1960 9AB2     		uxth	r2, r3
 5160 1962 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5161 1964 1343     		orrs	r3, r3, r2
 5162 1966 9AB2     		uxth	r2, r3
 5163 1968 7B68     		ldr	r3, [r7, #4]
 5164 196a 9A80     		strh	r2, [r3, #4]	@ movhi
2929:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5165              		.loc 1 2929 0
 5166 196c 07F10C07 		add	r7, r7, #12
 5167 1970 BD46     		mov	sp, r7
 5168 1972 80BC     		pop	{r7}
 5169 1974 7047     		bx	lr
 5170              		.cfi_endproc
 5171              	.LFE110:
 5173 1976 00BF     		.align	2
 5174              		.global	TIM_SelectSlaveMode
 5175              		.thumb
 5176              		.thumb_func
 5178              	TIM_SelectSlaveMode:
 5179              	.LFB111:
2930:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2931:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2932:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2936:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2942:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2943:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5180              		.loc 1 2944 0
 5181              		.cfi_startproc
 5182              		@ args = 0, pretend = 0, frame = 8
 5183              		@ frame_needed = 1, uses_anonymous_args = 0
 5184              		@ link register save eliminated.
 5185 1978 80B4     		push	{r7}
 5186              	.LCFI246:
 5187              		.cfi_def_cfa_offset 4
 5188              		.cfi_offset 7, -4
 5189 197a 83B0     		sub	sp, sp, #12
 5190              	.LCFI247:
 5191              		.cfi_def_cfa_offset 16
 5192 197c 00AF     		add	r7, sp, #0
 5193              	.LCFI248:
 5194              		.cfi_def_cfa_register 7
 5195 197e 7860     		str	r0, [r7, #4]
 5196 1980 0B46     		mov	r3, r1
 5197 1982 7B80     		strh	r3, [r7, #2]	@ movhi
2945:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2946:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2949:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the SMS Bits */
2950:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5198              		.loc 1 2950 0
 5199 1984 7B68     		ldr	r3, [r7, #4]
 5200 1986 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5201 1988 9BB2     		uxth	r3, r3
 5202 198a 23F00703 		bic	r3, r3, #7
 5203 198e 9AB2     		uxth	r2, r3
 5204 1990 7B68     		ldr	r3, [r7, #4]
 5205 1992 1A81     		strh	r2, [r3, #8]	@ movhi
2951:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2952:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Slave Mode */
2953:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5206              		.loc 1 2953 0
 5207 1994 7B68     		ldr	r3, [r7, #4]
 5208 1996 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5209 1998 9AB2     		uxth	r2, r3
 5210 199a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5211 199c 1343     		orrs	r3, r3, r2
 5212 199e 9AB2     		uxth	r2, r3
 5213 19a0 7B68     		ldr	r3, [r7, #4]
 5214 19a2 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5215              		.loc 1 2954 0
 5216 19a4 07F10C07 		add	r7, r7, #12
 5217 19a8 BD46     		mov	sp, r7
 5218 19aa 80BC     		pop	{r7}
 5219 19ac 7047     		bx	lr
 5220              		.cfi_endproc
 5221              	.LFE111:
 5223 19ae 00BF     		.align	2
 5224              		.global	TIM_SelectMasterSlaveMode
 5225              		.thumb
 5226              		.thumb_func
 5228              	TIM_SelectMasterSlaveMode:
 5229              	.LFB112:
2955:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2956:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2957:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2961:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2965:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2966:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5230              		.loc 1 2967 0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 8
 5233              		@ frame_needed = 1, uses_anonymous_args = 0
 5234              		@ link register save eliminated.
 5235 19b0 80B4     		push	{r7}
 5236              	.LCFI249:
 5237              		.cfi_def_cfa_offset 4
 5238              		.cfi_offset 7, -4
 5239 19b2 83B0     		sub	sp, sp, #12
 5240              	.LCFI250:
 5241              		.cfi_def_cfa_offset 16
 5242 19b4 00AF     		add	r7, sp, #0
 5243              	.LCFI251:
 5244              		.cfi_def_cfa_register 7
 5245 19b6 7860     		str	r0, [r7, #4]
 5246 19b8 0B46     		mov	r3, r1
 5247 19ba 7B80     		strh	r3, [r7, #2]	@ movhi
2968:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
2969:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2972:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the MSM Bit */
2973:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5248              		.loc 1 2973 0
 5249 19bc 7B68     		ldr	r3, [r7, #4]
 5250 19be 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5251 19c0 9BB2     		uxth	r3, r3
 5252 19c2 23F08003 		bic	r3, r3, #128
 5253 19c6 9AB2     		uxth	r2, r3
 5254 19c8 7B68     		ldr	r3, [r7, #4]
 5255 19ca 1A81     		strh	r2, [r3, #8]	@ movhi
2974:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   
2975:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5256              		.loc 1 2976 0
 5257 19cc 7B68     		ldr	r3, [r7, #4]
 5258 19ce 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5259 19d0 9AB2     		uxth	r2, r3
 5260 19d2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5261 19d4 1343     		orrs	r3, r3, r2
 5262 19d6 9AB2     		uxth	r2, r3
 5263 19d8 7B68     		ldr	r3, [r7, #4]
 5264 19da 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5265              		.loc 1 2977 0
 5266 19dc 07F10C07 		add	r7, r7, #12
 5267 19e0 BD46     		mov	sp, r7
 5268 19e2 80BC     		pop	{r7}
 5269 19e4 7047     		bx	lr
 5270              		.cfi_endproc
 5271              	.LFE112:
 5273 19e6 00BF     		.align	2
 5274              		.global	TIM_ETRConfig
 5275              		.thumb
 5276              		.thumb_func
 5278              	TIM_ETRConfig:
 5279              	.LFB113:
2978:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
2979:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
2980:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2984:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
2990:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
2995:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
2996:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5280              		.loc 1 2998 0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 24
 5283              		@ frame_needed = 1, uses_anonymous_args = 0
 5284              		@ link register save eliminated.
 5285 19e8 80B4     		push	{r7}
 5286              	.LCFI252:
 5287              		.cfi_def_cfa_offset 4
 5288              		.cfi_offset 7, -4
 5289 19ea 87B0     		sub	sp, sp, #28
 5290              	.LCFI253:
 5291              		.cfi_def_cfa_offset 32
 5292 19ec 00AF     		add	r7, sp, #0
 5293              	.LCFI254:
 5294              		.cfi_def_cfa_register 7
 5295 19ee F860     		str	r0, [r7, #12]
 5296 19f0 7981     		strh	r1, [r7, #10]	@ movhi
 5297 19f2 3A81     		strh	r2, [r7, #8]	@ movhi
 5298 19f4 FB80     		strh	r3, [r7, #6]	@ movhi
2999:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 5299              		.loc 1 2999 0
 5300 19f6 4FF00003 		mov	r3, #0
 5301 19fa FB82     		strh	r3, [r7, #22]	@ movhi
3000:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3001:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3002:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3007:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5302              		.loc 1 3007 0
 5303 19fc FB68     		ldr	r3, [r7, #12]
 5304 19fe 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5305 1a00 FB82     		strh	r3, [r7, #22]	@ movhi
3008:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3009:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Reset the ETR Bits */
3010:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5306              		.loc 1 3010 0
 5307 1a02 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5308 1a04 DBB2     		uxtb	r3, r3
 5309 1a06 FB82     		strh	r3, [r7, #22]	@ movhi
3011:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3012:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5310              		.loc 1 3013 0
 5311 1a08 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5312 1a0a 4FEA0323 		lsl	r3, r3, #8
 5313 1a0e 9AB2     		uxth	r2, r3
 5314 1a10 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5315 1a12 1343     		orrs	r3, r3, r2
 5316 1a14 9AB2     		uxth	r2, r3
 5317 1a16 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5318 1a18 1343     		orrs	r3, r3, r2
 5319 1a1a 9AB2     		uxth	r2, r3
 5320 1a1c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5321 1a1e 1343     		orrs	r3, r3, r2
 5322 1a20 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3015:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
3016:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5323              		.loc 1 3016 0
 5324 1a22 FB68     		ldr	r3, [r7, #12]
 5325 1a24 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5326 1a26 1A81     		strh	r2, [r3, #8]	@ movhi
3017:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5327              		.loc 1 3017 0
 5328 1a28 07F11C07 		add	r7, r7, #28
 5329 1a2c BD46     		mov	sp, r7
 5330 1a2e 80BC     		pop	{r7}
 5331 1a30 7047     		bx	lr
 5332              		.cfi_endproc
 5333              	.LFE113:
 5335 1a32 00BF     		.align	2
 5336              		.global	TIM_EncoderInterfaceConfig
 5337              		.thumb
 5338              		.thumb_func
 5340              	TIM_EncoderInterfaceConfig:
 5341              	.LFB114:
3018:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3019:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3020:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3021:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3022:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief    Specific interface management functions 
3024:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
3025:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
3026:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
3027:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                     Specific interface management functions
3028:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
3029:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3030:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
3031:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
3032:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3033:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3034:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3035:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3038:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3040:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                       on the level of the other input.
3044:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3046:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3050:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3053:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3054:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5342              		.loc 1 3056 0
 5343              		.cfi_startproc
 5344              		@ args = 0, pretend = 0, frame = 24
 5345              		@ frame_needed = 1, uses_anonymous_args = 0
 5346              		@ link register save eliminated.
 5347 1a34 80B4     		push	{r7}
 5348              	.LCFI255:
 5349              		.cfi_def_cfa_offset 4
 5350              		.cfi_offset 7, -4
 5351 1a36 87B0     		sub	sp, sp, #28
 5352              	.LCFI256:
 5353              		.cfi_def_cfa_offset 32
 5354 1a38 00AF     		add	r7, sp, #0
 5355              	.LCFI257:
 5356              		.cfi_def_cfa_register 7
 5357 1a3a F860     		str	r0, [r7, #12]
 5358 1a3c 7981     		strh	r1, [r7, #10]	@ movhi
 5359 1a3e 3A81     		strh	r2, [r7, #8]	@ movhi
 5360 1a40 FB80     		strh	r3, [r7, #6]	@ movhi
3057:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpsmcr = 0;
 5361              		.loc 1 3057 0
 5362 1a42 4FF00003 		mov	r3, #0
 5363 1a46 FB82     		strh	r3, [r7, #22]	@ movhi
3058:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5364              		.loc 1 3058 0
 5365 1a48 4FF00003 		mov	r3, #0
 5366 1a4c BB82     		strh	r3, [r7, #20]	@ movhi
3059:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccer = 0;
 5367              		.loc 1 3059 0
 5368 1a4e 4FF00003 		mov	r3, #0
 5369 1a52 7B82     		strh	r3, [r7, #18]	@ movhi
3060:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     
3061:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3062:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3067:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5370              		.loc 1 3068 0
 5371 1a54 FB68     		ldr	r3, [r7, #12]
 5372 1a56 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5373 1a58 FB82     		strh	r3, [r7, #22]	@ movhi
3069:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3070:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5374              		.loc 1 3071 0
 5375 1a5a FB68     		ldr	r3, [r7, #12]
 5376 1a5c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5377 1a5e BB82     		strh	r3, [r7, #20]	@ movhi
3072:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3073:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Get the TIMx CCER register value */
3074:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 5378              		.loc 1 3074 0
 5379 1a60 FB68     		ldr	r3, [r7, #12]
 5380 1a62 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5381 1a64 7B82     		strh	r3, [r7, #18]	@ movhi
3075:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3076:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the encoder Mode */
3077:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5382              		.loc 1 3077 0
 5383 1a66 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5384 1a68 23F00703 		bic	r3, r3, #7
 5385 1a6c FB82     		strh	r3, [r7, #22]	@ movhi
3078:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5386              		.loc 1 3078 0
 5387 1a6e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5388 1a70 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5389 1a72 1343     		orrs	r3, r3, r2
 5390 1a74 FB82     		strh	r3, [r7, #22]	@ movhi
3079:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3080:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5391              		.loc 1 3081 0
 5392 1a76 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5393 1a78 23F44073 		bic	r3, r3, #768
 5394 1a7c 23F00303 		bic	r3, r3, #3
 5395 1a80 BB82     		strh	r3, [r7, #20]	@ movhi
3082:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5396              		.loc 1 3082 0
 5397 1a82 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5398 1a84 43F48073 		orr	r3, r3, #256
 5399 1a88 43F00103 		orr	r3, r3, #1
 5400 1a8c BB82     		strh	r3, [r7, #20]	@ movhi
3083:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3084:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5401              		.loc 1 3085 0
 5402 1a8e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5403 1a90 23F02203 		bic	r3, r3, #34
 5404 1a94 7B82     		strh	r3, [r7, #18]	@ movhi
3086:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5405              		.loc 1 3086 0
 5406 1a96 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5407 1a98 4FEA0313 		lsl	r3, r3, #4
 5408 1a9c 9AB2     		uxth	r2, r3
 5409 1a9e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5410 1aa0 1343     		orrs	r3, r3, r2
 5411 1aa2 9AB2     		uxth	r2, r3
 5412 1aa4 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5413 1aa6 1343     		orrs	r3, r3, r2
 5414 1aa8 7B82     		strh	r3, [r7, #18]	@ movhi
3087:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3088:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx SMCR */
3089:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5415              		.loc 1 3089 0
 5416 1aaa FB68     		ldr	r3, [r7, #12]
 5417 1aac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5418 1aae 1A81     		strh	r2, [r3, #8]	@ movhi
3090:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3091:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5419              		.loc 1 3092 0
 5420 1ab0 FB68     		ldr	r3, [r7, #12]
 5421 1ab2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5422 1ab4 1A83     		strh	r2, [r3, #24]	@ movhi
3093:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3094:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCER */
3095:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 5423              		.loc 1 3095 0
 5424 1ab6 FB68     		ldr	r3, [r7, #12]
 5425 1ab8 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5426 1aba 1A84     		strh	r2, [r3, #32]	@ movhi
3096:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5427              		.loc 1 3096 0
 5428 1abc 07F11C07 		add	r7, r7, #28
 5429 1ac0 BD46     		mov	sp, r7
 5430 1ac2 80BC     		pop	{r7}
 5431 1ac4 7047     		bx	lr
 5432              		.cfi_endproc
 5433              	.LFE114:
 5435 1ac6 00BF     		.align	2
 5436              		.global	TIM_SelectHallSensor
 5437              		.thumb
 5438              		.thumb_func
 5440              	TIM_SelectHallSensor:
 5441              	.LFB115:
3097:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3098:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3099:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3102:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3105:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3106:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5442              		.loc 1 3107 0
 5443              		.cfi_startproc
 5444              		@ args = 0, pretend = 0, frame = 8
 5445              		@ frame_needed = 1, uses_anonymous_args = 0
 5446              		@ link register save eliminated.
 5447 1ac8 80B4     		push	{r7}
 5448              	.LCFI258:
 5449              		.cfi_def_cfa_offset 4
 5450              		.cfi_offset 7, -4
 5451 1aca 83B0     		sub	sp, sp, #12
 5452              	.LCFI259:
 5453              		.cfi_def_cfa_offset 16
 5454 1acc 00AF     		add	r7, sp, #0
 5455              	.LCFI260:
 5456              		.cfi_def_cfa_register 7
 5457 1ace 7860     		str	r0, [r7, #4]
 5458 1ad0 0B46     		mov	r3, r1
 5459 1ad2 FB70     		strb	r3, [r7, #3]
3108:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Check the parameters */
3109:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3112:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   if (NewState != DISABLE)
 5460              		.loc 1 3112 0
 5461 1ad4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5462 1ad6 002B     		cmp	r3, #0
 5463 1ad8 08D0     		beq	.L154
3113:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
3114:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Set the TI1S Bit */
3115:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5464              		.loc 1 3115 0
 5465 1ada 7B68     		ldr	r3, [r7, #4]
 5466 1adc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5467 1ade 9BB2     		uxth	r3, r3
 5468 1ae0 43F08003 		orr	r3, r3, #128
 5469 1ae4 9AB2     		uxth	r2, r3
 5470 1ae6 7B68     		ldr	r3, [r7, #4]
 5471 1ae8 9A80     		strh	r2, [r3, #4]	@ movhi
 5472 1aea 07E0     		b	.L153
 5473              	.L154:
3116:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
3117:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   else
3118:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   {
3119:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     /* Reset the TI1S Bit */
3120:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5474              		.loc 1 3120 0
 5475 1aec 7B68     		ldr	r3, [r7, #4]
 5476 1aee 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5477 1af0 9BB2     		uxth	r3, r3
 5478 1af2 23F08003 		bic	r3, r3, #128
 5479 1af6 9AB2     		uxth	r2, r3
 5480 1af8 7B68     		ldr	r3, [r7, #4]
 5481 1afa 9A80     		strh	r2, [r3, #4]	@ movhi
 5482              	.L153:
3121:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   }
3122:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5483              		.loc 1 3122 0
 5484 1afc 07F10C07 		add	r7, r7, #12
 5485 1b00 BD46     		mov	sp, r7
 5486 1b02 80BC     		pop	{r7}
 5487 1b04 7047     		bx	lr
 5488              		.cfi_endproc
 5489              	.LFE115:
 5491 1b06 00BF     		.align	2
 5492              		.global	TIM_RemapConfig
 5493              		.thumb
 5494              		.thumb_func
 5496              	TIM_RemapConfig:
 5497              	.LFB116:
3123:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3124:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3125:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3126:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3127:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *  @brief   Specific remapping management function
3129:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  *
3130:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @verbatim   
3131:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================
3132:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                      Specific remapping management function
3133:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  ===============================================================================  
3134:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3135:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** @endverbatim
3136:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @{
3137:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3138:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3139:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3140:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3144:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3156:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3157:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5498              		.loc 1 3158 0
 5499              		.cfi_startproc
 5500              		@ args = 0, pretend = 0, frame = 8
 5501              		@ frame_needed = 1, uses_anonymous_args = 0
 5502              		@ link register save eliminated.
 5503 1b08 80B4     		push	{r7}
 5504              	.LCFI261:
 5505              		.cfi_def_cfa_offset 4
 5506              		.cfi_offset 7, -4
 5507 1b0a 83B0     		sub	sp, sp, #12
 5508              	.LCFI262:
 5509              		.cfi_def_cfa_offset 16
 5510 1b0c 00AF     		add	r7, sp, #0
 5511              	.LCFI263:
 5512              		.cfi_def_cfa_register 7
 5513 1b0e 7860     		str	r0, [r7, #4]
 5514 1b10 0B46     		mov	r3, r1
 5515 1b12 7B80     		strh	r3, [r7, #2]	@ movhi
3159:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****  /* Check the parameters */
3160:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3163:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Set the Timer remapping configuration */
3164:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5516              		.loc 1 3164 0
 5517 1b14 7B68     		ldr	r3, [r7, #4]
 5518 1b16 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5519 1b18 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5520              		.loc 1 3165 0
 5521 1b1c 07F10C07 		add	r7, r7, #12
 5522 1b20 BD46     		mov	sp, r7
 5523 1b22 80BC     		pop	{r7}
 5524 1b24 7047     		bx	lr
 5525              		.cfi_endproc
 5526              	.LFE116:
 5528 1b26 00BF     		.align	2
 5529              		.thumb
 5530              		.thumb_func
 5532              	TI1_Config:
 5533              	.LFB117:
3166:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3167:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @}
3168:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3169:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3170:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3171:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         to select the TIM peripheral.
3174:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3176:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3181:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3187:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3188:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5534              		.loc 1 3190 0
 5535              		.cfi_startproc
 5536              		@ args = 0, pretend = 0, frame = 24
 5537              		@ frame_needed = 1, uses_anonymous_args = 0
 5538              		@ link register save eliminated.
 5539 1b28 80B4     		push	{r7}
 5540              	.LCFI264:
 5541              		.cfi_def_cfa_offset 4
 5542              		.cfi_offset 7, -4
 5543 1b2a 87B0     		sub	sp, sp, #28
 5544              	.LCFI265:
 5545              		.cfi_def_cfa_offset 32
 5546 1b2c 00AF     		add	r7, sp, #0
 5547              	.LCFI266:
 5548              		.cfi_def_cfa_register 7
 5549 1b2e F860     		str	r0, [r7, #12]
 5550 1b30 7981     		strh	r1, [r7, #10]	@ movhi
 5551 1b32 3A81     		strh	r2, [r7, #8]	@ movhi
 5552 1b34 FB80     		strh	r3, [r7, #6]	@ movhi
3191:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5553              		.loc 1 3191 0
 5554 1b36 4FF00003 		mov	r3, #0
 5555 1b3a FB82     		strh	r3, [r7, #22]	@ movhi
 5556 1b3c 4FF00003 		mov	r3, #0
 5557 1b40 BB82     		strh	r3, [r7, #20]	@ movhi
3192:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3193:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5558              		.loc 1 3194 0
 5559 1b42 FB68     		ldr	r3, [r7, #12]
 5560 1b44 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5561 1b46 9BB2     		uxth	r3, r3
 5562 1b48 23F00103 		bic	r3, r3, #1
 5563 1b4c 9AB2     		uxth	r2, r3
 5564 1b4e FB68     		ldr	r3, [r7, #12]
 5565 1b50 1A84     		strh	r2, [r3, #32]	@ movhi
3195:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5566              		.loc 1 3195 0
 5567 1b52 FB68     		ldr	r3, [r7, #12]
 5568 1b54 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5569 1b56 FB82     		strh	r3, [r7, #22]	@ movhi
3196:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 5570              		.loc 1 3196 0
 5571 1b58 FB68     		ldr	r3, [r7, #12]
 5572 1b5a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5573 1b5c BB82     		strh	r3, [r7, #20]	@ movhi
3197:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3198:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3199:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5574              		.loc 1 3199 0
 5575 1b5e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5576 1b60 23F0F303 		bic	r3, r3, #243
 5577 1b64 FB82     		strh	r3, [r7, #22]	@ movhi
3200:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5578              		.loc 1 3200 0
 5579 1b66 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5580 1b68 4FEA0313 		lsl	r3, r3, #4
 5581 1b6c 9AB2     		uxth	r2, r3
 5582 1b6e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5583 1b70 1343     		orrs	r3, r3, r2
 5584 1b72 9AB2     		uxth	r2, r3
 5585 1b74 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5586 1b76 1343     		orrs	r3, r3, r2
 5587 1b78 FB82     		strh	r3, [r7, #22]	@ movhi
3201:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3202:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5588              		.loc 1 3203 0
 5589 1b7a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5590 1b7c 23F00A03 		bic	r3, r3, #10
 5591 1b80 BB82     		strh	r3, [r7, #20]	@ movhi
3204:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5592              		.loc 1 3204 0
 5593 1b82 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5594 1b84 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5595 1b86 1343     		orrs	r3, r3, r2
 5596 1b88 9BB2     		uxth	r3, r3
 5597 1b8a 43F00103 		orr	r3, r3, #1
 5598 1b8e BB82     		strh	r3, [r7, #20]	@ movhi
3205:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3206:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5599              		.loc 1 3207 0
 5600 1b90 FB68     		ldr	r3, [r7, #12]
 5601 1b92 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5602 1b94 1A83     		strh	r2, [r3, #24]	@ movhi
3208:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 5603              		.loc 1 3208 0
 5604 1b96 FB68     		ldr	r3, [r7, #12]
 5605 1b98 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5606 1b9a 1A84     		strh	r2, [r3, #32]	@ movhi
3209:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5607              		.loc 1 3209 0
 5608 1b9c 07F11C07 		add	r7, r7, #28
 5609 1ba0 BD46     		mov	sp, r7
 5610 1ba2 80BC     		pop	{r7}
 5611 1ba4 7047     		bx	lr
 5612              		.cfi_endproc
 5613              	.LFE117:
 5615 1ba6 00BF     		.align	2
 5616              		.thumb
 5617              		.thumb_func
 5619              	TI2_Config:
 5620              	.LFB118:
3210:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3211:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3212:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *         peripheral.
3215:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3217:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3222:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3228:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3229:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5621              		.loc 1 3231 0
 5622              		.cfi_startproc
 5623              		@ args = 0, pretend = 0, frame = 24
 5624              		@ frame_needed = 1, uses_anonymous_args = 0
 5625              		@ link register save eliminated.
 5626 1ba8 80B4     		push	{r7}
 5627              	.LCFI267:
 5628              		.cfi_def_cfa_offset 4
 5629              		.cfi_offset 7, -4
 5630 1baa 87B0     		sub	sp, sp, #28
 5631              	.LCFI268:
 5632              		.cfi_def_cfa_offset 32
 5633 1bac 00AF     		add	r7, sp, #0
 5634              	.LCFI269:
 5635              		.cfi_def_cfa_register 7
 5636 1bae F860     		str	r0, [r7, #12]
 5637 1bb0 7981     		strh	r1, [r7, #10]	@ movhi
 5638 1bb2 3A81     		strh	r2, [r7, #8]	@ movhi
 5639 1bb4 FB80     		strh	r3, [r7, #6]	@ movhi
3232:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5640              		.loc 1 3232 0
 5641 1bb6 4FF00003 		mov	r3, #0
 5642 1bba FB82     		strh	r3, [r7, #22]	@ movhi
 5643 1bbc 4FF00003 		mov	r3, #0
 5644 1bc0 BB82     		strh	r3, [r7, #20]	@ movhi
 5645 1bc2 4FF00003 		mov	r3, #0
 5646 1bc6 7B82     		strh	r3, [r7, #18]	@ movhi
3233:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3234:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5647              		.loc 1 3235 0
 5648 1bc8 FB68     		ldr	r3, [r7, #12]
 5649 1bca 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5650 1bcc 9BB2     		uxth	r3, r3
 5651 1bce 23F01003 		bic	r3, r3, #16
 5652 1bd2 9AB2     		uxth	r2, r3
 5653 1bd4 FB68     		ldr	r3, [r7, #12]
 5654 1bd6 1A84     		strh	r2, [r3, #32]	@ movhi
3236:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5655              		.loc 1 3236 0
 5656 1bd8 FB68     		ldr	r3, [r7, #12]
 5657 1bda 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5658 1bdc FB82     		strh	r3, [r7, #22]	@ movhi
3237:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 5659              		.loc 1 3237 0
 5660 1bde FB68     		ldr	r3, [r7, #12]
 5661 1be0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5662 1be2 BB82     		strh	r3, [r7, #20]	@ movhi
3238:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5663              		.loc 1 3238 0
 5664 1be4 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5665 1be6 4FEA0313 		lsl	r3, r3, #4
 5666 1bea 7B82     		strh	r3, [r7, #18]	@ movhi
3239:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3240:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3241:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5667              		.loc 1 3241 0
 5668 1bec FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5669 1bee 23F44073 		bic	r3, r3, #768
 5670 1bf2 4FEA0353 		lsl	r3, r3, #20
 5671 1bf6 4FEA1353 		lsr	r3, r3, #20
 5672 1bfa FB82     		strh	r3, [r7, #22]	@ movhi
3242:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5673              		.loc 1 3242 0
 5674 1bfc FB88     		ldrh	r3, [r7, #6]	@ movhi
 5675 1bfe 4FEA0333 		lsl	r3, r3, #12
 5676 1c02 9AB2     		uxth	r2, r3
 5677 1c04 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5678 1c06 1343     		orrs	r3, r3, r2
 5679 1c08 FB82     		strh	r3, [r7, #22]	@ movhi
3243:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5680              		.loc 1 3243 0
 5681 1c0a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5682 1c0c 4FEA0323 		lsl	r3, r3, #8
 5683 1c10 9AB2     		uxth	r2, r3
 5684 1c12 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5685 1c14 1343     		orrs	r3, r3, r2
 5686 1c16 FB82     		strh	r3, [r7, #22]	@ movhi
3244:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3245:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5687              		.loc 1 3246 0
 5688 1c18 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5689 1c1a 23F0A003 		bic	r3, r3, #160
 5690 1c1e BB82     		strh	r3, [r7, #20]	@ movhi
3247:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5691              		.loc 1 3247 0
 5692 1c20 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5693 1c22 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5694 1c24 1343     		orrs	r3, r3, r2
 5695 1c26 9BB2     		uxth	r3, r3
 5696 1c28 43F01003 		orr	r3, r3, #16
 5697 1c2c BB82     		strh	r3, [r7, #20]	@ movhi
3248:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3249:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5698              		.loc 1 3250 0
 5699 1c2e FB68     		ldr	r3, [r7, #12]
 5700 1c30 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5701 1c32 1A83     		strh	r2, [r3, #24]	@ movhi
3251:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 5702              		.loc 1 3251 0
 5703 1c34 FB68     		ldr	r3, [r7, #12]
 5704 1c36 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5705 1c38 1A84     		strh	r2, [r3, #32]	@ movhi
3252:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5706              		.loc 1 3252 0
 5707 1c3a 07F11C07 		add	r7, r7, #28
 5708 1c3e BD46     		mov	sp, r7
 5709 1c40 80BC     		pop	{r7}
 5710 1c42 7047     		bx	lr
 5711              		.cfi_endproc
 5712              	.LFE118:
 5714              		.align	2
 5715              		.thumb
 5716              		.thumb_func
 5718              	TI3_Config:
 5719              	.LFB119:
3253:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3254:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3255:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3259:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3264:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3270:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3271:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5720              		.loc 1 3273 0
 5721              		.cfi_startproc
 5722              		@ args = 0, pretend = 0, frame = 24
 5723              		@ frame_needed = 1, uses_anonymous_args = 0
 5724              		@ link register save eliminated.
 5725 1c44 80B4     		push	{r7}
 5726              	.LCFI270:
 5727              		.cfi_def_cfa_offset 4
 5728              		.cfi_offset 7, -4
 5729 1c46 87B0     		sub	sp, sp, #28
 5730              	.LCFI271:
 5731              		.cfi_def_cfa_offset 32
 5732 1c48 00AF     		add	r7, sp, #0
 5733              	.LCFI272:
 5734              		.cfi_def_cfa_register 7
 5735 1c4a F860     		str	r0, [r7, #12]
 5736 1c4c 7981     		strh	r1, [r7, #10]	@ movhi
 5737 1c4e 3A81     		strh	r2, [r7, #8]	@ movhi
 5738 1c50 FB80     		strh	r3, [r7, #6]	@ movhi
3274:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5739              		.loc 1 3274 0
 5740 1c52 4FF00003 		mov	r3, #0
 5741 1c56 FB82     		strh	r3, [r7, #22]	@ movhi
 5742 1c58 4FF00003 		mov	r3, #0
 5743 1c5c BB82     		strh	r3, [r7, #20]	@ movhi
 5744 1c5e 4FF00003 		mov	r3, #0
 5745 1c62 7B82     		strh	r3, [r7, #18]	@ movhi
3275:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3276:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5746              		.loc 1 3277 0
 5747 1c64 FB68     		ldr	r3, [r7, #12]
 5748 1c66 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5749 1c68 9BB2     		uxth	r3, r3
 5750 1c6a 23F48073 		bic	r3, r3, #256
 5751 1c6e 9AB2     		uxth	r2, r3
 5752 1c70 FB68     		ldr	r3, [r7, #12]
 5753 1c72 1A84     		strh	r2, [r3, #32]	@ movhi
3278:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5754              		.loc 1 3278 0
 5755 1c74 FB68     		ldr	r3, [r7, #12]
 5756 1c76 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5757 1c78 FB82     		strh	r3, [r7, #22]	@ movhi
3279:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 5758              		.loc 1 3279 0
 5759 1c7a FB68     		ldr	r3, [r7, #12]
 5760 1c7c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5761 1c7e BB82     		strh	r3, [r7, #20]	@ movhi
3280:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5762              		.loc 1 3280 0
 5763 1c80 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5764 1c82 4FEA0323 		lsl	r3, r3, #8
 5765 1c86 7B82     		strh	r3, [r7, #18]	@ movhi
3281:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3282:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3283:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5766              		.loc 1 3283 0
 5767 1c88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5768 1c8a 23F0F303 		bic	r3, r3, #243
 5769 1c8e FB82     		strh	r3, [r7, #22]	@ movhi
3284:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5770              		.loc 1 3284 0
 5771 1c90 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5772 1c92 4FEA0313 		lsl	r3, r3, #4
 5773 1c96 9AB2     		uxth	r2, r3
 5774 1c98 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5775 1c9a 1343     		orrs	r3, r3, r2
 5776 1c9c 9AB2     		uxth	r2, r3
 5777 1c9e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5778 1ca0 1343     		orrs	r3, r3, r2
 5779 1ca2 FB82     		strh	r3, [r7, #22]	@ movhi
3285:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3286:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5780              		.loc 1 3287 0
 5781 1ca4 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5782 1ca6 23F42063 		bic	r3, r3, #2560
 5783 1caa BB82     		strh	r3, [r7, #20]	@ movhi
3288:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5784              		.loc 1 3288 0
 5785 1cac 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5786 1cae BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5787 1cb0 1343     		orrs	r3, r3, r2
 5788 1cb2 9BB2     		uxth	r3, r3
 5789 1cb4 43F48073 		orr	r3, r3, #256
 5790 1cb8 BB82     		strh	r3, [r7, #20]	@ movhi
3289:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3290:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5791              		.loc 1 3291 0
 5792 1cba FB68     		ldr	r3, [r7, #12]
 5793 1cbc FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5794 1cbe 9A83     		strh	r2, [r3, #28]	@ movhi
3292:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer;
 5795              		.loc 1 3292 0
 5796 1cc0 FB68     		ldr	r3, [r7, #12]
 5797 1cc2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5798 1cc4 1A84     		strh	r2, [r3, #32]	@ movhi
3293:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5799              		.loc 1 3293 0
 5800 1cc6 07F11C07 		add	r7, r7, #28
 5801 1cca BD46     		mov	sp, r7
 5802 1ccc 80BC     		pop	{r7}
 5803 1cce 7047     		bx	lr
 5804              		.cfi_endproc
 5805              	.LFE119:
 5807              		.align	2
 5808              		.thumb
 5809              		.thumb_func
 5811              	TI4_Config:
 5812              	.LFB120:
3294:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3295:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** /**
3296:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3300:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter can be one of the following values:
3305:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   * @retval None
3311:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   */
3312:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** {
 5813              		.loc 1 3314 0
 5814              		.cfi_startproc
 5815              		@ args = 0, pretend = 0, frame = 24
 5816              		@ frame_needed = 1, uses_anonymous_args = 0
 5817              		@ link register save eliminated.
 5818 1cd0 80B4     		push	{r7}
 5819              	.LCFI273:
 5820              		.cfi_def_cfa_offset 4
 5821              		.cfi_offset 7, -4
 5822 1cd2 87B0     		sub	sp, sp, #28
 5823              	.LCFI274:
 5824              		.cfi_def_cfa_offset 32
 5825 1cd4 00AF     		add	r7, sp, #0
 5826              	.LCFI275:
 5827              		.cfi_def_cfa_register 7
 5828 1cd6 F860     		str	r0, [r7, #12]
 5829 1cd8 7981     		strh	r1, [r7, #10]	@ movhi
 5830 1cda 3A81     		strh	r2, [r7, #8]	@ movhi
 5831 1cdc FB80     		strh	r3, [r7, #6]	@ movhi
3315:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5832              		.loc 1 3315 0
 5833 1cde 4FF00003 		mov	r3, #0
 5834 1ce2 FB82     		strh	r3, [r7, #22]	@ movhi
 5835 1ce4 4FF00003 		mov	r3, #0
 5836 1ce8 BB82     		strh	r3, [r7, #20]	@ movhi
 5837 1cea 4FF00003 		mov	r3, #0
 5838 1cee 7B82     		strh	r3, [r7, #18]	@ movhi
3316:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3317:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5839              		.loc 1 3318 0
 5840 1cf0 FB68     		ldr	r3, [r7, #12]
 5841 1cf2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5842 1cf4 9BB2     		uxth	r3, r3
 5843 1cf6 23F48053 		bic	r3, r3, #4096
 5844 1cfa 9AB2     		uxth	r2, r3
 5845 1cfc FB68     		ldr	r3, [r7, #12]
 5846 1cfe 1A84     		strh	r2, [r3, #32]	@ movhi
3319:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5847              		.loc 1 3319 0
 5848 1d00 FB68     		ldr	r3, [r7, #12]
 5849 1d02 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5850 1d04 FB82     		strh	r3, [r7, #22]	@ movhi
3320:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer = TIMx->CCER;
 5851              		.loc 1 3320 0
 5852 1d06 FB68     		ldr	r3, [r7, #12]
 5853 1d08 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5854 1d0a BB82     		strh	r3, [r7, #20]	@ movhi
3321:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5855              		.loc 1 3321 0
 5856 1d0c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5857 1d0e 4FEA0333 		lsl	r3, r3, #12
 5858 1d12 7B82     		strh	r3, [r7, #18]	@ movhi
3322:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3323:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Input and set the filter */
3324:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5859              		.loc 1 3324 0
 5860 1d14 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5861 1d16 23F44073 		bic	r3, r3, #768
 5862 1d1a 4FEA0353 		lsl	r3, r3, #20
 5863 1d1e 4FEA1353 		lsr	r3, r3, #20
 5864 1d22 FB82     		strh	r3, [r7, #22]	@ movhi
3325:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5865              		.loc 1 3325 0
 5866 1d24 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5867 1d26 4FEA0323 		lsl	r3, r3, #8
 5868 1d2a 9AB2     		uxth	r2, r3
 5869 1d2c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5870 1d2e 1343     		orrs	r3, r3, r2
 5871 1d30 FB82     		strh	r3, [r7, #22]	@ movhi
3326:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5872              		.loc 1 3326 0
 5873 1d32 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5874 1d34 4FEA0333 		lsl	r3, r3, #12
 5875 1d38 9AB2     		uxth	r2, r3
 5876 1d3a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5877 1d3c 1343     		orrs	r3, r3, r2
 5878 1d3e FB82     		strh	r3, [r7, #22]	@ movhi
3327:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3328:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5879              		.loc 1 3329 0
 5880 1d40 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5881 1d42 23F40053 		bic	r3, r3, #8192
 5882 1d46 4FEA4343 		lsl	r3, r3, #17
 5883 1d4a 4FEA5343 		lsr	r3, r3, #17
 5884 1d4e BB82     		strh	r3, [r7, #20]	@ movhi
3330:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 5885              		.loc 1 3330 0
 5886 1d50 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5887 1d52 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5888 1d54 1343     		orrs	r3, r3, r2
 5889 1d56 9BB2     		uxth	r3, r3
 5890 1d58 43F48053 		orr	r3, r3, #4096
 5891 1d5c BB82     		strh	r3, [r7, #20]	@ movhi
3331:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** 
3332:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5892              		.loc 1 3333 0
 5893 1d5e FB68     		ldr	r3, [r7, #12]
 5894 1d60 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5895 1d62 9A83     		strh	r2, [r3, #28]	@ movhi
3334:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c ****   TIMx->CCER = tmpccer ;
 5896              		.loc 1 3334 0
 5897 1d64 FB68     		ldr	r3, [r7, #12]
 5898 1d66 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5899 1d68 1A84     		strh	r2, [r3, #32]	@ movhi
3335:../STM32F2xx_StdPeriph_Driver/src/stm32f2xx_tim.c **** }
 5900              		.loc 1 3335 0
 5901 1d6a 07F11C07 		add	r7, r7, #28
 5902 1d6e BD46     		mov	sp, r7
 5903 1d70 80BC     		pop	{r7}
 5904 1d72 7047     		bx	lr
 5905              		.cfi_endproc
 5906              	.LFE120:
 5908              	.Letext0:
 5909              		.file 2 "c:/cad/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 5910              		.file 3 "C:\\workspace\\te_stm32f207_simple\\system/stm32f2xx.h"
 5911              		.file 4 "C:\\workspace\\te_stm32f207_simple\\STM32F2xx_StdPeriph_Driver\\inc/stm32f2xx_tim.h"
 5912              		.file 5 "C:\\workspace\\te_stm32f207_simple\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_tim.c
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:17     .text:00000000 $t
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:22     .text:00000000 TIM_DeInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:274    .text:00000238 TIM_TimeBaseInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:419    .text:0000032c TIM_TimeBaseStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:470    .text:00000368 TIM_PrescalerConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:513    .text:00000390 TIM_CounterModeConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:566    .text:000003c8 TIM_SetCounter
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:602    .text:000003e4 TIM_SetAutoreload
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:638    .text:00000400 TIM_GetCounter
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:673    .text:00000418 TIM_GetPrescaler
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:709    .text:00000434 TIM_UpdateDisableConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:765    .text:00000474 TIM_UpdateRequestConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:821    .text:000004b4 TIM_ARRPreloadConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:877    .text:000004f4 TIM_SelectOnePulseMode
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:927    .text:0000052c TIM_SetClockDivision
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:977    .text:00000564 TIM_Cmd
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1033   .text:000005a4 TIM_OC1Init
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1193   .text:000006a0 TIM_OC2Init
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1367   .text:000007c8 TIM_OC3Init
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1539   .text:000008e8 TIM_OC4Init
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1677   .text:000009c8 TIM_OCStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1740   .text:00000a1c TIM_SelectOCxM
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1862   .text:00000adc TIM_SetCompare1
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1898   .text:00000af8 TIM_SetCompare2
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1934   .text:00000b14 TIM_SetCompare3
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:1970   .text:00000b30 TIM_SetCompare4
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2006   .text:00000b4c TIM_ForcedOC1Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2059   .text:00000b84 TIM_ForcedOC2Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2114   .text:00000bc4 TIM_ForcedOC3Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2167   .text:00000bfc TIM_ForcedOC4Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2222   .text:00000c3c TIM_OC1PreloadConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2275   .text:00000c74 TIM_OC2PreloadConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2330   .text:00000cb4 TIM_OC3PreloadConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2383   .text:00000cec TIM_OC4PreloadConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2438   .text:00000d2c TIM_OC1FastConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2491   .text:00000d64 TIM_OC2FastConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2546   .text:00000da4 TIM_OC3FastConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2599   .text:00000ddc TIM_OC4FastConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2654   .text:00000e1c TIM_ClearOC1Ref
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2707   .text:00000e54 TIM_ClearOC2Ref
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2763   .text:00000e98 TIM_ClearOC3Ref
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2816   .text:00000ed0 TIM_ClearOC4Ref
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2872   .text:00000f14 TIM_OC1PolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2925   .text:00000f4c TIM_OC1NPolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:2978   .text:00000f84 TIM_OC2PolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3033   .text:00000fc4 TIM_OC2NPolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3088   .text:00001004 TIM_OC3PolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3143   .text:00001044 TIM_OC3NPolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3198   .text:00001084 TIM_OC4PolarityConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3253   .text:000010c4 TIM_CCxCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3319   .text:00001120 TIM_CCxNCmd
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3385   .text:0000117c TIM_ICInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5532   .text:00001b28 TI1_Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3838   .text:00001384 TIM_SetIC1Prescaler
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5619   .text:00001ba8 TI2_Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3888   .text:000013bc TIM_SetIC2Prescaler
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5718   .text:00001c44 TI3_Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3940   .text:000013f8 TIM_SetIC3Prescaler
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5811   .text:00001cd0 TI4_Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3990   .text:00001430 TIM_SetIC4Prescaler
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3514   .text:00001224 TIM_ICStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3565   .text:00001260 TIM_PWMIConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3698   .text:00001324 TIM_GetCapture1
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3733   .text:0000133c TIM_GetCapture2
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3768   .text:00001354 TIM_GetCapture3
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:3803   .text:0000136c TIM_GetCapture4
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4042   .text:0000146c TIM_BDTRConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4113   .text:000014bc TIM_BDTRStructInit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4172   .text:00001508 TIM_CtrlPWMOutputs
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4230   .text:00001558 TIM_SelectCOM
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4286   .text:00001598 TIM_CCPreloadControl
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4342   .text:000015d8 TIM_ITConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4404   .text:00001620 TIM_GenerateEvent
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4441   .text:0000163c TIM_GetFlagStatus
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4498   .text:0000167c TIM_ClearFlag
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4537   .text:000016a0 TIM_GetITStatus
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4612   .text:00001700 TIM_ClearITPendingBit
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4651   .text:00001724 TIM_DMAConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4693   .text:0000174c TIM_DMACmd
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4755   .text:00001794 TIM_SelectCCDMA
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4811   .text:000017d4 TIM_InternalClockConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4850   .text:000017f8 TIM_ITRxExternalClockConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5075   .text:00001908 TIM_SelectInputTrigger
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4895   .text:00001828 TIM_TIxExternalClockConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:4962   .text:00001880 TIM_ETRClockMode1Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5278   .text:000019e8 TIM_ETRConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5028   .text:000018d4 TIM_ETRClockMode2Config
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5128   .text:00001940 TIM_SelectOutputTrigger
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5178   .text:00001978 TIM_SelectSlaveMode
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5228   .text:000019b0 TIM_SelectMasterSlaveMode
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5340   .text:00001a34 TIM_EncoderInterfaceConfig
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5440   .text:00001ac8 TIM_SelectHallSensor
C:\Users\IARISC~1\AppData\Local\Temp\ccrqRvws.s:5496   .text:00001b08 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
