Отправка сообщений
При передаче сообщений используются три почтовых ящика. Планировщик передачи сам решает, какое сообщение должны быть передано первым. В зависимости он настроек bxCan это может быть организовано по формату FIFO (First Input First Output), либо, исходя из приоритета сообщений -  сообщение с более высоким приоритетом отправляется раньше, независимо от того, в каком почтовом ящике оно хранится.

Для того чтобы передать сообщение в шину, приложение должно выбрать один из трех почтовых ящиков.

После помещения сообщения в почтовый ящик, программа больше не сможет изменять его, а сам почтовый ящик входит в режим ожидания наивысшего приоритета для передачи сообщения в шину. Как только он его получит, bxCan переходит в режим ожидания, когда CAN шина станет неактивной, и после этого попытается выполнить его передачу.

После того, как сообщение будет передано, почтовый ящик освободится и будет готов для приема очередного сообщения из кода программы. bxCan в случае успешной передачи сообщения, установит биты RQCP и TXOK в регистре CAN_TSR.

Если передача не удалась, то причина указывается битом ALST в регистре CAN_TSR в случае проигрыша арбитража и/или битом TERR - в случае обнаружения ошибки передачи.

 

Прием сообщений
Для приема сообщений CAN используются два буфера FIFO, в каждом из которых по три почтовых ящика. Для того, чтобы снизить нагрузку на микроконтроллер, упростить согласованность программного обеспечения и гарантировать максимальную сохранность данных, буфер FIFO управляется полностью аппаратными средствами. Приложение получает доступ к сообщениям, сохраненным в FIFO, через один из трех входящих почтовых ящиков буфера.

Перед помещением сообщения в почтовый ящик, оно должно пройти проверку. Сообщение считается прошедшим проверку, если оно было получено в соответствии с требованиями протокола CAN (в сообщении присутствуют все биты, вплоть до последнего бита окончания передачи пакета) и он прошел через фильтрацию идентификатора сообщения.

Вот как выглядит примерная схема движения сообщений в буфере FIFO:


Начиная с момента, когда буфер сообщений пуст, при получении первого валидного сообщения оно сохраняется в FIFO, у которого устанавливается статус Pending-1. "Железо" сигнализирует об этом, устанавливая биты FMP[1:0]  регистра CAN_RFR в значение 01b. После этого сообщение в почтовом ящике FIFO доступно для программы.

Программное обеспечение считывает содержимое почтового ящика и освобождает его установкой бита RFOM в регистре CAN_RFR. FIFO снова становится пустым. Но если в это же время, пока программа считывает сообщение, поступает следующее, то оно будет сохранено в FIFO и ему (буферу) будет присвоен статус Pending_2 (установка битов FMP[1:0]  регистра CAN_RFR в значение 10b). А после получения программой первого сообщения для буфера будет установлен статус Pending_1.

Если приложение не освобождает почтовый ящик, то следующие валидные сообщения, после первого, будут сохранены в FIFO, которому будет присвоен статус Pending_2, а затем Pending_3 (установка битов FMP[1:0]  регистра CAN_RFR в значение 11b). 

При заполнении всех трех почтовых ящиков, программное обеспечение должно освободить выходной почтовый ящик путем установки бита RFOM. Это нужно для того, чтобы освободить почтовый ящик для хранения следующего валидного сообщения. Если этого не сделать, то последующие сообщения будут утеряны.

После того, как буфер FIFO находится в статусе Pending_3 (т.е. все три почтовых ящика будут заполнены), следующий валидный прием сообщения приведет к перегрузке (OverRun) и сообщение будет потеряно.

bxCan сигнализирует о состоянии перегрузки получения  сообщений в буфер FIFO путем установки бита FOVR регистра CAN_RFR. Какое сообщение при этом теряется, зависит от конфигурации FIFO:

• Если функция блокировки FIFO отключена (установлен бит RFLM в регистре CAN_MCR), последнее принятое сообщение будет перезаписано новым поступившим, прошедшим проверку, сообщением;
• Если функция блокировки FIFO включена (сброшен бит RFLM в регистре CAN_MCR), вновь принимаемые сообщения будут игнорированы. Таким образом, программное обеспечение будет видеть в почтовом ящике самые старые сообщения, все последующие будут утеряны.

 

Прерывания по получению сообщений
Как же программа узнает о том, что пришло новое сообщение?

После того, как сообщение было сохранено в FIFO биты FMP[1:0] обновляются и генерируется запрос прерывания (если установлен бит FFIE в регистре CAN_IER). Когда заполняются все три почтовых ящика, устанавливается бит FULL в регистре CAN_IER.

Необходимо обратить внимание на то, что при перегрузке бит FOVR устанавливается и генерируется прерывание только в том случае, если установлен бит FOVIE регистра CAN_IER. В противном случае все новые сообщения при перегрузке будут полностью игнорироваться и не будет вызываться прерываний по их приему, пока не освободится хотя бы один почтовый ящик.





