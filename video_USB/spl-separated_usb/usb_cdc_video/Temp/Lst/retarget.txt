; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\retarget.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\retarget.d --cpu=ARM9E --apcs=interwork -O0 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -I.\..\display -I.\..\lib\display_gfx -I.\..\lib\printf -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V1 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\retarget.crf ..\system\Retarget.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sendchar PROC
;;;14     
;;;15     static void sendchar(int c)
000000  e92d4010          PUSH     {r4,lr}
;;;16     {
000004  e1a04000          MOV      r4,r0
;;;17       if (c == '\n')  {
000008  e354000a          CMP      r4,#0xa
00000c  1a000001          BNE      |L1.24|
;;;18         sys_uart_putc('\r');
000010  e3a0000d          MOV      r0,#0xd
000014  ebfffffe          BL       sys_uart_putc
                  |L1.24|
;;;19       }
;;;20       sys_uart_putc(c);
000018  e20400ff          AND      r0,r4,#0xff
00001c  ebfffffe          BL       sys_uart_putc
;;;21     }
000020  e8bd8010          POP      {r4,pc}
;;;22     
                          ENDP

                  fputc PROC
;;;23     int fputc(int ch, FILE* f)
000024  e92d4070          PUSH     {r4-r6,lr}
;;;24     {
000028  e1a04000          MOV      r4,r0
00002c  e1a05001          MOV      r5,r1
;;;25       sendchar(ch);
000030  e1a00004          MOV      r0,r4
000034  ebfffffe          BL       sendchar
;;;26       return (ch);
000038  e1a00004          MOV      r0,r4
;;;27     }
00003c  e8bd8070          POP      {r4-r6,pc}
;;;28     
                          ENDP

                  fgetc PROC
;;;29     int fgetc(FILE* f)
000040  e1a01000          MOV      r1,r0
;;;30     {
;;;31       return (0);
000044  e3a00000          MOV      r0,#0
;;;32     }
000048  e12fff1e          BX       lr
;;;33     
                          ENDP

                  ferror PROC
;;;34     
;;;35     int ferror(FILE* f)
00004c  e1a01000          MOV      r1,r0
;;;36     {
;;;37       /* Your implementation of ferror */
;;;38       return EOF;
000050  e3e00000          MVN      r0,#0
;;;39     }
000054  e12fff1e          BX       lr
;;;40     
                          ENDP

                  _ttywrch PROC
;;;41     
;;;42     void _ttywrch(int ch)
000058  e92d4010          PUSH     {r4,lr}
;;;43     {
00005c  e1a04000          MOV      r4,r0
;;;44       sendchar(ch);
000060  e1a00004          MOV      r0,r4
000064  ebfffffe          BL       sendchar
;;;45     }
000068  e8bd8010          POP      {r4,pc}
;;;46     
                          ENDP

                  _sys_exit PROC
;;;47     
;;;48     void _sys_exit(int return_code)
00006c  e1a00000          MOV      r0,r0
                  |L1.112|
;;;49     {
;;;50       while (1);    /* endless loop */
000070  eafffffe          B        |L1.112|
;;;51     }
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  __stdout
                          DCD      0x00000000
                  __stdin
                          DCD      0x00000000
