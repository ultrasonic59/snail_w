; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\usb_descriptors.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\usb_descriptors.d --cpu=ARM9E --apcs=interwork -O3 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V2 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\usb_descriptors.crf users\usb_descriptors.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  tud_descriptor_device_cb PROC
;;;67     // Application return pointer to descriptor
;;;68     uint8_t const * tud_descriptor_device_cb(void)
000000  e59f00e4          LDR      r0,|L1.236|
;;;69     {
;;;70       return (uint8_t const *) &desc_device;
;;;71     }
000004  e12fff1e          BX       lr
;;;72     
                          ENDP

                  tud_descriptor_configuration_cb PROC
;;;121    // Descriptor contents must exist long enough for transfer to complete
;;;122    uint8_t const * tud_descriptor_configuration_cb(uint8_t index)
000008  e59f00e0          LDR      r0,|L1.240|
;;;123    {
;;;124      (void) index; // for multiple configurations
;;;125      return desc_configuration;
;;;126    }
00000c  e12fff1e          BX       lr
;;;127    
                          ENDP

                  tud_descriptor_bos_cb PROC
;;;162    
;;;163    uint8_t const * tud_descriptor_bos_cb(void)
000010  e59f00dc          LDR      r0,|L1.244|
;;;164    {
;;;165      return desc_bos;
;;;166    }
000014  e12fff1e          BX       lr
;;;167    
                          ENDP

                  tud_descriptor_string_cb PROC
;;;217    // Application return pointer to descriptor, whose contents must exist long enough for transfer to complete
;;;218    uint16_t const* tud_descriptor_string_cb(uint8_t index, uint16_t langid)
000018  e92d41f0          PUSH     {r4-r8,lr}
;;;219    {
;;;220      (void) langid;
;;;221    
;;;222      uint8_t chr_count;
;;;223    
;;;224      if ( index == 0)
;;;225      {
;;;226        memcpy(&_desc_str[1], string_desc_arr[0], 2);
00001c  e59f10d4          LDR      r1,|L1.248|
000020  e59f70d4          LDR      r7,|L1.252|
000024  e3500000          CMP      r0,#0                 ;224
000028  0a000011          BEQ      |L1.116|
;;;227        chr_count = 1;
;;;228      }else
;;;229      {
;;;230        // Note: the 0xEE index string is a Microsoft OS 1.0 Descriptors.
;;;231        // https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/microsoft-defined-usb-descriptors
;;;232    
;;;233        if ( !(index < sizeof(string_desc_arr)/sizeof(string_desc_arr[0])) ) return NULL;
00002c  e3500006          CMP      r0,#6
000030  23a00000          MOVCS    r0,#0
;;;234    
;;;235        const char* str = string_desc_arr[index];
;;;236    
;;;237        // Cap at max char
;;;238        chr_count = strlen(str);
;;;239        if ( chr_count > 31 ) chr_count = 31;
;;;240    
;;;241        // Convert ASCII string into UTF-16
;;;242        for(uint8_t i=0; i<chr_count; i++)
;;;243        {
;;;244          _desc_str[1+i] = str[i];
;;;245        }
;;;246      }
;;;247    
;;;248      // first byte is length (including header), second byte is string type
;;;249      _desc_str[0] = (TUSB_DESC_STRING << 8 ) | (2*chr_count + 2);
;;;250    
;;;251      return _desc_str;
;;;252    }
000034  28bd81f0          POPCS    {r4-r8,pc}
000038  e7916100          LDR      r6,[r1,r0,LSL #2]     ;235
00003c  e1a00006          MOV      r0,r6                 ;238
000040  ebfffffe          BL       strlen
000044  e20010ff          AND      r1,r0,#0xff           ;238
000048  e351001f          CMP      r1,#0x1f              ;239
00004c  83a0101f          MOVHI    r1,#0x1f              ;239
000050  8a000002          BHI      |L1.96|
000054  e2410001          SUB      r0,r1,#1              ;242
000058  e3500000          CMP      r0,#0                 ;242
00005c  da000017          BLE      |L1.192|
                  |L1.96|
000060  e59f3094          LDR      r3,|L1.252|
000064  e3110001          TST      r1,#1
000068  e2462001          SUB      r2,r6,#1              ;242
00006c  1a000009          BNE      |L1.152|
000070  ea000006          B        |L1.144|
                  |L1.116|
000074  e5910000          LDR      r0,[r1,#0]            ;226  ; string_desc_arr
000078  e3a01001          MOV      r1,#1                 ;227
00007c  e5d02000          LDRB     r2,[r0,#0]            ;226
000080  e5c72002          STRB     r2,[r7,#2]            ;226  ; _desc_str
000084  e5d00001          LDRB     r0,[r0,#1]            ;226
000088  e5c70003          STRB     r0,[r7,#3]            ;226  ; _desc_str
00008c  ea000010          B        |L1.212|
                  |L1.144|
000090  e5f20001          LDRB     r0,[r2,#1]!           ;244
000094  e1e300b2          STRH     r0,[r3,#2]!           ;244
                  |L1.152|
000098  e5d24001          LDRB     r4,[r2,#1]
00009c  e2410001          SUB      r0,r1,#1              ;242
0000a0  e1b0c0c0          ASRS     r12,r0,#1             ;242
0000a4  0a000005          BEQ      |L1.192|
                  |L1.168|
0000a8  e5f25002          LDRB     r5,[r2,#2]!
0000ac  e1c340b2          STRH     r4,[r3,#2]            ;244
0000b0  e5d24001          LDRB     r4,[r2,#1]            ;244
0000b4  e25cc001          SUBS     r12,r12,#1            ;244
0000b8  e1e350b4          STRH     r5,[r3,#4]!           ;244
0000bc  1afffff9          BNE      |L1.168|
                  |L1.192|
0000c0  e3500000          CMP      r0,#0                 ;244
0000c4  ba000002          BLT      |L1.212|
0000c8  e7d62000          LDRB     r2,[r6,r0]            ;244
0000cc  e0870080          ADD      r0,r7,r0,LSL #1       ;244
0000d0  e1c020b2          STRH     r2,[r0,#2]            ;244
                  |L1.212|
0000d4  e3a00002          MOV      r0,#2                 ;249
0000d8  e0800081          ADD      r0,r0,r1,LSL #1       ;249
0000dc  e3800c03          ORR      r0,r0,#0x300          ;249
0000e0  e1c700b0          STRH     r0,[r7,#0]            ;249  ; _desc_str
0000e4  e59f0010          LDR      r0,|L1.252|
0000e8  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

                  |L1.236|
                          DCD      ||area_number.6||
                  |L1.240|
                          DCD      ||area_number.6||+0x12
                  |L1.244|
                          DCD      ||area_number.6||+0x74
                  |L1.248|
                          DCD      ||.data||
                  |L1.252|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  _desc_str
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ||<Data1>||
000000  0904              DCB      0x09,0x04

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  desc_device
000000  1201              DCB      0x12,0x01
000002  0210              DCWU     0x0210
000004  ef020140          DCB      0xef,0x02,0x01,0x40
000008  cafe4011          DCWU     0xcafe,0x4011
00000c  0100              DCWU     0x0100
00000e  0102              DCB      0x01,0x02
000010  0301              DCB      0x03,0x01
                  desc_configuration
000012  0902              DCB      0x09,0x02
000014  62000301          DCB      0x62,0x00,0x03,0x01
000018  00803208          DCB      0x00,0x80,0x32,0x08
00001c  0b000202          DCB      0x0b,0x00,0x02,0x02
000020  02000009          DCB      0x02,0x00,0x00,0x09
000024  04000001          DCB      0x04,0x00,0x00,0x01
000028  02020004          DCB      0x02,0x02,0x00,0x04
00002c  05240020          DCB      0x05,0x24,0x00,0x20
000030  01052401          DCB      0x01,0x05,0x24,0x01
000034  00010424          DCB      0x00,0x01,0x04,0x24
000038  02020524          DCB      0x02,0x02,0x05,0x24
00003c  06000107          DCB      0x06,0x00,0x01,0x07
000040  05810308          DCB      0x05,0x81,0x03,0x08
000044  00100904          DCB      0x00,0x10,0x09,0x04
000048  0100020a          DCB      0x01,0x00,0x02,0x0a
00004c  00000007          DCB      0x00,0x00,0x00,0x07
000050  05020200          DCB      0x05,0x02,0x02,0x00
000054  02000705          DCB      0x02,0x00,0x07,0x05
000058  82020002          DCB      0x82,0x02,0x00,0x02
00005c  00090402          DCB      0x00,0x09,0x04,0x02
000060  0002ff00          DCB      0x00,0x02,0xff,0x00
000064  00050705          DCB      0x00,0x05,0x07,0x05
000068  03020002          DCB      0x03,0x02,0x00,0x02
00006c  00070583          DCB      0x00,0x07,0x05,0x83
000070  02000200          DCB      0x02,0x00,0x02,0x00
                  desc_bos
000074  050f3900          DCB      0x05,0x0f,0x39,0x00
000078  02181005          DCB      0x02,0x18,0x10,0x05
00007c  0038b608          DCB      0x00,0x38,0xb6,0x08
000080  34a909a0          DCB      0x34,0xa9,0x09,0xa0
000084  478bfda0          DCB      0x47,0x8b,0xfd,0xa0
000088  768815b6          DCB      0x76,0x88,0x15,0xb6
00008c  65000101          DCB      0x65,0x00,0x01,0x01
000090  011c1005          DCB      0x01,0x1c,0x10,0x05
000094  00df60dd          DCB      0x00,0xdf,0x60,0xdd
000098  d88945c7          DCB      0xd8,0x89,0x45,0xc7
00009c  4c9cd265          DCB      0x4c,0x9c,0xd2,0x65
0000a0  9d9e648a          DCB      0x9d,0x9e,0x64,0x8a
0000a4  9f000003          DCB      0x9f,0x00,0x00,0x03
0000a8  06b20002          DCB      0x06,0xb2,0x00,0x02
0000ac  00                DCB      0x00

                          AREA ||area_number.7||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.constdata||
                  desc_ms_os_20
000000  0a000000          DCB      0x0a,0x00,0x00,0x00
000004  00000306          DCB      0x00,0x00,0x03,0x06
000008  b2000800          DCB      0xb2,0x00,0x08,0x00
00000c  01000000          DCB      0x01,0x00,0x00,0x00
000010  a8000800          DCB      0xa8,0x00,0x08,0x00
000014  02000200          DCB      0x02,0x00,0x02,0x00
000018  a0001400          DCB      0xa0,0x00,0x14,0x00
00001c  03005749          DCB      0x03,0x00,0x57,0x49
000020  4e555342          DCB      0x4e,0x55,0x53,0x42
000024  00000000          DCB      0x00,0x00,0x00,0x00
000028  00000000          DCB      0x00,0x00,0x00,0x00
00002c  00008400          DCB      0x00,0x00,0x84,0x00
000030  04000700          DCB      0x04,0x00,0x07,0x00
000034  2a004400          DCB      0x2a,0x00,0x44,0x00
000038  65007600          DCB      0x65,0x00,0x76,0x00
00003c  69006300          DCB      0x69,0x00,0x63,0x00
000040  65004900          DCB      0x65,0x00,0x49,0x00
000044  6e007400          DCB      0x6e,0x00,0x74,0x00
000048  65007200          DCB      0x65,0x00,0x72,0x00
00004c  66006100          DCB      0x66,0x00,0x61,0x00
000050  63006500          DCB      0x63,0x00,0x65,0x00
000054  47005500          DCB      0x47,0x00,0x55,0x00
000058  49004400          DCB      0x49,0x00,0x44,0x00
00005c  73000000          DCB      0x73,0x00,0x00,0x00
000060  50007b00          DCB      0x50,0x00,0x7b,0x00
000064  39003700          DCB      0x39,0x00,0x37,0x00
000068  35004600          DCB      0x35,0x00,0x46,0x00
00006c  34003400          DCB      0x34,0x00,0x34,0x00
000070  44003900          DCB      0x44,0x00,0x39,0x00
000074  2d003000          DCB      0x2d,0x00,0x30,0x00
000078  44003000          DCB      0x44,0x00,0x30,0x00
00007c  38002d00          DCB      0x38,0x00,0x2d,0x00
000080  34003300          DCB      0x34,0x00,0x33,0x00
000084  46004400          DCB      0x46,0x00,0x44,0x00
000088  2d003800          DCB      0x2d,0x00,0x38,0x00
00008c  42003300          DCB      0x42,0x00,0x33,0x00
000090  45002d00          DCB      0x45,0x00,0x2d,0x00
000094  31003200          DCB      0x31,0x00,0x32,0x00
000098  37004300          DCB      0x37,0x00,0x43,0x00
00009c  41003800          DCB      0x41,0x00,0x38,0x00
0000a0  41004600          DCB      0x41,0x00,0x46,0x00
0000a4  46004600          DCB      0x46,0x00,0x46,0x00
0000a8  39004400          DCB      0x39,0x00,0x44,0x00
0000ac  7d000000          DCB      0x7d,0x00,0x00,0x00
0000b0  0000              DCB      0x00,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  54696e79          DCB      "TinyUSB",0
000004  55534200
000008  54696e79          DCB      "TinyUSB Device",0
00000c  55534220
000010  44657669
000014  636500  
000017  00                DCB      0
000018  31323334          DCB      "123456",0
00001c  353600  
00001f  00                DCB      0
000020  54696e79          DCB      "TinyUSB CDC",0
000024  55534220
000028  43444300
00002c  54696e79          DCB      "TinyUSB WebUSB",0
000030  55534220
000034  57656255
000038  534200  

                          AREA ||.data||, DATA, ALIGN=2

                  string_desc_arr
                          DCD      ||<Data1>||
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x18
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x2c
