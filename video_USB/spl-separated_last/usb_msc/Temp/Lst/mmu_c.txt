; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave --gnu -o.\temp\obj\mmu_c.o --asm_dir=.\Temp\Lst\ --list_dir=.\Temp\Lst\ --depend=.\temp\obj\mmu_c.d --cpu=ARM9E --apcs=interwork -O3 -Otime --diag_suppress=9931 -I.\users\include -I.\..\machine\include -I.\..\periph\include -I.\..\include -I.\..\emwin\Include -I.\..\tinyusb\src -I.\..\tinyusb\hw -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Atmel\SAM9260 -D__RTX -D__UVISION_VERSION=536 -DPCB_TINY200V2 -DCFG_TUSB_MCU=OPT_MCU_F1C100S -DCFG_TUSB_OS=OPT_OS_RTX4 --omf_browse=.\temp\obj\mmu_c.crf ..\system\mmu_c.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  MMU_CleanDCacheArray PROC
;;;19     ////////////////////////////////////////////////////////////////////////////////
;;;20     void MMU_CleanDCacheArray(unsigned long mva, unsigned long num)
000000  e92d4070          PUSH     {r4-r6,lr}
;;;21     {
;;;22       signed long size = num;
000004  e2514000          SUBS     r4,r1,#0
000008  e1a05000          MOV      r5,r0                 ;21
00000c  da000005          BLE      |L1.40|
                  |L1.16|
;;;23       while (size > 0) {
;;;24         MMU_CleanDCacheMVA(mva);
000010  e1a00005          MOV      r0,r5
000014  ebfffffe          BL       MMU_CleanDCacheMVA
000018  e2444020          SUB      r4,r4,#0x20
00001c  e3540000          CMP      r4,#0                 ;23
000020  e2855020          ADD      r5,r5,#0x20           ;23
000024  cafffff9          BGT      |L1.16|
                  |L1.40|
;;;25         mva += CACHE_ALIGN;
;;;26         size -= CACHE_ALIGN;
;;;27       }
;;;28       MMU_DrainWriteBuffer();
000028  e8bd4070          POP      {r4-r6,lr}
00002c  eafffffe          B        MMU_DrainWriteBuffer
;;;29     }
;;;30     
                          ENDP

                  MMU_InvalidateDCacheArray PROC
;;;42     ////////////////////////////////////////////////////////////////////////////////
;;;43     void MMU_InvalidateDCacheArray(unsigned long mva, unsigned long num)
000030  e92d4070          PUSH     {r4-r6,lr}
;;;44     {
;;;45       signed long size = num;
000034  e2514000          SUBS     r4,r1,#0
000038  e1a05000          MOV      r5,r0                 ;44
;;;46       while (size > 0) {
;;;47         MMU_InvalidateDCacheMVA(mva);
;;;48         mva += CACHE_ALIGN;
;;;49         size -= CACHE_ALIGN;
;;;50       }
;;;51     }
00003c  d8bd8070          POPLE    {r4-r6,pc}
                  |L1.64|
000040  e1a00005          MOV      r0,r5                 ;47
000044  ebfffffe          BL       MMU_InvalidateDCacheMVA
000048  e2444020          SUB      r4,r4,#0x20           ;47
00004c  e3540000          CMP      r4,#0                 ;46
000050  e2855020          ADD      r5,r5,#0x20           ;46
000054  cafffff9          BGT      |L1.64|
000058  e8bd8070          POP      {r4-r6,pc}
;;;52     
                          ENDP

